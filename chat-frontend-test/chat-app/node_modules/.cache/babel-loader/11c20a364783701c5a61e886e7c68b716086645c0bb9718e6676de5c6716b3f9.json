{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"messages\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"message\"\n    }, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"User:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(message.user), 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"strong\", null, \"Bot:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString(message.bot), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userInput = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Type your message\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","messages","message","index","key","_createTextVNode","_toDisplayString","user","bot","_cache","$event","userInput","onKeyup","_withKeys","args","$options","sendMessage","placeholder","onClick"],"sources":["/Users/addeen/Desktop/project/chat-frontend-test/chat-app/src/components/TomatyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"messages\">\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\n        <strong>User:</strong> {{ message.user }}<br />\n        <strong>Bot:</strong> {{ message.bot }}\n      </div>\n    </div>\n    <input\n      v-model=\"userInput\"\n      @keyup.enter=\"sendMessage\"\n      placeholder=\"Type your message\"\n    />\n    <button @click=\"sendMessage\">Send</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      userInput: '',\n      messages: [],\n    };\n  },\n  methods: {\n    async sendMessage() {\n        if (this.userInput.trim() === '') return;\n\n        const userMessage = this.userInput;\n        this.messages.push({ user: userMessage, bot: '' });\n        this.userInput = '';\n        \n        try {\n            const response = await axios.post('http:localhost:8080/chat/tomaty', {\n                message: userMessage,\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            console.log(response.data); // Log the entire response\n            const botReply = response.data.response.candidates[0].content.parts[0].text;\n            this.messages[this.messages.length - 1].bot = botReply;\n        } catch (error) {\n            console.error('Error sending message:', error.response ? error.response.data : error.message);\n        }\n    },\n},\n\n};\n</script>\n\n<style scoped>\n.chat-container {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n}\n.messages {\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  padding: 10px;\n}\n.message {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAU;;uBADvBC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAKM,OALNC,UAKM,I,kBAJJH,mBAAA,CAGMI,SAAA,QANZC,WAAA,CAGsCC,KAAA,CAAAC,QAAQ,EAH9C,CAGmBC,OAAO,EAAEC,KAAK;yBAA3BT,mBAAA,CAGM;MAHqCU,GAAG,EAAED,KAAK;MAAEV,KAAK,EAAC;kCAC3DG,mBAAA,CAAsB,gBAAd,OAAK,sBAJrBS,gBAAA,CAI8B,GAAC,GAAAC,gBAAA,CAAGJ,OAAO,CAACK,IAAI,kB,0BAAGX,mBAAA,CAAM,sC,0BAC/CA,mBAAA,CAAqB,gBAAb,MAAI,sBALpBS,gBAAA,CAK6B,GAAC,GAAAC,gBAAA,CAAGJ,OAAO,CAACM,GAAG,iB;oDAGxCZ,mBAAA,CAIE;IAZN,uBAAAa,MAAA,QAAAA,MAAA,MAAAC,MAAA,IASeV,KAAA,CAAAW,SAAS,GAAAD,MAAA;IACjBE,OAAK,EAAAH,MAAA,QAAAA,MAAA,MAVZI,SAAA,KAAAC,IAAA,KAUoBC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IACzBG,WAAW,EAAC;iEAFHjB,KAAA,CAAAW,SAAS,E,GAIpBf,mBAAA,CAA0C;IAAjCsB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}