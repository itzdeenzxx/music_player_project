{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"message\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.userMessage = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"พิมพ์ข้อความที่นี่...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.userMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"ส่ง\")]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","messages","message","index","key","class","_createElementVNode","_toDisplayString","_cache","$event","userMessage","onKeyup","_withKeys","args","$options","sendMessage","placeholder","onClick"],"sources":["/Users/addeen/Desktop/project/chat-frontend-test/chat-app/src/components/TomatyComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\n      <p>{{ message }}</p>\n    </div>\n    <input v-model=\"userMessage\" @keyup.enter=\"sendMessage\" placeholder=\"พิมพ์ข้อความที่นี่...\" />\n    <button @click=\"sendMessage\">ส่ง</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      userMessage: '',\n      messages: []\n    };\n  },\n  methods: {\n    async sendMessage() {\n      try {\n        const response = await axios.post('http://localhost:3000/chat/tomaty', {\n          message: this.userMessage\n        });\n        const botReply = response.data.response.candidates[0].content.parts[0].text; // ดึงข้อความที่ต้องการ\n\n        // แสดงข้อความที่ผู้ใช้พิมพ์และคำตอบจาก API\n        this.messages.push(`คุณ: ${this.userMessage}`);\n        this.messages.push(`Tomaty: ${botReply}`);\n        \n        // เคลียร์ข้อความใน input\n        this.userMessage = '';\n      } catch (error) {\n        console.error('Error sending message:', error);\n        this.messages.push('Tomaty: ขอโทษค่ะ มีข้อผิดพลาดเกิดขึ้น!');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.message {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":";;uBACEA,mBAAA,CAMM,e,kBALJA,mBAAA,CAEMC,SAAA,QAJVC,WAAA,CAEoCC,KAAA,CAAAC,QAAQ,EAF5C,CAEiBC,OAAO,EAAEC,KAAK;yBAA3BN,mBAAA,CAEM;MAFqCO,GAAG,EAAED,KAAK;MAAEE,KAAK,EAAC;QAC3DC,mBAAA,CAAoB,WAAAC,gBAAA,CAAdL,OAAO,iB;kDAEfI,mBAAA,CAA8F;IALlG,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKoBT,KAAA,CAAAU,WAAW,GAAAD,MAAA;IAAGE,OAAK,EAAAH,MAAA,QAAAA,MAAA,MALvCI,SAAA,KAAAC,IAAA,KAK+CC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;IAAEG,WAAW,EAAC;iEAApDhB,KAAA,CAAAU,WAAW,E,GAC3BJ,mBAAA,CAAyC;IAAhCW,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,KAAG,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}