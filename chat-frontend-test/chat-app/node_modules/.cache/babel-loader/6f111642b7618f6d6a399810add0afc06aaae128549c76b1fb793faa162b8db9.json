{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userInput: '',\n      messages: [],\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async sendMessage() {\n      if (this.userInput.trim() === '') return;\n      const userMessage = this.userInput;\n      this.messages.push({\n        user: userMessage,\n        bot: ''\n      });\n      this.userInput = '';\n      try {\n        const response = await axios.post('http://localhost:3000/chat/tomaty', {\n          message: userMessage\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(response.data); // Log the entire response\n        const botReply = response.data.response.candidates[0].content.parts[0].text;\n        this.messages[this.messages.length - 1].bot = botReply;\n      } catch (error) {\n        console.error('Error sending message:', error.response ? error.response.data : error.message);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userInput","messages","errorMessage","methods","sendMessage","trim","userMessage","push","user","bot","response","post","message","headers","console","log","botReply","candidates","content","parts","text","length","error"],"sources":["/Users/addeen/Desktop/project/chat-frontend-test/chat-app/src/components/TomatyComponent.vue"],"sourcesContent":["<template>\n  <div class=\"chat-container\">\n    <div class=\"messages\">\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"message\">\n        <strong>User:</strong> {{ message.user }}<br />\n        <strong>Bot:</strong> {{ message.bot }}\n      </div>\n    </div>\n    <input\n      v-model=\"userInput\"\n      @keyup.enter=\"sendMessage\"\n      placeholder=\"Type your message\"\n    />\n    <button @click=\"sendMessage\">Send</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n        userInput: '',\n        messages: [],\n        errorMessage: '',\n    };\n},\n  methods: {\n    async sendMessage() {\n        if (this.userInput.trim() === '') return;\n\n        const userMessage = this.userInput;\n        this.messages.push({ user: userMessage, bot: '' });\n        this.userInput = '';\n        \n        try {\n            const response = await axios.post('http://localhost:3000/chat/tomaty', {\n                message: userMessage,\n            }, {\n                headers: {\n                    'Content-Type': 'application/json',\n                }\n            });\n\n            console.log(response.data); // Log the entire response\n            const botReply = response.data.response.candidates[0].content.parts[0].text;\n            this.messages[this.messages.length - 1].bot = botReply;\n        } catch (error) {\n            console.error('Error sending message:', error.response ? error.response.data : error.message);\n        }\n    },\n},\n\n};\n</script>\n\n<style scoped>\n.chat-container {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n}\n.messages {\n  height: 300px;\n  overflow-y: auto;\n  border: 1px solid #ddd;\n  margin-bottom: 10px;\n  padding: 10px;\n}\n.message {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACCC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAChB,IAAI,IAAI,CAACJ,SAAS,CAACK,IAAI,CAAC,MAAM,EAAE,EAAE;MAElC,MAAMC,WAAU,GAAI,IAAI,CAACN,SAAS;MAClC,IAAI,CAACC,QAAQ,CAACM,IAAI,CAAC;QAAEC,IAAI,EAAEF,WAAW;QAAEG,GAAG,EAAE;MAAG,CAAC,CAAC;MAClD,IAAI,CAACT,SAAQ,GAAI,EAAE;MAEnB,IAAI;QACA,MAAMU,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,mCAAmC,EAAE;UACnEC,OAAO,EAAEN;QACb,CAAC,EAAE;UACCO,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACX,IAAI,CAAC,EAAE;QAC5B,MAAMiB,QAAO,GAAIN,QAAQ,CAACX,IAAI,CAACW,QAAQ,CAACO,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;QAC3E,IAAI,CAACnB,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACoB,MAAK,GAAI,CAAC,CAAC,CAACZ,GAAE,GAAIO,QAAQ;MAC1D,EAAE,OAAOM,KAAK,EAAE;QACZR,OAAO,CAACQ,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACZ,QAAO,GAAIY,KAAK,CAACZ,QAAQ,CAACX,IAAG,GAAIuB,KAAK,CAACV,OAAO,CAAC;MACjG;IACJ;EACJ;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}