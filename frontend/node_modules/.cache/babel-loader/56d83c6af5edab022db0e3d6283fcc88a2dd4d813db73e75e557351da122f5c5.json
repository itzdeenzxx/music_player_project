{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TheRegister',\n  data() {\n    return {\n      userEmail: null,\n      userName: null,\n      password: null,\n      backendMessage: null,\n      errorMessage: null,\n      showPassword: false\n    };\n  },\n  mounted() {\n    this.$refs.userEmail.focus();\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    async handleSubmit() {\n      let members = {\n        userEmail: this.userEmail,\n        userName: this.userName,\n        password: this.password\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/users', members);\n        this.backendMessage = response.data.messageregister;\n        this.errorMessage = null;\n      } catch (err) {\n        this.backendMessage = 'fail';\n        this.errorMessage = 'Registration failed. Please try again later.';\n        console.log(err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userEmail","userName","password","backendMessage","errorMessage","showPassword","mounted","$refs","focus","methods","togglePasswordVisibility","handleSubmit","members","response","post","messageregister","err","console","log"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"row d-flex justify-content-center\">\r\n        <div class=\"col-lg-6 col-md-8 col-sm-12\">\r\n            <form @submit.prevent=\"handleSubmit\">\r\n                <div class=\"card row mt-5\" style=\"background-color: #EEFFEE;\">\r\n                    <div class=\"card-body\">\r\n                        <h1 class=\"card-title text-secondary\">Register</h1>\r\n                        \r\n                        <!-- Email Field -->\r\n                        <div class=\"col-lg-12 mb-3\">\r\n                            <div class=\"form-floating mb-3\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"userEmail\" \r\n                                       autocomplete=\"off\" required placeholder=\"Email\" \r\n                                       v-model.trim=\"userEmail\" ref=\"userEmail\">\r\n                                <label for=\"userEmail\">Email</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Name Field -->\r\n                        <div class=\"col-lg-12 mb-3\">\r\n                            <div class=\"form-floating mb-3\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"userName\"  \r\n                                       autocomplete=\"off\" required placeholder=\"Name\" \r\n                                       v-model.trim=\"userName\">\r\n                                <label for=\"userName\">Name</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Password Field with Toggle -->\r\n                        <div class=\"col-lg-12 mb-3\">\r\n                            <div class=\"form-floating mb-3\">\r\n                                <input :type=\"showPassword ? 'text' : 'password'\" class=\"form-control\" \r\n                                       id=\"password\" autocomplete=\"off\" required \r\n                                       placeholder=\"Password\" v-model.trim=\"password\">\r\n                                <label for=\"password\">Password</label>\r\n                                <span @click=\"togglePasswordVisibility\" class=\"password-toggle\">\r\n                                    {{ showPassword ? 'Hide' : 'Show' }}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Submit Button -->\r\n                        <div class=\"col-sm-12\">\r\n                            <button class=\"btn btn-primary float-end\" type=\"submit\">\r\n                                <i class=\"bi bi-check-lg\"></i>&nbsp;ตกลง\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <!-- Success and Error Messages -->\r\n            <p v-if=\"backendMessage === 'success'\" class=\"alert alert-success mt-3\">\r\n                ลงทะเบียนสำเร็จ - {{ backendMessage }}\r\n            </p>\r\n            <p v-else-if=\"backendMessage === 'fail'\" class=\"alert alert-danger mt-3\">\r\n                ลงทะเบียนผิดพลาด - {{ backendMessage }}\r\n            </p>\r\n            <p v-if=\"errorMessage\" class=\"alert alert-danger mt-3\">\r\n                {{ errorMessage }}\r\n            </p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'TheRegister',\r\n    data() {\r\n        return {\r\n            userEmail: null,\r\n            userName: null,\r\n            password: null,\r\n            backendMessage: null,\r\n            errorMessage: null,\r\n            showPassword: false,\r\n        };\r\n    },\r\n    mounted() {\r\n        this.$refs.userEmail.focus();\r\n    },\r\n    methods: {\r\n        togglePasswordVisibility() {\r\n            this.showPassword = !this.showPassword;\r\n        },\r\n        async handleSubmit() {\r\n            let members = {\r\n                userEmail: this.userEmail,\r\n                userName: this.userName,\r\n                password: this.password,\r\n            };\r\n            try {\r\n                const response = await axios.post('http://localhost:3000/users', members);\r\n                this.backendMessage = response.data.messageregister;\r\n                this.errorMessage = null;\r\n            } catch (err) {\r\n                this.backendMessage = 'fail';\r\n                this.errorMessage = 'Registration failed. Please try again later.';\r\n                console.log(err);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  background-color: #fffdfd;\r\n}\r\n.card-body {\r\n  padding: 2rem;\r\n}\r\n.card-title {\r\n  font-size: 1.5rem;\r\n  font-weight: 500;\r\n}\r\n.form-floating > input::placeholder {\r\n  color: #6c757d;\r\n}\r\n.btn-primary {\r\n  background-color: #007bff;\r\n  border: none;\r\n}\r\n.btn-primary:hover {\r\n  background-color: #0056b3;\r\n}\r\n.alert {\r\n  font-size: 0.875rem;\r\n}\r\n.password-toggle {\r\n  cursor: pointer;\r\n  font-size: 0.9rem;\r\n  color: #007bff;\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 15px;\r\n}\r\n</style>\r\n"],"mappings":"AAkEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,KAAK,CAACP,SAAS,CAACQ,KAAK,CAAC,CAAC;EAChC,CAAC;EACDC,OAAO,EAAE;IACLC,wBAAwBA,CAAA,EAAG;MACvB,IAAI,CAACL,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IAC1C,CAAC;IACD,MAAMM,YAAYA,CAAA,EAAG;MACjB,IAAIC,OAAM,GAAI;QACVZ,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACnB,CAAC;MACD,IAAI;QACA,MAAMW,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,6BAA6B,EAAEF,OAAO,CAAC;QACzE,IAAI,CAACT,cAAa,GAAIU,QAAQ,CAACd,IAAI,CAACgB,eAAe;QACnD,IAAI,CAACX,YAAW,GAAI,IAAI;MAC5B,EAAE,OAAOY,GAAG,EAAE;QACV,IAAI,CAACb,cAAa,GAAI,MAAM;QAC5B,IAAI,CAACC,YAAW,GAAI,8CAA8C;QAClEa,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MACpB;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}