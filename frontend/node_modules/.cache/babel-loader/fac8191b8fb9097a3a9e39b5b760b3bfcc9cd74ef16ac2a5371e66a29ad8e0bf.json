{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from '../event-bus';\nimport axios from 'axios';\n// import { withCtx } from 'vue';\nexport default {\n  name: 'TheLogin',\n  data() {\n    return {\n      loginname: null,\n      password: null,\n      backendMessage: null,\n      memEmail: null,\n      memName: null,\n      dutyId: null\n    };\n  },\n  mounted() {\n    if (sessionStorage.getItem('memEmail' != null)) {\n      this.$router.push('/pagemember');\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      let members = {\n        loginname: this.loginname,\n        password: this.password\n      };\n      try {\n        const response = await axios.post(`http://localhost:3000/members/login`, members);\n        this.backendMessage = response.data.messagelogin;\n        if (this.backendMessage == 'success') {\n          await this.chkSession();\n          EventBus.emit('loginok');\n          this.$router.push('/pagemember');\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async chkSession() {\n      await axios.get(`http://localhost:3000/members/getss`).then(res => {\n        console.log(res.data);\n        this.memEmail = res.data.email;\n        this.memName = res.data.name;\n        this.dutyId = res.data.duty;\n        sessionStorage.setItem('memName', res.data.name);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["EventBus","axios","name","data","loginname","password","backendMessage","memEmail","memName","dutyId","mounted","sessionStorage","getItem","$router","push","methods","handleSubmit","members","response","post","messagelogin","chkSession","emit","err","console","log","get","then","res","email","duty","setItem","catch","error"],"sources":["D:\\Users\\Student\\Desktop\\123\\project_webtech\\frontend\\src\\components\\TheLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"row mt-5\">\r\n    <div class=\"col-sm-12 col-md-6 col-lg-6 mb-5\">\r\n      <img src=\"../assets/tomato logo.png\" alt=\"\" wIdth=\"80%\">\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-6 col-lg-6 mb3\">\r\n      <!-- เมื่อสั่ง Submit ให้เรียก Function handleSubmit -->\r\n      <form @submit.prevent=\"handleSubmit()\">\r\n        <div class=\"custom-column\">\r\n          <div class=\"form-floating mb-3\">\r\n            <input class=\"form-control\" type=\"text\" id=\"loginname\" v-model=\"loginname\" autocomplete=\"off\" required\r\n              autofocus placeholder=\"loginname\">\r\n            <label for=\"loginname\">Loginname</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12  col-md-10 col-lg-8\">\r\n          <div class=\"form-floating mb-3\">\r\n            <input class=\"form-control\" type=\"password\" Id=\"password\" v-model=\"password\" required\r\n              placeholder=\"Password\">\r\n            <label for=\"password\">Password</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12  col-md-6 mb-3\">\r\n            <router-link to=\"/register\" style=\"text-decoration: none;\">\r\n              <a href=\"#\" class=\"btn btn-outline-danger\">\r\n                <i class=\"bi bi-heart-fill\"></i>&nbsp;R</a>\r\n            </router-link>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-6\">\r\n            <button class=\"btn btn-primary \" type=\"submit\" style=\"wIdth: 6rem;\">\r\n              <i class=\"bi bi-check-lg\"></i>&nbsp;login</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- ส่วนแสดงสถานะ จากการตอบกลับของ Backend -->\r\n  <p v-if=\"backendMessage == 'success'\" class=\"alert alert-success \">\r\n    เข้าระบบสำเร็จ-{{ backendMessage }}</p>\r\n  <p v-else-if=\"backendMessage == 'fail'\" class=\"alert alert-danger\">\r\n    เข้าระบบผิดพลาด-{{ backendMessage }}</p>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../event-bus';\r\nimport axios from 'axios'\r\n// import { withCtx } from 'vue';\r\nexport default {\r\n  name: 'TheLogin',\r\n  data() {\r\n    return {\r\n      loginname: null,\r\n      password: null,\r\n      backendMessage: null,\r\n      memEmail: null,\r\n      memName: null,\r\n      dutyId: null,\r\n    }\r\n  },\r\n  mounted() {\r\n    if (sessionStorage.getItem('memEmail' != null)) {\r\n      this.$router.push('/pagemember')\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      let members = {\r\n        loginname: this.loginname,\r\n        password: this.password\r\n      }\r\n      try {\r\n        const response = await axios.post(\r\n          `http://localhost:3000/members/login`, members\r\n        );\r\n        this.backendMessage = response.data.messagelogin\r\n        if (this.backendMessage == 'success') {\r\n          await this.chkSession()\r\n          EventBus.emit('loginok')\r\n          this.$router.push('/pagemember')\r\n        }\r\n\r\n      }\r\n      catch (err) {\r\n        console.log(err)\r\n      }\r\n    },\r\n    async chkSession() {\r\n      await axios.get(`http://localhost:3000/members/getss`)\r\n        .then(res => {\r\n          console.log(res.data)\r\n          this.memEmail = res.data.email\r\n          this.memName = res.data.name\r\n          this.dutyId = res.data.duty\r\n          sessionStorage.setItem('memName', res.data.name)\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\r\n\r\nbody {\r\n  font-family: 'Poppins', sans-serif;\r\n  background-color: #FEFDD3;\r\n  /* Light background color */\r\n  color: #333;\r\n}\r\n\r\n.icon-bar {\r\n  background-color: #BD1D04;\r\n  /* Top bar color */\r\n  position: sticky;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n}\r\n\r\n.icon-bar a {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #FFF;\r\n  /* White text for contrast */\r\n  padding: 10px 15px;\r\n}\r\n\r\n.icon-bar a i {\r\n  font-size: 18px;\r\n  margin-bottom: 5px;\r\n}\r\n.custom-column {\r\n  width: 100%; /* เทียบเท่ากับ col-sm-12 */\r\n  padding-top: 25%;\r\n}\r\n\r\n@media (min-width: 768px) { /* สำหรับหน้าจอขนาด md */\r\n  .custom-column {\r\n    width: 83.3333%; /* เทียบเท่ากับ col-md-10 (10/12 * 100%) */\r\n  }\r\n}\r\n\r\n@media (min-width: 992px) { /* สำหรับหน้าจอขนาด lg */\r\n  .custom-column {\r\n    width: 66.6667%; /* เทียบเท่ากับ col-lg-8 (8/12 * 100%) */\r\n  }\r\n}\r\n\r\n</style>\r\n"],"mappings":";AA6CA,SAASA,QAAO,QAAS,cAAc;AACvC,OAAOC,KAAI,MAAO,OAAM;AACxB;AACA,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,cAAc,CAACC,OAAO,CAAC,UAAS,IAAK,IAAI,CAAC,EAAE;MAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa;IACjC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAIC,OAAM,GAAI;QACZb,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA;MACjB;MACA,IAAI;QACF,MAAMa,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAC/B,qCAAqC,EAAEF,OACzC,CAAC;QACD,IAAI,CAACX,cAAa,GAAIY,QAAQ,CAACf,IAAI,CAACiB,YAAW;QAC/C,IAAI,IAAI,CAACd,cAAa,IAAK,SAAS,EAAE;UACpC,MAAM,IAAI,CAACe,UAAU,CAAC;UACtBrB,QAAQ,CAACsB,IAAI,CAAC,SAAS;UACvB,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,aAAa;QACjC;MAEF,EACA,OAAOS,GAAG,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,GAAG;MACjB;IACF,CAAC;IACD,MAAMF,UAAUA,CAAA,EAAG;MACjB,MAAMpB,KAAK,CAACyB,GAAG,CAAC,qCAAqC,EAClDC,IAAI,CAACC,GAAE,IAAK;QACXJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACzB,IAAI;QACpB,IAAI,CAACI,QAAO,GAAIqB,GAAG,CAACzB,IAAI,CAAC0B,KAAI;QAC7B,IAAI,CAACrB,OAAM,GAAIoB,GAAG,CAACzB,IAAI,CAACD,IAAG;QAC3B,IAAI,CAACO,MAAK,GAAImB,GAAG,CAACzB,IAAI,CAAC2B,IAAG;QAC1BnB,cAAc,CAACoB,OAAO,CAAC,SAAS,EAAEH,GAAG,CAACzB,IAAI,CAACD,IAAI;MACjD,CAAC,EACA8B,KAAK,CAACT,GAAE,IAAK;QACZC,OAAO,CAACS,KAAK,CAACV,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}