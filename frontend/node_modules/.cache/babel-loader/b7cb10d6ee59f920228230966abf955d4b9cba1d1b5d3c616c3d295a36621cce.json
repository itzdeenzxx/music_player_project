{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n// import { ref, computed, onMounted } from 'vue'\n\nexport default {\n  name: 'EnhancedMusicPlayer',\n  data() {\n    return {\n      musics: [],\n      currentPlayingIndex: -1,\n      isPlaying: false,\n      currentTime: 0,\n      duration: 0,\n      volume: 80,\n      previousVolume: 80,\n      player: null,\n      isPlayerHidden: false,\n      hideVideo: false,\n      isRepeatEnabled: false,\n      isShuffle: false,\n      currentTab: 'classic',\n      playbackHistory: [],\n      albums: [],\n      genreFilters: [],\n      selectedGenre: 'all',\n      isLoading: false,\n      error: null,\n      tabs: [{\n        id: 'classic',\n        name: 'Classic'\n      }, {\n        id: 'cards',\n        name: 'Popular'\n      }, {\n        id: 'albums',\n        name: 'Albums'\n      }, {\n        id: 'genres',\n        name: 'Genres'\n      }]\n    };\n  },\n  computed: {\n    currentMusic() {\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null;\n    },\n    progress() {\n      return this.currentTime / this.duration * 100 || 0;\n    },\n    popularTracks() {\n      return [...this.musics].sort((a, b) => b.views - a.views).slice(0, 6);\n    },\n    filteredMusics() {\n      if (this.selectedGenre === 'all') return this.musics;\n      return this.musics.filter(music => music.genre === this.selectedGenre);\n    },\n    groupedAlbums() {\n      const albums = {};\n      this.musics.forEach(music => {\n        if (!albums[music.ms_album]) {\n          albums[music.ms_album] = {\n            name: music.ms_album,\n            tracks: [],\n            artist: music.artist,\n            coverUrl: music.albumCover\n          };\n        }\n        albums[music.ms_album].tracks.push(music);\n      });\n      return Object.values(albums);\n    }\n  },\n  methods: {\n    // YouTube API Integration\n    loadYouTubeAPI() {\n      return new Promise(resolve => {\n        if (window.YT) {\n          resolve(window.YT);\n          return;\n        }\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          resolve(window.YT);\n        };\n      });\n    },\n    async initYouTubePlayer() {\n      try {\n        await this.loadYouTubeAPI();\n        this.player = new window.YT.Player('youtube-player', {\n          height: '180',\n          width: '100%',\n          playerVars: {\n            controls: 0,\n            disablekb: 1,\n            enablejsapi: 1,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0,\n            iv_load_policy: 3\n          },\n          events: {\n            onReady: this.onPlayerReady,\n            onStateChange: this.onPlayerStateChange,\n            onError: this.onPlayerError\n          }\n        });\n      } catch (error) {\n        console.error('Failed to initialize YouTube player:', error);\n        this.error = 'Failed to load YouTube player';\n      }\n    },\n    // Player Event Handlers\n    onPlayerReady(event) {\n      this.player.setVolume(this.volume);\n      if (this.currentMusic) {\n        this.loadCurrentMusic();\n      }\n    },\n    onPlayerStateChange(event) {\n      // YouTube states: -1 (unstarted), 0 (ended), 1 (playing), 2 (paused), 3 (buffering), 5 (video cued)\n      switch (event.data) {\n        case YT.PlayerState.PLAYING:\n          this.isPlaying = true;\n          this.startTimeTracking();\n          break;\n        case YT.PlayerState.PAUSED:\n          this.isPlaying = false;\n          this.stopTimeTracking();\n          break;\n        case YT.PlayerState.ENDED:\n          this.handleTrackEnd();\n          break;\n      }\n    },\n    onPlayerError(event) {\n      console.error('YouTube Player Error:', event);\n      this.error = 'Failed to play video';\n      this.nextTrack(); // Try playing next track on error\n    },\n    // Playback Control Methods\n    async playMusic(index) {\n      if (this.currentPlayingIndex === index && this.isPlaying) {\n        this.pauseMusic();\n        return;\n      }\n      try {\n        this.isLoading = true;\n        this.currentPlayingIndex = index;\n        if (!this.player) {\n          await this.initYouTubePlayer();\n        }\n        const videoId = this.getYouTubeIdFromUrl(this.musics[index].ms_path);\n        if (!videoId) {\n          throw new Error('Invalid YouTube URL');\n        }\n        this.player.loadVideoById(videoId);\n        this.playbackHistory.push(index);\n        this.isPlaying = true;\n      } catch (error) {\n        console.error('Error playing music:', error);\n        this.error = 'Failed to play track';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    pauseMusic() {\n      if (this.player) {\n        this.player.pauseVideo();\n        this.isPlaying = false;\n      }\n    },\n    togglePlay() {\n      if (!this.player) return;\n      if (this.isPlaying) {\n        this.player.pauseVideo();\n      } else {\n        this.player.playVideo();\n      }\n    },\n    async nextTrack() {\n      if (this.isShuffle) {\n        const randomIndex = Math.floor(Math.random() * this.musics.length);\n        await this.playMusic(randomIndex);\n        return;\n      }\n      if (this.currentPlayingIndex < this.musics.length - 1) {\n        await this.playMusic(this.currentPlayingIndex + 1);\n      } else if (this.isRepeatEnabled) {\n        await this.playMusic(0);\n      }\n    },\n    async previousTrack() {\n      if (this.currentTime > 3) {\n        // If current time > 3 seconds, restart current track\n        this.player.seekTo(0);\n        return;\n      }\n      if (this.playbackHistory.length > 1) {\n        this.playbackHistory.pop(); // Remove current track\n        const previousIndex = this.playbackHistory.pop(); // Get & remove previous track\n        await this.playMusic(previousIndex);\n      } else if (this.currentPlayingIndex > 0) {\n        await this.playMusic(this.currentPlayingIndex - 1);\n      }\n    },\n    // Time and Progress Methods\n    startTimeTracking() {\n      this.stopTimeTracking();\n      this.timeTracker = setInterval(() => {\n        if (this.player && this.player.getCurrentTime) {\n          this.currentTime = this.player.getCurrentTime();\n          this.duration = this.player.getDuration();\n        }\n      }, 1000);\n    },\n    stopTimeTracking() {\n      if (this.timeTracker) {\n        clearInterval(this.timeTracker);\n      }\n    },\n    handleTrackEnd() {\n      if (this.isRepeatEnabled) {\n        this.player.seekTo(0);\n        this.player.playVideo();\n      } else {\n        this.nextTrack();\n      }\n    },\n    seekTime(event) {\n      if (!this.player || !this.duration) return;\n      const rect = event.currentTarget.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const percentage = x / rect.width;\n      const seekTime = percentage * this.duration;\n      this.player.seekTo(seekTime);\n    },\n    // Volume Control Methods\n    toggleMute() {\n      if (this.volume === 0) {\n        this.volume = this.previousVolume;\n      } else {\n        this.previousVolume = this.volume;\n        this.volume = 0;\n      }\n      if (this.player) {\n        this.player.setVolume(this.volume);\n      }\n    },\n    adjustVolume(event) {\n      const rect = event.currentTarget.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const percentage = Math.max(0, Math.min(100, x / rect.width * 100));\n      this.volume = Math.round(percentage);\n      if (this.player) {\n        this.player.setVolume(this.volume);\n      }\n    },\n    // UI Control Methods\n    togglePlayer() {\n      this.isPlayerHidden = !this.isPlayerHidden;\n    },\n    toggleVideo() {\n      this.hideVideo = !this.hideVideo;\n    },\n    toggleRepeat() {\n      this.isRepeatEnabled = !this.isRepeatEnabled;\n    },\n    toggleShuffle() {\n      this.isShuffle = !this.isShuffle;\n    },\n    // Utility Methods\n    getYouTubeIdFromUrl(url) {\n      const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n      const match = url.match(regExp);\n      return match && match[7].length === 11 ? match[7] : false;\n    },\n    formatTime(seconds) {\n      if (!seconds) return '0:00';\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = Math.floor(seconds % 60);\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    },\n    formatViews(views) {\n      return new Intl.NumberFormat('en-US', {\n        notation: 'compact'\n      }).format(views);\n    },\n    // Data Fetching Methods\n    async fetchMusics() {\n      try {\n        this.isLoading = true;\n        const response = await fetch('http://localhost:3000/musics');\n        if (!response.ok) throw new Error('Failed to fetch music data');\n        this.musics = await response.json();\n\n        // Extract unique genres\n        this.genreFilters = ['all', ...new Set(this.musics.map(music => music.genre))];\n      } catch (error) {\n        console.error('Error fetching music:', error);\n        this.error = 'Failed to load music data';\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async fetchAlbums() {\n      try {\n        this.isLoading = true;\n        const response = await fetch('http://localhost:3000/albums');\n        if (!response.ok) throw new Error('Failed to fetch album data');\n        this.albums = await response.json();\n      } catch (error) {\n        console.error('Error fetching albums:', error);\n        this.error = 'Failed to load album data';\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  },\n  watch: {\n    currentTab: {\n      immediate: true,\n      handler(newTab) {\n        if (newTab === 'albums' && this.albums.length === 0) {\n          this.fetchAlbums();\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchMusics();\n    this.initYouTubePlayer();\n  },\n  beforeUnmount() {\n    this.stopTimeTracking();\n    if (this.player) {\n      this.player.destroy();\n    }\n  }\n};","map":{"version":3,"names":["name","data","musics","currentPlayingIndex","isPlaying","currentTime","duration","volume","previousVolume","player","isPlayerHidden","hideVideo","isRepeatEnabled","isShuffle","currentTab","playbackHistory","albums","genreFilters","selectedGenre","isLoading","error","tabs","id","computed","currentMusic","progress","popularTracks","sort","a","b","views","slice","filteredMusics","filter","music","genre","groupedAlbums","forEach","ms_album","tracks","artist","coverUrl","albumCover","push","Object","values","methods","loadYouTubeAPI","Promise","resolve","window","YT","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initYouTubePlayer","Player","height","width","playerVars","controls","disablekb","enablejsapi","modestbranding","rel","showinfo","iv_load_policy","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","onError","onPlayerError","console","event","setVolume","loadCurrentMusic","PlayerState","PLAYING","startTimeTracking","PAUSED","stopTimeTracking","ENDED","handleTrackEnd","nextTrack","playMusic","index","pauseMusic","videoId","getYouTubeIdFromUrl","ms_path","Error","loadVideoById","pauseVideo","togglePlay","playVideo","randomIndex","Math","floor","random","length","previousTrack","seekTo","pop","previousIndex","timeTracker","setInterval","getCurrentTime","getDuration","clearInterval","seekTime","rect","currentTarget","getBoundingClientRect","x","clientX","left","percentage","toggleMute","adjustVolume","max","min","round","togglePlayer","toggleVideo","toggleRepeat","toggleShuffle","url","regExp","match","formatTime","seconds","minutes","remainingSeconds","toString","padStart","formatViews","Intl","NumberFormat","notation","format","fetchMusics","response","fetch","ok","json","Set","map","fetchAlbums","watch","immediate","handler","newTab","mounted","beforeUnmount","destroy"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-100\">\r\n    <!-- Player Control (Fixed Position) -->\r\n    <div class=\"fixed bottom-0 left-0 w-80 bg-white shadow-lg rounded-tr-xl p-4 transition-transform duration-300\" \r\n         :class=\"{'translate-y-full': isPlayerHidden}\">\r\n      <button @click=\"togglePlayer\" \r\n              class=\"absolute -top-10 right-4 bg-white p-2 rounded-t-lg shadow-md\">\r\n        <span v-if=\"isPlayerHidden\">Show Player</span>\r\n        <span v-else>Hide Player</span>\r\n      </button>\r\n      \r\n      <!-- YouTube Player -->\r\n      <div class=\"relative\">\r\n        <div id=\"youtube-player\" :class=\"{'hidden': hideVideo}\"></div>\r\n        <button @click=\"toggleVideo\" \r\n                class=\"absolute top-2 right-2 bg-black/50 text-white p-1 rounded\">\r\n          {{ hideVideo ? 'Show Video' : 'Hide Video' }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Player Controls -->\r\n      <div class=\"mt-4\">\r\n        <div class=\"flex items-center justify-between mb-4\">\r\n          <div class=\"flex-1\">\r\n            <p class=\"text-sm font-bold truncate\">{{ currentMusic?.ms_name || 'Select a track' }}</p>\r\n            <p class=\"text-xs text-gray-500 truncate\">{{ currentMusic?.ms_album || 'No album' }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Progress Bar -->\r\n        <div class=\"relative h-1 bg-gray-200 rounded cursor-pointer\" @click=\"seekTime\">\r\n          <div class=\"absolute h-full bg-green-500 rounded\" \r\n               :style=\"{ width: `${progress}%` }\"></div>\r\n        </div>\r\n\r\n        <!-- Time Display -->\r\n        <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n          <span>{{ formatTime(currentTime) }}</span>\r\n          <span>{{ formatTime(duration) }}</span>\r\n        </div>\r\n\r\n        <!-- Control Buttons -->\r\n        <div class=\"flex items-center justify-between mt-4\">\r\n          <button @click=\"toggleRepeat\" \r\n                  class=\"p-2 hover:text-green-500\"\r\n                  :class=\"{ 'text-green-500': isRepeatEnabled }\">\r\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M4 4v5h5M4 9l5-5M20 20v-5h-5m5 5l-5-5\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"previousTrack\" class=\"p-2 hover:text-green-500\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M19 5L9 12l10 7V5z M5 5v14\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"togglePlay\" \r\n                  class=\"p-3 bg-green-500 rounded-full text-white hover:bg-green-600\">\r\n            <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path v-if=\"isPlaying\" d=\"M6 4h4v16H6zM14 4h4v16h-4z\"/>\r\n              <path v-else d=\"M8 5v14l11-7z\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"nextTrack\" class=\"p-2 hover:text-green-500\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M5 5l10 7-10 7V5z M19 5v14\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"toggleMute\" class=\"p-2 hover:text-green-500\">\r\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path v-if=\"volume === 0\" d=\"M5 8h2l4-4v16l-4-4H5V8z M17 8l4 4m0-4l-4 4\"/>\r\n              <path v-else d=\"M5 8h2l4-4v16l-4-4H5V8z M15 8a5 5 0 0 1 0 8\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <div class=\"container mx-auto px-4 py-8\">\r\n      <!-- Navigation Tabs -->\r\n      <div class=\"flex space-x-4 mb-8\">\r\n        <button v-for=\"tab in tabs\" \r\n                :key=\"tab.id\"\r\n                @click=\"currentTab = tab.id\"\r\n                class=\"px-4 py-2 rounded-lg transition-colors\"\r\n                :class=\"currentTab === tab.id ? 'bg-green-500 text-white' : 'bg-white text-gray-700 hover:bg-gray-50'\">\r\n          {{ tab.name }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Classic View -->\r\n      <div v-if=\"currentTab === 'classic'\" class=\"bg-white rounded-xl p-6 shadow-md\">\r\n        <h2 class=\"text-xl font-bold mb-4 flex items-center\">\r\n          <svg class=\"w-6 h-6 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n            <path d=\"M12 3v10.55c-.59-.34-1.27-.55-2-.55-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4V7h4V3h-6z\"/>\r\n          </svg>\r\n          Classic View\r\n        </h2>\r\n        <!-- Original player layout here -->\r\n        <div class=\"space-y-2\">\r\n          <div v-for=\"(music, index) in musics\" \r\n               :key=\"music.ms_id\"\r\n               @click=\"playMusic(index)\"\r\n               class=\"flex items-center p-3 rounded-lg hover:bg-gray-50 cursor-pointer\">\r\n            <div class=\"flex-1\">\r\n              <p class=\"font-medium\">{{ music.ms_name }}</p>\r\n              <p class=\"text-sm text-gray-500\">{{ music.ms_album }}</p>\r\n            </div>\r\n            <div v-if=\"currentPlayingIndex === index\" class=\"flex space-x-1\">\r\n              <div v-for=\"n in 4\" :key=\"n\" \r\n                   class=\"w-1 h-8 bg-green-500 animate-music-bar\"></div>\r\n            </div>\r\n            <svg v-else class=\"w-6 h-6 text-gray-400\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M8 5v14l11-7z\"/>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Card View -->\r\n      <div v-if=\"currentTab === 'cards'\" class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        <div v-for=\"(music, index) in popularTracks\" \r\n             :key=\"music.ms_id\"\r\n             @click=\"playMusic(index)\"\r\n             class=\"bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow\">\r\n          <div class=\"aspect-video bg-gray-200\">\r\n            <!-- Thumbnail placeholder -->\r\n          </div>\r\n          <div class=\"p-4\">\r\n            <h3 class=\"font-bold mb-1\">{{ music.ms_name }}</h3>\r\n            <p class=\"text-sm text-gray-500\">{{ music.ms_album }}</p>\r\n            <div class=\"mt-4 flex justify-between items-center\">\r\n              <span class=\"text-xs text-gray-400\">{{ formatViews(music.views) }} views</span>\r\n              <button class=\"text-green-500 hover:text-green-600\">\r\n                <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path d=\"M8 5v14l11-7z\"/>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Albums View -->\r\n      <div v-if=\"currentTab === 'albums'\" class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\r\n        <div v-for=\"album in albums\" \r\n             :key=\"album.id\"\r\n             class=\"bg-white rounded-xl shadow-md overflow-hidden hover:shadow-lg transition-shadow\">\r\n          <div class=\"aspect-square bg-gray-200\">\r\n            <!-- Album art placeholder -->\r\n          </div>\r\n          <div class=\"p-4\">\r\n            <h3 class=\"font-bold mb-1\">{{ album.name }}</h3>\r\n            <p class=\"text-sm text-gray-500\">{{ album.artist }}</p>\r\n            <p class=\"text-xs text-gray-400 mt-2\">{{ album.trackCount }} tracks</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { ref, computed, onMounted } from 'vue'\r\n\r\nexport default {\r\n  name: 'EnhancedMusicPlayer',\r\n  data() {\r\n    return {\r\n      musics: [],\r\n      currentPlayingIndex: -1,\r\n      isPlaying: false,\r\n      currentTime: 0,\r\n      duration: 0,\r\n      volume: 80,\r\n      previousVolume: 80,\r\n      player: null,\r\n      isPlayerHidden: false,\r\n      hideVideo: false,\r\n      isRepeatEnabled: false,\r\n      isShuffle: false,\r\n      currentTab: 'classic',\r\n      playbackHistory: [],\r\n      albums: [],\r\n      genreFilters: [],\r\n      selectedGenre: 'all',\r\n      isLoading: false,\r\n      error: null,\r\n      tabs: [\r\n        { id: 'classic', name: 'Classic' },\r\n        { id: 'cards', name: 'Popular' },\r\n        { id: 'albums', name: 'Albums' },\r\n        { id: 'genres', name: 'Genres' }\r\n      ]\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentMusic() {\r\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null\r\n    },\r\n    progress() {\r\n      return (this.currentTime / this.duration) * 100 || 0\r\n    },\r\n    popularTracks() {\r\n      return [...this.musics]\r\n        .sort((a, b) => b.views - a.views)\r\n        .slice(0, 6)\r\n    },\r\n    filteredMusics() {\r\n      if (this.selectedGenre === 'all') return this.musics\r\n      return this.musics.filter(music => music.genre === this.selectedGenre)\r\n    },\r\n    groupedAlbums() {\r\n      const albums = {}\r\n      this.musics.forEach(music => {\r\n        if (!albums[music.ms_album]) {\r\n          albums[music.ms_album] = {\r\n            name: music.ms_album,\r\n            tracks: [],\r\n            artist: music.artist,\r\n            coverUrl: music.albumCover\r\n          }\r\n        }\r\n        albums[music.ms_album].tracks.push(music)\r\n      })\r\n      return Object.values(albums)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // YouTube API Integration\r\n    loadYouTubeAPI() {\r\n      return new Promise((resolve) => {\r\n        if (window.YT) {\r\n          resolve(window.YT)\r\n          return\r\n        }\r\n\r\n        const tag = document.createElement('script')\r\n        tag.src = 'https://www.youtube.com/iframe_api'\r\n        const firstScriptTag = document.getElementsByTagName('script')[0]\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n\r\n        window.onYouTubeIframeAPIReady = () => {\r\n          resolve(window.YT)\r\n        }\r\n      })\r\n    },\r\n\r\n    async initYouTubePlayer() {\r\n      try {\r\n        await this.loadYouTubeAPI()\r\n        \r\n        this.player = new window.YT.Player('youtube-player', {\r\n          height: '180',\r\n          width: '100%',\r\n          playerVars: {\r\n            controls: 0,\r\n            disablekb: 1,\r\n            enablejsapi: 1,\r\n            modestbranding: 1,\r\n            rel: 0,\r\n            showinfo: 0,\r\n            iv_load_policy: 3\r\n          },\r\n          events: {\r\n            onReady: this.onPlayerReady,\r\n            onStateChange: this.onPlayerStateChange,\r\n            onError: this.onPlayerError\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('Failed to initialize YouTube player:', error)\r\n        this.error = 'Failed to load YouTube player'\r\n      }\r\n    },\r\n\r\n    // Player Event Handlers\r\n    onPlayerReady(event) {\r\n      this.player.setVolume(this.volume)\r\n      if (this.currentMusic) {\r\n        this.loadCurrentMusic()\r\n      }\r\n    },\r\n\r\n    onPlayerStateChange(event) {\r\n      // YouTube states: -1 (unstarted), 0 (ended), 1 (playing), 2 (paused), 3 (buffering), 5 (video cued)\r\n      switch (event.data) {\r\n        case YT.PlayerState.PLAYING:\r\n          this.isPlaying = true\r\n          this.startTimeTracking()\r\n          break\r\n        case YT.PlayerState.PAUSED:\r\n          this.isPlaying = false\r\n          this.stopTimeTracking()\r\n          break\r\n        case YT.PlayerState.ENDED:\r\n          this.handleTrackEnd()\r\n          break\r\n      }\r\n    },\r\n\r\n    onPlayerError(event) {\r\n      console.error('YouTube Player Error:', event)\r\n      this.error = 'Failed to play video'\r\n      this.nextTrack() // Try playing next track on error\r\n    },\r\n\r\n    // Playback Control Methods\r\n    async playMusic(index) {\r\n      if (this.currentPlayingIndex === index && this.isPlaying) {\r\n        this.pauseMusic()\r\n        return\r\n      }\r\n\r\n      try {\r\n        this.isLoading = true\r\n        this.currentPlayingIndex = index\r\n        \r\n        if (!this.player) {\r\n          await this.initYouTubePlayer()\r\n        }\r\n\r\n        const videoId = this.getYouTubeIdFromUrl(this.musics[index].ms_path)\r\n        if (!videoId) {\r\n          throw new Error('Invalid YouTube URL')\r\n        }\r\n\r\n        this.player.loadVideoById(videoId)\r\n        this.playbackHistory.push(index)\r\n        this.isPlaying = true\r\n      } catch (error) {\r\n        console.error('Error playing music:', error)\r\n        this.error = 'Failed to play track'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    pauseMusic() {\r\n      if (this.player) {\r\n        this.player.pauseVideo()\r\n        this.isPlaying = false\r\n      }\r\n    },\r\n\r\n    togglePlay() {\r\n      if (!this.player) return\r\n      \r\n      if (this.isPlaying) {\r\n        this.player.pauseVideo()\r\n      } else {\r\n        this.player.playVideo()\r\n      }\r\n    },\r\n\r\n    async nextTrack() {\r\n      if (this.isShuffle) {\r\n        const randomIndex = Math.floor(Math.random() * this.musics.length)\r\n        await this.playMusic(randomIndex)\r\n        return\r\n      }\r\n\r\n      if (this.currentPlayingIndex < this.musics.length - 1) {\r\n        await this.playMusic(this.currentPlayingIndex + 1)\r\n      } else if (this.isRepeatEnabled) {\r\n        await this.playMusic(0)\r\n      }\r\n    },\r\n\r\n    async previousTrack() {\r\n      if (this.currentTime > 3) {\r\n        // If current time > 3 seconds, restart current track\r\n        this.player.seekTo(0)\r\n        return\r\n      }\r\n\r\n      if (this.playbackHistory.length > 1) {\r\n        this.playbackHistory.pop() // Remove current track\r\n        const previousIndex = this.playbackHistory.pop() // Get & remove previous track\r\n        await this.playMusic(previousIndex)\r\n      } else if (this.currentPlayingIndex > 0) {\r\n        await this.playMusic(this.currentPlayingIndex - 1)\r\n      }\r\n    },\r\n\r\n    // Time and Progress Methods\r\n    startTimeTracking() {\r\n      this.stopTimeTracking()\r\n      this.timeTracker = setInterval(() => {\r\n        if (this.player && this.player.getCurrentTime) {\r\n          this.currentTime = this.player.getCurrentTime()\r\n          this.duration = this.player.getDuration()\r\n        }\r\n      }, 1000)\r\n    },\r\n\r\n    stopTimeTracking() {\r\n      if (this.timeTracker) {\r\n        clearInterval(this.timeTracker)\r\n      }\r\n    },\r\n\r\n    handleTrackEnd() {\r\n      if (this.isRepeatEnabled) {\r\n        this.player.seekTo(0)\r\n        this.player.playVideo()\r\n      } else {\r\n        this.nextTrack()\r\n      }\r\n    },\r\n\r\n    seekTime(event) {\r\n      if (!this.player || !this.duration) return\r\n      \r\n      const rect = event.currentTarget.getBoundingClientRect()\r\n      const x = event.clientX - rect.left\r\n      const percentage = x / rect.width\r\n      const seekTime = percentage * this.duration\r\n      \r\n      this.player.seekTo(seekTime)\r\n    },\r\n\r\n    // Volume Control Methods\r\n    toggleMute() {\r\n      if (this.volume === 0) {\r\n        this.volume = this.previousVolume\r\n      } else {\r\n        this.previousVolume = this.volume\r\n        this.volume = 0\r\n      }\r\n      if (this.player) {\r\n        this.player.setVolume(this.volume)\r\n      }\r\n    },\r\n\r\n    adjustVolume(event) {\r\n      const rect = event.currentTarget.getBoundingClientRect()\r\n      const x = event.clientX - rect.left\r\n      const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100))\r\n      \r\n      this.volume = Math.round(percentage)\r\n      if (this.player) {\r\n        this.player.setVolume(this.volume)\r\n      }\r\n    },\r\n\r\n    // UI Control Methods\r\n    togglePlayer() {\r\n      this.isPlayerHidden = !this.isPlayerHidden\r\n    },\r\n\r\n    toggleVideo() {\r\n      this.hideVideo = !this.hideVideo\r\n    },\r\n\r\n    toggleRepeat() {\r\n      this.isRepeatEnabled = !this.isRepeatEnabled\r\n    },\r\n\r\n    toggleShuffle() {\r\n      this.isShuffle = !this.isShuffle\r\n    },\r\n\r\n    // Utility Methods\r\n    getYouTubeIdFromUrl(url) {\r\n      const regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/\r\n      const match = url.match(regExp)\r\n      return (match && match[7].length === 11) ? match[7] : false\r\n    },\r\n\r\n    formatTime(seconds) {\r\n      if (!seconds) return '0:00'\r\n      const minutes = Math.floor(seconds / 60)\r\n      const remainingSeconds = Math.floor(seconds % 60)\r\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`\r\n    },\r\n\r\n    formatViews(views) {\r\n      return new Intl.NumberFormat('en-US', { notation: 'compact' }).format(views)\r\n    },\r\n\r\n    // Data Fetching Methods\r\n    async fetchMusics() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await fetch('http://localhost:3000/musics')\r\n        if (!response.ok) throw new Error('Failed to fetch music data')\r\n        this.musics = await response.json()\r\n        \r\n        // Extract unique genres\r\n        this.genreFilters = ['all', ...new Set(this.musics.map(music => music.genre))]\r\n      } catch (error) {\r\n        console.error('Error fetching music:', error)\r\n        this.error = 'Failed to load music data'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    },\r\n\r\n    async fetchAlbums() {\r\n      try {\r\n        this.isLoading = true\r\n        const response = await fetch('http://localhost:3000/albums')\r\n        if (!response.ok) throw new Error('Failed to fetch album data')\r\n        this.albums = await response.json()\r\n      } catch (error) {\r\n        console.error('Error fetching albums:', error)\r\n        this.error = 'Failed to load album data'\r\n      } finally {\r\n        this.isLoading = false\r\n      }\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    currentTab: {\r\n      immediate: true,\r\n      handler(newTab) {\r\n        if (newTab === 'albums' && this.albums.length === 0) {\r\n          this.fetchAlbums()\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.fetchMusics()\r\n    this.initYouTubePlayer()\r\n  },\r\n\r\n  beforeUnmount() {\r\n    this.stopTimeTracking()\r\n    if (this.player) {\r\n      this.player.destroy()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n@keyframes music-bar {\r\n  0% { transform: scaleY(0.3); }\r\n  50% { transform: scaleY(1); }\r\n  100% { transform: scaleY(0.3); }\r\n}\r\n\r\n.animate-music-bar {\r\n  animation: music-bar 1s infinite;\r\n}\r\n\r\n.animate-music-bar:nth-child(1) { animation-delay: 0s; }\r\n.animate-music-bar:nth-child(2) { animation-delay: 0.2s; }\r\n.animate-music-bar:nth-child(3) { animation-delay: 0.4s; }\r\n.animate-music-bar:nth-child(4) { animation-delay: 0.6s; }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}