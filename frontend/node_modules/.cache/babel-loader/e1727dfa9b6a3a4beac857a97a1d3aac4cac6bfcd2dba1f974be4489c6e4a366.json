{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nimport CartInfo from './CartInfo.vue';\nimport { EventBus } from \"../event-bus\";\n// import babelConfig from \"babel.config\";\nexport default {\n  name: 'MainMenu',\n  components: {\n    CartInfo\n  },\n  data() {\n    return {\n      memName: null,\n      backendmessage: null\n    };\n  },\n  mounted() {\n    // เมื่อเริ่ม mount ให้อ่านค่าจาก sessionStorage\n    this.memName = sessionStorage.getItem('memName');\n    // เมื่อ EventBus เกิดสัญญาณ loginok ให้อ่านข้อมูลจาก sessionStorage ใหม่\n    EventBus.on('loginok', () => {\n      this.memName = sessionStorage.getItem('memName');\n    });\n  },\n  // เมื่อ Unmount ให้ปิดการเชื่อมต่อกับEventBus\n  beforeUnmount() {\n    EventBus.off('loginok');\n  },\n  methods: {\n    async memlogout() {\n      EventBus.emit('memlogout');\n      const cf = window.confirm('ต้องการออกจากระบบ?');\n      if (cf) {\n        try {\n          const response = await axios.get(`http://localhost:3000/members/logout`);\n          this.backendMessage = response.data.messagelogout;\n          if (this.backendMessage == 'success') {\n            // ลบเฉพาะ sessionStorage ที่ระบุ\n            // sessionStorage.removeItem('memName');\n            // ลบ sessionStorage ทั้งหมด\n            sessionStorage.clear();\n            this.memName = null;\n            this.$router.push('/');\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","withCredentials","CartInfo","EventBus","name","components","data","memName","backendmessage","mounted","sessionStorage","getItem","on","beforeUnmount","off","methods","memlogout","emit","cf","window","confirm","response","get","backendMessage","messagelogout","clear","$router","push","err","console","log"],"sources":["D:\\Users\\Student\\Desktop\\123\\project_webtech\\frontend\\src\\components\\MainMenu.vue"],"sourcesContent":["<template>\r\n  <nav class=\"navbar navbar-expand-lg bg-success bg-opacity-25\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">K</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <!-- <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> -->\r\n          <router-link to=\"/\" style=\"text-decoration: none;\">\r\n            <div class=\"nav-link\">Home</div>\r\n        </router-link>\r\n        </li>\r\n         \r\n        <li class=\"nav-item\" v-if=\"memName === null\">\r\n    <router-link to=\"/Login\" style=\"text-decoration: none;\">\r\n        <div class=\"nav-link\">Login</div>\r\n        </router-link>\r\n      </li>\r\n      <li class=\"nav-item\" v-else>\r\n    <a href=\"#\" @click=\"memlogout\" style=\"text-decoration: none;\">\r\n        <div class=\"nav-link\">Logout</div>\r\n    </a>\r\n      </li>\r\n        <li class=\"nav-item \">\r\n        <router-link to=\"/pagemember\" style=\"text-decoration: none;\">\r\n        <div class=\"nav-link fw-bold\">{{ memName }}</div>\r\n        </router-link>\r\n        </li> \r\n        <li class=\"nav-item \">\r\n          <router-link to=\"/cartlist\" style=\"text-decoration: none;\">\r\n            <div class=\"nav-link fw-bold\">Cart</div>\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n      <div class=\"text-end pe-3\">\r\n          <CartInfo />\r\n        </div>\r\n    </div>\r\n  </div>\r\n  \r\n</nav>\r\n</template>\r\n \r\n<script>\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true\r\nimport CartInfo from './CartInfo.vue';\r\nimport { EventBus } from \"../event-bus\"\r\n// import babelConfig from \"babel.config\";\r\nexport default {\r\n    name: 'MainMenu',\r\n      components:{\r\n          CartInfo\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            memName: null,\r\n            backendmessage:null\r\n        }\r\n    },\r\n    mounted() {\r\n        // เมื่อเริ่ม mount ให้อ่านค่าจาก sessionStorage\r\n        this.memName = sessionStorage.getItem('memName')\r\n        // เมื่อ EventBus เกิดสัญญาณ loginok ให้อ่านข้อมูลจาก sessionStorage ใหม่\r\n        EventBus.on('loginok', () => {\r\n            this.memName = sessionStorage.getItem('memName')\r\n        })\r\n    },\r\n    // เมื่อ Unmount ให้ปิดการเชื่อมต่อกับEventBus\r\n    beforeUnmount() {\r\n        EventBus.off('loginok');\r\n    },\r\n    methods:{\r\n      async memlogout() {\r\n      EventBus.emit('memlogout')\r\n    const cf = window.confirm('ต้องการออกจากระบบ?')\r\n    if (cf)\r\n    {\r\n        try {\r\n            const response = await axios.get(\r\n                `http://localhost:3000/members/logout`)\r\n            this.backendMessage = response.data.messagelogout;\r\n            if (this.backendMessage == 'success') {\r\n                // ลบเฉพาะ sessionStorage ที่ระบุ\r\n                // sessionStorage.removeItem('memName');\r\n                // ลบ sessionStorage ทั้งหมด\r\n                sessionStorage.clear()\r\n                this.memName = null\r\n                this.$router.push('/')\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n}\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n</script>\r\n \r\n<style>\r\n \r\n</style>"],"mappings":";AA+CA,OAAOA,KAAI,MAAO,OAAO;AACzBA,KAAK,CAACC,QAAQ,CAACC,eAAc,GAAI,IAAG;AACpC,OAAOC,QAAO,MAAO,gBAAgB;AACrC,SAASC,QAAO,QAAS,cAAa;AACtC;AACA,eAAe;EACXC,IAAI,EAAE,UAAU;EACdC,UAAU,EAAC;IACPH;EACN,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,OAAO,EAAE,IAAI;MACbC,cAAc,EAAC;IACnB;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACF,OAAM,GAAIG,cAAc,CAACC,OAAO,CAAC,SAAS;IAC/C;IACAR,QAAQ,CAACS,EAAE,CAAC,SAAS,EAAE,MAAM;MACzB,IAAI,CAACL,OAAM,GAAIG,cAAc,CAACC,OAAO,CAAC,SAAS;IACnD,CAAC;EACL,CAAC;EACD;EACAE,aAAaA,CAAA,EAAG;IACZV,QAAQ,CAACW,GAAG,CAAC,SAAS,CAAC;EAC3B,CAAC;EACDC,OAAO,EAAC;IACN,MAAMC,SAASA,CAAA,EAAG;MAClBb,QAAQ,CAACc,IAAI,CAAC,WAAW;MAC3B,MAAMC,EAAC,GAAIC,MAAM,CAACC,OAAO,CAAC,oBAAoB;MAC9C,IAAIF,EAAE,EACN;QACI,IAAI;UACA,MAAMG,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAC5B,sCAAsC;UAC1C,IAAI,CAACC,cAAa,GAAIF,QAAQ,CAACf,IAAI,CAACkB,aAAa;UACjD,IAAI,IAAI,CAACD,cAAa,IAAK,SAAS,EAAE;YAClC;YACA;YACA;YACAb,cAAc,CAACe,KAAK,CAAC;YACrB,IAAI,CAAClB,OAAM,GAAI,IAAG;YAClB,IAAI,CAACmB,OAAO,CAACC,IAAI,CAAC,GAAG;UACzB;QACJ,EACA,OAAOC,GAAG,EAAE;UACRC,OAAO,CAACC,GAAG,CAACF,GAAG;QACnB;MACJ;IACJ;EAEI;AAGJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}