{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from '../event-bus';\nimport axios from 'axios';\nexport default {\n  name: 'TheLogin',\n  data() {\n    return {\n      loginname: null,\n      password: null,\n      backendMessage: null,\n      memEmail: null,\n      memName: null,\n      dutyId: null\n    };\n  },\n  mounted() {\n    if (sessionStorage.getItem('memEmail') != null) {\n      this.$router.push('/pagemember');\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      let members = {\n        loginname: this.loginname,\n        password: this.password\n      };\n      try {\n        const response = await axios.post(`http://localhost:3000/users/login`, members);\n        this.backendMessage = response.data.messagelogin;\n\n        // Check if login was successful\n        if (this.backendMessage == 'success') {\n          // Get session data\n          await this.chkSession();\n          EventBus.emit('loginok');\n          this.$router.push('/pagemember');\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async chkSession() {\n      await axios.get(`http://localhost:3000/members/getss`).then(res => {\n        console.log(res.data);\n        this.memEmail = res.data.email; // From session\n        this.memName = res.data.name; // From session\n        this.dutyId = res.data.duty; // From session\n        sessionStorage.setItem('memEmail', res.data.email); // Save email in session storage\n        sessionStorage.setItem('memName', res.data.name); // Save name in session storage\n        sessionStorage.setItem('dutyId', res.data.duty); // Save dutyId in session storage\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["EventBus","axios","name","data","loginname","password","backendMessage","memEmail","memName","dutyId","mounted","sessionStorage","getItem","$router","push","methods","handleSubmit","members","response","post","messagelogin","chkSession","emit","err","console","log","get","then","res","email","duty","setItem","catch","error"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"row mt-5\">\r\n    <div class=\"col-sm-12 col-md-6 col-lg-6 mb-5\">\r\n      <img src=\"../assets/tomato.png\" alt=\"\" width=\"80%\">\r\n    </div>\r\n    <div class=\"col-sm-12 col-md-6 col-lg-6 mb-3\">\r\n      <form @submit.prevent=\"handleSubmit()\">\r\n        <div class=\"custom-column\">\r\n          <div class=\"form-floating mb-3\">\r\n            <input class=\"form-control\" type=\"text\" id=\"loginname\" v-model=\"loginname\" autocomplete=\"off\" required\r\n              autofocus placeholder=\"loginname\">\r\n            <label for=\"loginname\">Email or Tel.</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-12 col-md-10 col-lg-8\">\r\n          <div class=\"form-floating mb-3\">\r\n            <input class=\"form-control\" type=\"password\" id=\"password\" v-model=\"password\" required\r\n              placeholder=\"Password\">\r\n            <label for=\"password\">Password</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"button-group\">\r\n          <router-link to=\"/register\" style=\"text-decoration: none;\">\r\n            <a href=\"#\" class=\"btn btn-outline-danger\">\r\n              <i class=\"bi bi-heart-fill\"></i>&nbsp;Register</a>\r\n          </router-link>\r\n          <div class=\"col-sm-12 col-md-6\">\r\n            <button class=\"cta\" type=\"submit\" style=\"width: 6rem;\">\r\n              <span>Log In</span>\r\n              <svg width=\"15px\" height=\"10px\" viewBox=\"0 0 13 10\">\r\n                <path d=\"M1,5 L11,5\"></path>\r\n                <polyline points=\"8 1 12 5 8 9\"></polyline>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <p v-if=\"backendMessage == 'success'\" class=\"alert alert-success \">\r\n    เข้าระบบสำเร็จ - {{ backendMessage }}</p>\r\n  <p v-else-if=\"backendMessage == 'fail'\" class=\"alert alert-danger\">\r\n    เข้าระบบผิดพลาด - {{ backendMessage }}</p>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../event-bus';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TheLogin',\r\n  data() {\r\n    return {\r\n      loginname: null,\r\n      password: null,\r\n      backendMessage: null,\r\n      memEmail: null,\r\n      memName: null,\r\n      dutyId: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    if (sessionStorage.getItem('memEmail') != null) {\r\n      this.$router.push('/pagemember');\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      let members = {\r\n        loginname: this.loginname,\r\n        password: this.password,\r\n      };\r\n      try {\r\n        const response = await axios.post(\r\n          `http://localhost:3000/users/login`, \r\n          members\r\n        );\r\n        this.backendMessage = response.data.messagelogin;\r\n        \r\n        // Check if login was successful\r\n        if (this.backendMessage == 'success') {\r\n          // Get session data\r\n          await this.chkSession();\r\n          EventBus.emit('loginok');\r\n          this.$router.push('/pagemember');\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async chkSession() {\r\n      await axios.get(`http://localhost:3000/members/getss`)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          this.memEmail = res.data.email;   // From session\r\n          this.memName = res.data.name;     // From session\r\n          this.dutyId = res.data.duty;      // From session\r\n          sessionStorage.setItem('memEmail', res.data.email); // Save email in session storage\r\n          sessionStorage.setItem('memName', res.data.name);   // Save name in session storage\r\n          sessionStorage.setItem('dutyId', res.data.duty);    // Save dutyId in session storage\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Existing styles remain unchanged */\r\n</style>\r\n"],"mappings":";AA8CA,SAASA,QAAO,QAAS,cAAc;AACvC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,cAAc,CAACC,OAAO,CAAC,UAAU,KAAK,IAAI,EAAE;MAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAIC,OAAM,GAAI;QACZb,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACD,IAAI;QACF,MAAMa,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAC/B,mCAAmC,EACnCF,OACF,CAAC;QACD,IAAI,CAACX,cAAa,GAAIY,QAAQ,CAACf,IAAI,CAACiB,YAAY;;QAEhD;QACA,IAAI,IAAI,CAACd,cAAa,IAAK,SAAS,EAAE;UACpC;UACA,MAAM,IAAI,CAACe,UAAU,CAAC,CAAC;UACvBrB,QAAQ,CAACsB,IAAI,CAAC,SAAS,CAAC;UACxB,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAClC;MACF,EAAE,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMF,UAAUA,CAAA,EAAG;MACjB,MAAMpB,KAAK,CAACyB,GAAG,CAAC,qCAAqC,EAClDC,IAAI,CAACC,GAAE,IAAK;QACXJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACzB,IAAI,CAAC;QACrB,IAAI,CAACI,QAAO,GAAIqB,GAAG,CAACzB,IAAI,CAAC0B,KAAK,EAAI;QAClC,IAAI,CAACrB,OAAM,GAAIoB,GAAG,CAACzB,IAAI,CAACD,IAAI,EAAM;QAClC,IAAI,CAACO,MAAK,GAAImB,GAAG,CAACzB,IAAI,CAAC2B,IAAI,EAAO;QAClCnB,cAAc,CAACoB,OAAO,CAAC,UAAU,EAAEH,GAAG,CAACzB,IAAI,CAAC0B,KAAK,CAAC,EAAE;QACpDlB,cAAc,CAACoB,OAAO,CAAC,SAAS,EAAEH,GAAG,CAACzB,IAAI,CAACD,IAAI,CAAC,EAAI;QACpDS,cAAc,CAACoB,OAAO,CAAC,QAAQ,EAAEH,GAAG,CAACzB,IAAI,CAAC2B,IAAI,CAAC,EAAK;MACtD,CAAC,EACAE,KAAK,CAACT,GAAE,IAAK;QACZC,OAAO,CAACS,KAAK,CAACV,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}