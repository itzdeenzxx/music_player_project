{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, onMounted } from 'vue';\nexport default {\n  name: 'EnhancedMusicPlayer',\n  data() {\n    return {\n      musics: [],\n      currentPlayingIndex: -1,\n      isPlaying: false,\n      currentTime: 0,\n      duration: 0,\n      volume: 80,\n      previousVolume: 80,\n      player: null,\n      isPlayerHidden: false,\n      hideVideo: false,\n      isRepeatEnabled: false,\n      isShuffle: false,\n      currentTab: 'classic',\n      playbackHistory: [],\n      albums: [],\n      genreFilters: [],\n      selectedGenre: 'all',\n      isLoading: false,\n      error: null,\n      tabs: [{\n        id: 'classic',\n        name: 'Classic'\n      }, {\n        id: 'cards',\n        name: 'Popular'\n      }, {\n        id: 'albums',\n        name: 'Albums'\n      }, {\n        id: 'genres',\n        name: 'Genres'\n      }]\n    };\n  },\n  computed: {\n    currentMusic() {\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null;\n    },\n    progress() {\n      return this.currentTime / this.duration * 100 || 0;\n    },\n    popularTracks() {\n      return [...this.musics].sort((a, b) => b.views - a.views).slice(0, 6);\n    },\n    filteredMusics() {\n      if (this.selectedGenre === 'all') return this.musics;\n      return this.musics.filter(music => music.genre === this.selectedGenre);\n    },\n    groupedAlbums() {\n      const albums = {};\n      this.musics.forEach(music => {\n        if (!albums[music.ms_album]) {\n          albums[music.ms_album] = {\n            name: music.ms_album,\n            tracks: [],\n            artist: music.artist,\n            coverUrl: music.albumCover\n          };\n        }\n        albums[music.ms_album].tracks.push(music);\n      });\n      return Object.values(albums);\n    }\n  },\n  methods: {\n    // YouTube API Integration\n    loadYouTubeAPI() {\n      return new Promise(resolve => {\n        if (window.YT) {\n          resolve(window.YT);\n          return;\n        }\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          resolve(window.YT);\n        };\n      });\n    },\n    async initYouTubePlayer() {\n      try {\n        await this.loadYouTubeAPI();\n        this.player = new window.YT.Player('youtube-player', {\n          height: '180',\n          width: '100%',\n          playerVars: {\n            controls: 0,\n            disablekb: 1,\n            enablejsapi: 1,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0,\n            autoplay: 0\n          },\n          events: {\n            onReady: this.onPlayerReady,\n            onStateChange: this.onPlayerStateChange\n          }\n        });\n      } catch (error) {\n        console.error('YouTube API failed to load:', error);\n      }\n    },\n    onPlayerReady(event) {\n      // Player is ready to use\n    },\n    onPlayerStateChange(event) {\n      switch (event.data) {\n        case window.YT.PlayerState.PLAYING:\n          this.isPlaying = true;\n          break;\n        case window.YT.PlayerState.PAUSED:\n        case window.YT.PlayerState.ENDED:\n          this.isPlaying = false;\n          break;\n      }\n    },\n    playMusic(index) {\n      this.currentPlayingIndex = index;\n      const music = this.musics[index];\n      this.player.loadVideoById(music.videoId);\n      this.isPlaying = true;\n      this.currentTime = 0;\n      this.duration = music.duration;\n    },\n    togglePlay() {\n      if (this.isPlaying) {\n        this.player.pauseVideo();\n      } else {\n        this.player.playVideo();\n      }\n    },\n    nextTrack() {\n      this.currentPlayingIndex = (this.currentPlayingIndex + 1) % this.musics.length;\n      this.playMusic(this.currentPlayingIndex);\n    },\n    previousTrack() {\n      this.currentPlayingIndex = (this.currentPlayingIndex - 1 + this.musics.length) % this.musics.length;\n      this.playMusic(this.currentPlayingIndex);\n    },\n    toggleMute() {\n      if (this.volume === 0) {\n        this.volume = this.previousVolume;\n      } else {\n        this.previousVolume = this.volume;\n        this.volume = 0;\n      }\n      this.player.setVolume(this.volume);\n    },\n    toggleRepeat() {\n      this.isRepeatEnabled = !this.isRepeatEnabled;\n    },\n    toggleVideo() {\n      this.hideVideo = !this.hideVideo;\n    },\n    seekTime(event) {\n      const progressBar = event.currentTarget;\n      const clickPosition = event.offsetX / progressBar.clientWidth;\n      const newTime = clickPosition * this.duration;\n      this.player.seekTo(newTime);\n    },\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = Math.floor(seconds % 60);\n      return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`;\n    },\n    formatViews(views) {\n      return views.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    },\n    togglePlayer() {\n      this.isPlayerHidden = !this.isPlayerHidden;\n    }\n  },\n  mounted() {\n    this.initYouTubePlayer();\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","name","data","musics","currentPlayingIndex","isPlaying","currentTime","duration","volume","previousVolume","player","isPlayerHidden","hideVideo","isRepeatEnabled","isShuffle","currentTab","playbackHistory","albums","genreFilters","selectedGenre","isLoading","error","tabs","id","currentMusic","progress","popularTracks","sort","a","b","views","slice","filteredMusics","filter","music","genre","groupedAlbums","forEach","ms_album","tracks","artist","coverUrl","albumCover","push","Object","values","methods","loadYouTubeAPI","Promise","resolve","window","YT","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initYouTubePlayer","Player","height","width","playerVars","controls","disablekb","enablejsapi","modestbranding","rel","showinfo","autoplay","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","console","event","PlayerState","PLAYING","PAUSED","ENDED","playMusic","index","loadVideoById","videoId","togglePlay","pauseVideo","playVideo","nextTrack","length","previousTrack","toggleMute","setVolume","toggleRepeat","toggleVideo","seekTime","progressBar","currentTarget","clickPosition","offsetX","clientWidth","newTime","seekTo","formatTime","seconds","minutes","Math","floor","remainingSeconds","formatViews","toString","replace","togglePlayer","mounted"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-100\">\r\n    <!-- Player Control (Fixed Position) -->\r\n    <div class=\"player-control\" :class=\"{'hidden': isPlayerHidden}\">\r\n      <button @click=\"togglePlayer\" class=\"toggle-button\">\r\n        <span v-if=\"isPlayerHidden\">Show Player</span>\r\n        <span v-else>Hide Player</span>\r\n      </button>\r\n      \r\n      <!-- YouTube Player -->\r\n      <div class=\"youtube-player\" :class=\"{'hidden': hideVideo}\">\r\n        <div id=\"youtube-player\"></div>\r\n        <button @click=\"toggleVideo\" class=\"video-toggle-button\">\r\n          {{ hideVideo ? 'Show Video' : 'Hide Video' }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Player Controls -->\r\n      <div class=\"player-controls\">\r\n        <div class=\"track-info\">\r\n          <p class=\"track-name\">{{ currentMusic?.ms_name || 'Select a track' }}</p>\r\n          <p class=\"track-album\">{{ currentMusic?.ms_album || 'No album' }}</p>\r\n        </div>\r\n\r\n        <!-- Progress Bar -->\r\n        <div class=\"progress-bar\" @click=\"seekTime\">\r\n          <div class=\"progress\" :style=\"{ width: `${progress}%` }\"></div>\r\n        </div>\r\n\r\n        <!-- Time Display -->\r\n        <div class=\"time-display\">\r\n          <span>{{ formatTime(currentTime) }}</span>\r\n          <span>{{ formatTime(duration) }}</span>\r\n        </div>\r\n\r\n        <!-- Control Buttons -->\r\n        <div class=\"control-buttons\">\r\n          <button @click=\"toggleRepeat\" class=\"control-button\" :class=\"{ 'active': isRepeatEnabled }\">\r\n            <svg class=\"icon\">\r\n              <path d=\"M4 4v5h5M4 9l5-5M20 20v-5h-5m5 5l-5-5\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"previousTrack\" class=\"control-button\">\r\n            <svg class=\"icon\">\r\n              <path d=\"M19 5L9 12l10 7V5z M5 5v14\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"togglePlay\" class=\"play-button\">\r\n            <svg class=\"icon\">\r\n              <path v-if=\"isPlaying\" d=\"M6 4h4v16H6zM14 4h4v16h-4z\"/>\r\n              <path v-else d=\"M8 5v14l11-7z\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"nextTrack\" class=\"control-button\">\r\n            <svg class=\"icon\">\r\n              <path d=\"M5 5l10 7-10 7V5z M19 5v14\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"toggleMute\" class=\"control-button\">\r\n            <svg class=\"icon\">\r\n              <path v-if=\"volume === 0\" d=\"M5 8h2l4-4v16l-4-4H5V8z M17 8l4 4m0-4l-4 4\"/>\r\n              <path v-else d=\"M5 8h2l4-4v16l-4-4H5V8z M15 8a5 5 0 0 1 0 8\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <div class=\"main-content\">\r\n      <!-- Navigation Tabs -->\r\n      <div class=\"tabs\">\r\n        <button v-for=\"tab in tabs\" :key=\"tab.id\"\r\n                @click=\"currentTab = tab.id\"\r\n                class=\"tab-button\"\r\n                :class=\"currentTab === tab.id ? 'active' : ''\">\r\n          {{ tab.name }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Classic View -->\r\n      <div v-if=\"currentTab === 'classic'\" class=\"classic-view\">\r\n        <h2 class=\"view-title\">Classic View</h2>\r\n        <div class=\"music-list\">\r\n          <div v-for=\"(music, index) in musics\" :key=\"music.ms_id\"\r\n               @click=\"playMusic(index)\" class=\"music-item\">\r\n            <div class=\"music-info\">\r\n              <p class=\"music-name\">{{ music.ms_name }}</p>\r\n              <p class=\"music-album\">{{ music.ms_album }}</p>\r\n            </div>\r\n            <div v-if=\"currentPlayingIndex === index\" class=\"playing-indicator\">\r\n              <div class=\"indicator-bar\"></div>\r\n              <div class=\"indicator-bar\"></div>\r\n              <div class=\"indicator-bar\"></div>\r\n              <div class=\"indicator-bar\"></div>\r\n            </div>\r\n            <svg v-else class=\"play-icon\">\r\n              <path d=\"M8 5v14l11-7z\"/>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Card View -->\r\n      <div v-if=\"currentTab === 'cards'\" class=\"card-view\">\r\n        <div v-for=\"(music, index) in popularTracks\" :key=\"music.ms_id\"\r\n             @click=\"playMusic(index)\" class=\"music-card\">\r\n          <div class=\"thumbnail-placeholder\"></div>\r\n          <div class=\"card-info\">\r\n            <h3 class=\"card-title\">{{ music.ms_name }}</h3>\r\n            <p class=\"card-album\">{{ music.ms_album }}</p>\r\n            <div class=\"card-footer\">\r\n              <span class=\"views-count\">{{ formatViews(music.views) }} views</span>\r\n              <button class=\"play-button\">\r\n                <svg class=\"icon\">\r\n                  <path d=\"M8 5v14l11-7z\"/>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Albums View -->\r\n      <div v-if=\"currentTab === 'albums'\" class=\"albums-view\">\r\n        <div v-for=\"album in albums\" :key=\"album.id\" class=\"album-card\">\r\n          <div class=\"album-art-placeholder\"></div>\r\n          <div class=\"album-info\">\r\n            <h3 class=\"album-title\">{{ album.name }}</h3>\r\n            <p class=\"album-artist\">{{ album.artist }}</p>\r\n            <p class=\"track-count\">{{ album.trackCount }} tracks</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\n\r\nexport default {\r\n  name: 'EnhancedMusicPlayer',\r\n  data() {\r\n    return {\r\n      musics: [],\r\n      currentPlayingIndex: -1,\r\n      isPlaying: false,\r\n      currentTime: 0,\r\n      duration: 0,\r\n      volume: 80,\r\n      previousVolume: 80,\r\n      player: null,\r\n      isPlayerHidden: false,\r\n      hideVideo: false,\r\n      isRepeatEnabled: false,\r\n      isShuffle: false,\r\n      currentTab: 'classic',\r\n      playbackHistory: [],\r\n      albums: [],\r\n      genreFilters: [],\r\n      selectedGenre: 'all',\r\n      isLoading: false,\r\n      error: null,\r\n      tabs: [\r\n        { id: 'classic', name: 'Classic' },\r\n        { id: 'cards', name: 'Popular' },\r\n        { id: 'albums', name: 'Albums' },\r\n        { id: 'genres', name: 'Genres' }\r\n      ]\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentMusic() {\r\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null\r\n    },\r\n    progress() {\r\n      return (this.currentTime / this.duration) * 100 || 0\r\n    },\r\n    popularTracks() {\r\n      return [...this.musics]\r\n        .sort((a, b) => b.views - a.views)\r\n        .slice(0, 6)\r\n    },\r\n    filteredMusics() {\r\n      if (this.selectedGenre === 'all') return this.musics\r\n      return this.musics.filter(music => music.genre === this.selectedGenre)\r\n    },\r\n    groupedAlbums() {\r\n      const albums = {}\r\n      this.musics.forEach(music => {\r\n        if (!albums[music.ms_album]) {\r\n          albums[music.ms_album] = {\r\n            name: music.ms_album,\r\n            tracks: [],\r\n            artist: music.artist,\r\n            coverUrl: music.albumCover\r\n          }\r\n        }\r\n        albums[music.ms_album].tracks.push(music)\r\n      })\r\n      return Object.values(albums)\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // YouTube API Integration\r\n    loadYouTubeAPI() {\r\n      return new Promise((resolve) => {\r\n        if (window.YT) {\r\n          resolve(window.YT)\r\n          return\r\n        }\r\n\r\n        const tag = document.createElement('script')\r\n        tag.src = 'https://www.youtube.com/iframe_api'\r\n        const firstScriptTag = document.getElementsByTagName('script')[0]\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\r\n\r\n        window.onYouTubeIframeAPIReady = () => {\r\n          resolve(window.YT)\r\n        }\r\n      })\r\n    },\r\n\r\n    async initYouTubePlayer() {\r\n      try {\r\n        await this.loadYouTubeAPI()\r\n        \r\n        this.player = new window.YT.Player('youtube-player', {\r\n          height: '180',\r\n          width: '100%',\r\n          playerVars: {\r\n            controls: 0,\r\n            disablekb: 1,\r\n            enablejsapi: 1,\r\n            modestbranding: 1,\r\n            rel: 0,\r\n            showinfo: 0,\r\n            autoplay: 0\r\n          },\r\n          events: {\r\n            onReady: this.onPlayerReady,\r\n            onStateChange: this.onPlayerStateChange\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.error('YouTube API failed to load:', error)\r\n      }\r\n    },\r\n\r\n    onPlayerReady(event) {\r\n      // Player is ready to use\r\n    },\r\n\r\n    onPlayerStateChange(event) {\r\n      switch (event.data) {\r\n        case window.YT.PlayerState.PLAYING:\r\n          this.isPlaying = true\r\n          break\r\n        case window.YT.PlayerState.PAUSED:\r\n        case window.YT.PlayerState.ENDED:\r\n          this.isPlaying = false\r\n          break\r\n      }\r\n    },\r\n\r\n    playMusic(index) {\r\n      this.currentPlayingIndex = index\r\n      const music = this.musics[index]\r\n\r\n      this.player.loadVideoById(music.videoId)\r\n      this.isPlaying = true\r\n      this.currentTime = 0\r\n      this.duration = music.duration\r\n    },\r\n\r\n    togglePlay() {\r\n      if (this.isPlaying) {\r\n        this.player.pauseVideo()\r\n      } else {\r\n        this.player.playVideo()\r\n      }\r\n    },\r\n\r\n    nextTrack() {\r\n      this.currentPlayingIndex = (this.currentPlayingIndex + 1) % this.musics.length\r\n      this.playMusic(this.currentPlayingIndex)\r\n    },\r\n\r\n    previousTrack() {\r\n      this.currentPlayingIndex = (this.currentPlayingIndex - 1 + this.musics.length) % this.musics.length\r\n      this.playMusic(this.currentPlayingIndex)\r\n    },\r\n\r\n    toggleMute() {\r\n      if (this.volume === 0) {\r\n        this.volume = this.previousVolume\r\n      } else {\r\n        this.previousVolume = this.volume\r\n        this.volume = 0\r\n      }\r\n      this.player.setVolume(this.volume)\r\n    },\r\n\r\n    toggleRepeat() {\r\n      this.isRepeatEnabled = !this.isRepeatEnabled\r\n    },\r\n\r\n    toggleVideo() {\r\n      this.hideVideo = !this.hideVideo\r\n    },\r\n\r\n    seekTime(event) {\r\n      const progressBar = event.currentTarget\r\n      const clickPosition = event.offsetX / progressBar.clientWidth\r\n      const newTime = clickPosition * this.duration\r\n      this.player.seekTo(newTime)\r\n    },\r\n\r\n    formatTime(seconds) {\r\n      const minutes = Math.floor(seconds / 60)\r\n      const remainingSeconds = Math.floor(seconds % 60)\r\n      return `${minutes}:${remainingSeconds < 10 ? '0' : ''}${remainingSeconds}`\r\n    },\r\n\r\n    formatViews(views) {\r\n      return views.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n    },\r\n\r\n    togglePlayer() {\r\n      this.isPlayerHidden = !this.isPlayerHidden\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.initYouTubePlayer()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.min-h-screen {\r\n  min-height: 100vh;\r\n}\r\n\r\n.player-control {\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background: #fff;\r\n  padding: 10px;\r\n  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.toggle-button,\r\n.control-button,\r\n.play-button,\r\n.video-toggle-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.player-controls {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.progress-bar {\r\n  flex-grow: 1;\r\n  height: 5px;\r\n  background: #ccc;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.progress {\r\n  height: 100%;\r\n  background: #007bff;\r\n  border-radius: 5px;\r\n}\r\n\r\n.time-display {\r\n  font-size: 14px;\r\n}\r\n\r\n.control-buttons {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.control-button {\r\n  margin: 0 5px;\r\n}\r\n\r\n.active {\r\n  color: #007bff;\r\n}\r\n\r\n.main-content {\r\n  padding: 60px 20px;\r\n}\r\n\r\n.tabs {\r\n  display: flex;\r\n  justify-content: space-around;\r\n}\r\n\r\n.tab-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n\r\n.tab-button.active {\r\n  font-weight: bold;\r\n}\r\n\r\n.music-list, .card-view, .albums-view {\r\n  margin-top: 20px;\r\n}\r\n\r\n.music-item, .music-card, .album-card {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\n.music-info {\r\n  flex-grow: 1;\r\n}\r\n\r\n.playing-indicator {\r\n  display: flex;\r\n}\r\n\r\n.indicator-bar {\r\n  width: 4px;\r\n  height: 20px;\r\n  background: #007bff;\r\n  margin-right: 2px;\r\n}\r\n\r\n.thumbnail-placeholder, .album-art-placeholder {\r\n  width: 50px;\r\n  height: 50px;\r\n  background: #f0f0f0;\r\n  margin-right: 10px;\r\n}\r\n\r\n.card-info {\r\n  flex-grow: 1;\r\n}\r\n\r\n.card-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style>\r\n"],"mappings":";AA+IA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAE7C,eAAe;EACbC,IAAI,EAAE,qBAAqB;EAC3BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,mBAAmB,EAAE,CAAC,CAAC;MACvBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE,EAAE;MACVC,cAAc,EAAE,EAAE;MAClBC,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,KAAK;MACrBC,SAAS,EAAE,KAAK;MAChBC,eAAe,EAAE,KAAK;MACtBC,SAAS,EAAE,KAAK;MAChBC,UAAU,EAAE,SAAS;MACrBC,eAAe,EAAE,EAAE;MACnBC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE,CACJ;QAAEC,EAAE,EAAE,SAAS;QAAEtB,IAAI,EAAE;MAAU,CAAC,EAClC;QAAEsB,EAAE,EAAE,OAAO;QAAEtB,IAAI,EAAE;MAAU,CAAC,EAChC;QAAEsB,EAAE,EAAE,QAAQ;QAAEtB,IAAI,EAAE;MAAS,CAAC,EAChC;QAAEsB,EAAE,EAAE,QAAQ;QAAEtB,IAAI,EAAE;MAAS;IAEnC;EACF,CAAC;EAEDF,QAAQ,EAAE;IACRyB,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACpB,mBAAkB,IAAK,IAAI,IAAI,CAACD,MAAM,CAAC,IAAI,CAACC,mBAAmB,IAAI,IAAG;IACpF,CAAC;IACDqB,QAAQA,CAAA,EAAG;MACT,OAAQ,IAAI,CAACnB,WAAU,GAAI,IAAI,CAACC,QAAQ,GAAI,GAAE,IAAK;IACrD,CAAC;IACDmB,aAAaA,CAAA,EAAG;MACd,OAAO,CAAC,GAAG,IAAI,CAACvB,MAAM,EACnBwB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAI,GAAIF,CAAC,CAACE,KAAK,EAChCC,KAAK,CAAC,CAAC,EAAE,CAAC;IACf,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACb,aAAY,KAAM,KAAK,EAAE,OAAO,IAAI,CAAChB,MAAK;MACnD,OAAO,IAAI,CAACA,MAAM,CAAC8B,MAAM,CAACC,KAAI,IAAKA,KAAK,CAACC,KAAI,KAAM,IAAI,CAAChB,aAAa;IACvE,CAAC;IACDiB,aAAaA,CAAA,EAAG;MACd,MAAMnB,MAAK,GAAI,CAAC;MAChB,IAAI,CAACd,MAAM,CAACkC,OAAO,CAACH,KAAI,IAAK;QAC3B,IAAI,CAACjB,MAAM,CAACiB,KAAK,CAACI,QAAQ,CAAC,EAAE;UAC3BrB,MAAM,CAACiB,KAAK,CAACI,QAAQ,IAAI;YACvBrC,IAAI,EAAEiC,KAAK,CAACI,QAAQ;YACpBC,MAAM,EAAE,EAAE;YACVC,MAAM,EAAEN,KAAK,CAACM,MAAM;YACpBC,QAAQ,EAAEP,KAAK,CAACQ;UAClB;QACF;QACAzB,MAAM,CAACiB,KAAK,CAACI,QAAQ,CAAC,CAACC,MAAM,CAACI,IAAI,CAACT,KAAK;MAC1C,CAAC;MACD,OAAOU,MAAM,CAACC,MAAM,CAAC5B,MAAM;IAC7B;EACF,CAAC;EAED6B,OAAO,EAAE;IACP;IACAC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC9B,IAAIC,MAAM,CAACC,EAAE,EAAE;UACbF,OAAO,CAACC,MAAM,CAACC,EAAE;UACjB;QACF;QAEA,MAAMC,GAAE,GAAIC,QAAQ,CAACC,aAAa,CAAC,QAAQ;QAC3CF,GAAG,CAACG,GAAE,GAAI,oCAAmC;QAC7C,MAAMC,cAAa,GAAIH,QAAQ,CAACI,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChED,cAAc,CAACE,UAAU,CAACC,YAAY,CAACP,GAAG,EAAEI,cAAc;QAE1DN,MAAM,CAACU,uBAAsB,GAAI,MAAM;UACrCX,OAAO,CAACC,MAAM,CAACC,EAAE;QACnB;MACF,CAAC;IACH,CAAC;IAED,MAAMU,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,MAAM,IAAI,CAACd,cAAc,CAAC;QAE1B,IAAI,CAACrC,MAAK,GAAI,IAAIwC,MAAM,CAACC,EAAE,CAACW,MAAM,CAAC,gBAAgB,EAAE;UACnDC,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,MAAM;UACbC,UAAU,EAAE;YACVC,QAAQ,EAAE,CAAC;YACXC,SAAS,EAAE,CAAC;YACZC,WAAW,EAAE,CAAC;YACdC,cAAc,EAAE,CAAC;YACjBC,GAAG,EAAE,CAAC;YACNC,QAAQ,EAAE,CAAC;YACXC,QAAQ,EAAE;UACZ,CAAC;UACDC,MAAM,EAAE;YACNC,OAAO,EAAE,IAAI,CAACC,aAAa;YAC3BC,aAAa,EAAE,IAAI,CAACC;UACtB;QACF,CAAC;MACH,EAAE,OAAOxD,KAAK,EAAE;QACdyD,OAAO,CAACzD,KAAK,CAAC,6BAA6B,EAAEA,KAAK;MACpD;IACF,CAAC;IAEDsD,aAAaA,CAACI,KAAK,EAAE;MACnB;IAAA,CACD;IAEDF,mBAAmBA,CAACE,KAAK,EAAE;MACzB,QAAQA,KAAK,CAAC7E,IAAI;QAChB,KAAKgD,MAAM,CAACC,EAAE,CAAC6B,WAAW,CAACC,OAAO;UAChC,IAAI,CAAC5E,SAAQ,GAAI,IAAG;UACpB;QACF,KAAK6C,MAAM,CAACC,EAAE,CAAC6B,WAAW,CAACE,MAAM;QACjC,KAAKhC,MAAM,CAACC,EAAE,CAAC6B,WAAW,CAACG,KAAK;UAC9B,IAAI,CAAC9E,SAAQ,GAAI,KAAI;UACrB;MACJ;IACF,CAAC;IAED+E,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACjF,mBAAkB,GAAIiF,KAAI;MAC/B,MAAMnD,KAAI,GAAI,IAAI,CAAC/B,MAAM,CAACkF,KAAK;MAE/B,IAAI,CAAC3E,MAAM,CAAC4E,aAAa,CAACpD,KAAK,CAACqD,OAAO;MACvC,IAAI,CAAClF,SAAQ,GAAI,IAAG;MACpB,IAAI,CAACC,WAAU,GAAI;MACnB,IAAI,CAACC,QAAO,GAAI2B,KAAK,CAAC3B,QAAO;IAC/B,CAAC;IAEDiF,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACnF,SAAS,EAAE;QAClB,IAAI,CAACK,MAAM,CAAC+E,UAAU,CAAC;MACzB,OAAO;QACL,IAAI,CAAC/E,MAAM,CAACgF,SAAS,CAAC;MACxB;IACF,CAAC;IAEDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACvF,mBAAkB,GAAI,CAAC,IAAI,CAACA,mBAAkB,GAAI,CAAC,IAAI,IAAI,CAACD,MAAM,CAACyF,MAAK;MAC7E,IAAI,CAACR,SAAS,CAAC,IAAI,CAAChF,mBAAmB;IACzC,CAAC;IAEDyF,aAAaA,CAAA,EAAG;MACd,IAAI,CAACzF,mBAAkB,GAAI,CAAC,IAAI,CAACA,mBAAkB,GAAI,IAAI,IAAI,CAACD,MAAM,CAACyF,MAAM,IAAI,IAAI,CAACzF,MAAM,CAACyF,MAAK;MAClG,IAAI,CAACR,SAAS,CAAC,IAAI,CAAChF,mBAAmB;IACzC,CAAC;IAED0F,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACtF,MAAK,KAAM,CAAC,EAAE;QACrB,IAAI,CAACA,MAAK,GAAI,IAAI,CAACC,cAAa;MAClC,OAAO;QACL,IAAI,CAACA,cAAa,GAAI,IAAI,CAACD,MAAK;QAChC,IAAI,CAACA,MAAK,GAAI;MAChB;MACA,IAAI,CAACE,MAAM,CAACqF,SAAS,CAAC,IAAI,CAACvF,MAAM;IACnC,CAAC;IAEDwF,YAAYA,CAAA,EAAG;MACb,IAAI,CAACnF,eAAc,GAAI,CAAC,IAAI,CAACA,eAAc;IAC7C,CAAC;IAEDoF,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACrF,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAQ;IACjC,CAAC;IAEDsF,QAAQA,CAACnB,KAAK,EAAE;MACd,MAAMoB,WAAU,GAAIpB,KAAK,CAACqB,aAAY;MACtC,MAAMC,aAAY,GAAItB,KAAK,CAACuB,OAAM,GAAIH,WAAW,CAACI,WAAU;MAC5D,MAAMC,OAAM,GAAIH,aAAY,GAAI,IAAI,CAAC9F,QAAO;MAC5C,IAAI,CAACG,MAAM,CAAC+F,MAAM,CAACD,OAAO;IAC5B,CAAC;IAEDE,UAAUA,CAACC,OAAO,EAAE;MAClB,MAAMC,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACH,OAAM,GAAI,EAAE;MACvC,MAAMI,gBAAe,GAAIF,IAAI,CAACC,KAAK,CAACH,OAAM,GAAI,EAAE;MAChD,OAAO,GAAGC,OAAO,IAAIG,gBAAe,GAAI,EAAC,GAAI,GAAE,GAAI,EAAE,GAAGA,gBAAgB,EAAC;IAC3E,CAAC;IAEDC,WAAWA,CAAClF,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACmF,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,uBAAuB,EAAE,GAAG;IAC9D,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACxG,cAAa,GAAI,CAAC,IAAI,CAACA,cAAa;IAC3C;EACF,CAAC;EAEDyG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACvD,iBAAiB,CAAC;EACzB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}