{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'FavoriteSongs',\n  data() {\n    return {\n      favorites: [],\n      loading: true,\n      error: null,\n      removingId: null,\n      userId: null\n    };\n  },\n  async created() {\n    await this.getUserId();\n    if (this.userId) {\n      await this.fetchFavorites();\n    }\n  },\n  methods: {\n    formatDuration(seconds) {\n      if (!seconds) return '--:--';\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    },\n    async getUserId() {\n      try {\n        const response = await axios.get('http://localhost:3000/users/getss');\n        if (response.data && response.data.id) {\n          this.userId = response.data.id;\n        } else {\n          this.error = 'Unable to load user session.';\n        }\n      } catch (err) {\n        console.error('Error fetching user session:', err);\n        this.error = 'Failed to load user session.';\n      }\n    },\n    async fetchFavorites() {\n      try {\n        this.loading = true;\n        this.error = null;\n        const response = await axios.get(`http://localhost:3000/favs/getfavs/${this.userId}`);\n        const favoritesWithDetails = await Promise.all(response.data.map(async fav => {\n          try {\n            const musicResponse = await axios.get(`http://localhost:3000/musics/${fav.ms_id}`);\n            return {\n              ...fav,\n              ...musicResponse.data\n            };\n          } catch (err) {\n            console.error(`Error fetching details for music ${fav.ms_id}:`, err);\n            return fav;\n          }\n        }));\n        this.favorites = favoritesWithDetails;\n      } catch (err) {\n        console.error('Error fetching favorites:', err);\n        this.error = 'Unable to load your favorite songs.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async removeFavorite(musicId) {\n      try {\n        this.removingId = musicId;\n        await axios.get(`http://localhost:3000/favs/getfavsdtl/${musicId}`, {\n          params: {\n            userId: this.userId\n          }\n        });\n        this.favorites = this.favorites.filter(song => song.ms_id !== musicId);\n      } catch (err) {\n        console.error('Error removing favorite:', err);\n        this.error = 'Failed to remove song from favorites.';\n      } finally {\n        this.removingId = null;\n      }\n    },\n    goToMusic() {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","favorites","loading","error","removingId","userId","created","getUserId","fetchFavorites","methods","formatDuration","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","response","get","id","err","console","favoritesWithDetails","Promise","all","map","fav","musicResponse","ms_id","removeFavorite","musicId","params","filter","song","goToMusic","$router","push"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/FavoriteSongs.vue"],"sourcesContent":["<template>\r\n  <div class=\"favorites-container\">\r\n    <div class=\"favorites-wrapper\">\r\n      <!-- Header -->\r\n      <div class=\"favorites-header\">\r\n        <h1>My Favorite Songs</h1>\r\n        <p>Manage your favorite music collection</p>\r\n      </div>\r\n\r\n      <!-- Loading State -->\r\n      <div v-if=\"loading\" class=\"loading-state\">\r\n        <div class=\"loading-spinner\"></div>\r\n        <p>Loading your favorite songs...</p>\r\n      </div>\r\n\r\n      <!-- Error State -->\r\n      <div v-if=\"error\" class=\"error-message\">\r\n        <span class=\"error-icon\">‚ö†Ô∏è</span>\r\n        <p>{{ error }}</p>\r\n      </div>\r\n\r\n      <!-- Empty State -->\r\n      <div v-if=\"!loading && favorites.length === 0\" class=\"empty-state\">\r\n        <div class=\"music-icon\">üéµ</div>\r\n        <p>You haven't added any songs to your favorites yet.</p>\r\n        <button @click=\"goToMusic\" class=\"browse-button\">Browse Music</button>\r\n      </div>\r\n\r\n      <!-- Favorites Grid -->\r\n      <div v-if=\"!loading && favorites.length > 0\" class=\"favorites-grid\">\r\n        <div \r\n          v-for=\"song in favorites\" \r\n          :key=\"song.ms_id\"\r\n          class=\"song-card\"\r\n        >\r\n          <div class=\"song-content\">\r\n            <div class=\"song-info\">\r\n              <h3>{{ song.ms_name }}</h3>\r\n              <p class=\"album\">Album: {{ song.ms_album }}</p>\r\n              <div class=\"song-details\">\r\n                <span class=\"song-type\">{{ song.ms_type }}</span>\r\n                <span class=\"duration\">{{ formatDuration(song.ms_duration) }}</span>\r\n              </div>\r\n            </div>\r\n            <button\r\n              @click=\"removeFavorite(song.ms_id)\"\r\n              :disabled=\"removingId === song.ms_id\"\r\n              class=\"remove-button\"\r\n            >\r\n              <span v-if=\"removingId !== song.ms_id\">üóëÔ∏è</span>\r\n              <span v-else class=\"removing\">‚åõ</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'FavoriteSongs',\r\n  data() {\r\n    return {\r\n      favorites: [],\r\n      loading: true,\r\n      error: null,\r\n      removingId: null,\r\n      userId: null\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getUserId();\r\n    if (this.userId) {\r\n      await this.fetchFavorites();\r\n    }\r\n  },\r\n  methods: {\r\n    formatDuration(seconds) {\r\n      if (!seconds) return '--:--';\r\n      const minutes = Math.floor(seconds / 60);\r\n      const remainingSeconds = seconds % 60;\r\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    },\r\n    \r\n    async getUserId() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/users/getss');\r\n        if (response.data && response.data.id) {\r\n          this.userId = response.data.id;\r\n        } else {\r\n          this.error = 'Unable to load user session.';\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching user session:', err);\r\n        this.error = 'Failed to load user session.';\r\n      }\r\n    },\r\n\r\n    async fetchFavorites() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        const response = await axios.get(`http://localhost:3000/favs/getfavs/${this.userId}`);\r\n        \r\n        const favoritesWithDetails = await Promise.all(\r\n          response.data.map(async (fav) => {\r\n            try {\r\n              const musicResponse = await axios.get(`http://localhost:3000/musics/${fav.ms_id}`);\r\n              return { ...fav, ...musicResponse.data };\r\n            } catch (err) {\r\n              console.error(`Error fetching details for music ${fav.ms_id}:`, err);\r\n              return fav;\r\n            }\r\n          })\r\n        );\r\n        \r\n        this.favorites = favoritesWithDetails;\r\n      } catch (err) {\r\n        console.error('Error fetching favorites:', err);\r\n        this.error = 'Unable to load your favorite songs.';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async removeFavorite(musicId) {\r\n      try {\r\n        this.removingId = musicId;\r\n        await axios.get(`http://localhost:3000/favs/getfavsdtl/${musicId}`, {\r\n          params: { userId: this.userId }\r\n        });\r\n        this.favorites = this.favorites.filter(song => song.ms_id !== musicId);\r\n      } catch (err) {\r\n        console.error('Error removing favorite:', err);\r\n        this.error = 'Failed to remove song from favorites.';\r\n      } finally {\r\n        this.removingId = null;\r\n      }\r\n    },\r\n\r\n    goToMusic() {\r\n      this.$router.push('/');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.favorites-container {\r\n  min-height: 100vh;\r\n  background-color: #f5f5f5;\r\n  padding: 2rem;\r\n}\r\n\r\n.favorites-wrapper {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.favorites-header {\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.favorites-header h1 {\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.favorites-header p {\r\n  color: #666;\r\n  font-size: 1.1rem;\r\n}\r\n\r\n.loading-state {\r\n  text-align: center;\r\n  padding: 2rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.loading-spinner {\r\n  display: inline-block;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #3498db;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n.error-message {\r\n  background-color: #fee2e2;\r\n  border-left: 4px solid #ef4444;\r\n  padding: 1rem;\r\n  margin-bottom: 1.5rem;\r\n  border-radius: 4px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.error-icon {\r\n  margin-right: 0.5rem;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 3rem;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.music-icon {\r\n  font-size: 3rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.browse-button {\r\n  background-color: #3498db;\r\n  color: white;\r\n  border: none;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 1rem;\r\n  margin-top: 1rem;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.browse-button:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.favorites-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1.5rem;\r\n}\r\n\r\n.song-card {\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.song-card:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.song-content {\r\n  padding: 1.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n}\r\n\r\n.song-info {\r\n  flex: 1;\r\n}\r\n\r\n.song-info h3 {\r\n  font-size: 1.25rem;\r\n  color: #333;\r\n  margin: 0 0 0.5rem 0;\r\n}\r\n\r\n.album {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.song-details {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n\r\n.song-type {\r\n  background-color: #e3f2fd;\r\n  color: #1976d2;\r\n  padding: 0.25rem 0.75rem;\r\n  border-radius: 999px;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.duration {\r\n  color: #666;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.remove-button {\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0.5rem;\r\n  border-radius: 50%;\r\n  transition: background-color 0.2s;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n.remove-button:hover {\r\n  background-color: #fee2e2;\r\n}\r\n\r\n.remove-button:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.removing {\r\n  animation: rotate 1s linear infinite;\r\n}\r\n\r\n@keyframes rotate {\r\n  from { transform: rotate(0deg); }\r\n  to { transform: rotate(360deg); }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .favorites-container {\r\n    padding: 1rem;\r\n  }\r\n\r\n  .favorites-header h1 {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .favorites-grid {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}