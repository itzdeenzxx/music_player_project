{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TheRegister',\n  data() {\n    return {\n      userEmail: null,\n      userName: null,\n      password: null,\n      // updated to match the input field's v-model\n      backendMessage: null,\n      errorMessage: null,\n      showPassword: false\n    };\n  },\n  mounted() {\n    this.$refs.userEmail.focus(); // Focus on the email input when mounted\n  },\n  methods: {\n    togglePasswordVisibility() {\n      this.showPassword = !this.showPassword;\n    },\n    async handleSubmit() {\n      const members = {\n        userEmail: this.userEmail,\n        userName: this.userName,\n        password: this.password\n      };\n      try {\n        const response = await axios.post('http://localhost:3000/users', members);\n        this.backendMessage = response.data.messageregister || 'success';\n        this.errorMessage = null;\n      } catch (err) {\n        this.backendMessage = 'fail';\n        this.errorMessage = 'Registration failed. Please try again later.';\n        console.log(err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","userEmail","userName","password","backendMessage","errorMessage","showPassword","mounted","$refs","focus","methods","togglePasswordVisibility","handleSubmit","members","response","post","messageregister","err","console","log"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheRegister.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"heading\">Sign In to Your Account</div>\r\n      <form @submit.prevent=\"handleSubmit\">\r\n        <div class=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"userEmail\"\r\n            autocomplete=\"off\"\r\n            required\r\n            v-model.trim=\"userEmail\"\r\n            ref=\"userEmail\"\r\n          />\r\n          <label for=\"userEmail\">Email</label>\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"userName\"\r\n            autocomplete=\"off\"\r\n            required\r\n            v-model.trim=\"userName\"\r\n          />\r\n          <label for=\"userName\">Name</label>\r\n        </div>\r\n        <div class=\"input-field\">\r\n          <input\r\n            :type=\"showPassword ? 'text' : 'password'\"\r\n            id=\"userPassword\"\r\n            autocomplete=\"off\"\r\n            required\r\n            v-model.trim=\"password\"\r\n          />\r\n          <label for=\"userPassword\">Password</label>\r\n          <span @click=\"togglePasswordVisibility\" class=\"passicon\">\r\n            {{ showPassword ? 'Hide' : 'Show' }}\r\n          </span>\r\n        </div>\r\n        <div class=\"btn-container\">\r\n          <button class=\"btn\" type=\"submit\">ตกลง</button>\r\n        </div>\r\n      </form>\r\n      <!-- Status message -->\r\n      <p v-if=\"backendMessage === 'success'\" class=\"alert alert-success mt-3\">\r\n        ลงทะเบียนสำเร็จ - {{ backendMessage }}\r\n      </p>\r\n      <p v-else-if=\"backendMessage === 'fail'\" class=\"alert alert-danger mt-3\">\r\n        ลงทะเบียนผิดพลาด - {{ backendMessage }}\r\n      </p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'TheRegister',\r\n    data() {\r\n      return {\r\n        userEmail: null,\r\n        userName: null,\r\n        password: null, // updated to match the input field's v-model\r\n        backendMessage: null,\r\n        errorMessage: null,\r\n        showPassword: false,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$refs.userEmail.focus(); // Focus on the email input when mounted\r\n    },\r\n    methods: {\r\n      togglePasswordVisibility() {\r\n        this.showPassword = !this.showPassword;\r\n      },\r\n      async handleSubmit() {\r\n        const members = {\r\n          userEmail: this.userEmail,\r\n          userName: this.userName,\r\n          password: this.password,\r\n        };\r\n        try {\r\n          const response = await axios.post('http://localhost:3000/users', members);\r\n          this.backendMessage = response.data.messageregister || 'success';\r\n          this.errorMessage = null;\r\n        } catch (err) {\r\n          this.backendMessage = 'fail';\r\n          this.errorMessage = 'Registration failed. Please try again later.';\r\n          console.log(err);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .card {\r\n    background-color: #fffdfd;\r\n  }\r\n  \r\n  .card-body {\r\n    padding: 2rem;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 1.5rem;\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .form-floating > input::placeholder {\r\n    color: #6c757d;\r\n  }\r\n  \r\n  .btn-primary {\r\n    background-color: #007bff;\r\n    border: none;\r\n  }\r\n  \r\n  .btn-primary:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .alert {\r\n    font-size: 0.875rem;\r\n  }\r\n  \r\n  /* Styling from Uiverse.io */\r\n  .container {\r\n    border: solid 1px #8d8d8d;\r\n    padding: 20px;\r\n    border-radius: 20px;\r\n    background-color: #fff;\r\n  }\r\n  \r\n  .container .heading {\r\n    font-size: 1.3rem;\r\n    margin-bottom: 20px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .form {\r\n    max-width: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .form .btn-container {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .form .btn {\r\n    padding: 10px 20px;\r\n    font-size: 1rem;\r\n    text-transform: uppercase;\r\n    letter-spacing: 3px;\r\n    border-radius: 10px;\r\n    border: solid 1px #1034aa;\r\n    background: linear-gradient(135deg, #0034de, #006eff);\r\n    color: #fff;\r\n    font-weight: bold;\r\n    transition: all 0.2s ease;\r\n    box-shadow: 0px 2px 3px #000d3848, inset 0px 4px 5px #0070f0, inset 0px -4px 5px #002cbb;\r\n  }\r\n  \r\n  .form .btn:active {\r\n    box-shadow: inset 0px 4px 5px #0070f0, inset 0px -4px 5px #002cbb;\r\n    transform: scale(0.995);\r\n  }\r\n  \r\n  .input-field {\r\n    margin-b: 100px;\r\n    position: relative;\r\n  }\r\n  \r\n  .input-field label {\r\n    position: absolute;\r\n    color: #8d8d8d;\r\n    pointer-events: none;\r\n    left: 15px;\r\n    transform: translateY(0.6rem);\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .input-field input {\r\n    padding: 10px 15px;\r\n    font-size: 1rem;\r\n    border-radius: 8px;\r\n    border: solid 1px #8d8d8d;\r\n    width: 100%;\r\n  }\r\n  \r\n  .input-field input:focus,\r\n  .input-field input:valid {\r\n    outline: none;\r\n    border: solid 1px #0034de;\r\n  }\r\n  \r\n  .input-field input:focus ~ label,\r\n  .input-field input:valid ~ label {\r\n    transform: translateY(-51%) translateX(-10px) scale(0.8);\r\n    background-color: #fff;\r\n    padding: 0px 5px;\r\n    color: #0034de;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .passicon {\r\n    cursor: pointer;\r\n    font-size: 0.9rem;\r\n    color: #007bff;\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAqDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MAAE;MAChBC,cAAc,EAAE,IAAI;MACpBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,KAAK,CAACP,SAAS,CAACQ,KAAK,CAAC,CAAC,EAAE;EAChC,CAAC;EACDC,OAAO,EAAE;IACPC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACL,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACD,MAAMM,YAAYA,CAAA,EAAG;MACnB,MAAMC,OAAM,GAAI;QACdZ,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACD,IAAI;QACF,MAAMW,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,6BAA6B,EAAEF,OAAO,CAAC;QACzE,IAAI,CAACT,cAAa,GAAIU,QAAQ,CAACd,IAAI,CAACgB,eAAc,IAAK,SAAS;QAChE,IAAI,CAACX,YAAW,GAAI,IAAI;MAC1B,EAAE,OAAOY,GAAG,EAAE;QACZ,IAAI,CAACb,cAAa,GAAI,MAAM;QAC5B,IAAI,CAACC,YAAW,GAAI,8CAA8C;QAClEa,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}