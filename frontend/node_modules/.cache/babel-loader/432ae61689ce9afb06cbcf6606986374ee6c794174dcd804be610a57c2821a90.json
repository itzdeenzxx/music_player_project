{"ast":null,"code":"import { ref, onMounted } from 'vue';\nexport default {\n  name: 'EnhancedMusicPlayer',\n  data() {\n    return {\n      musics: [],\n      currentPlayingIndex: -1,\n      isPlaying: false,\n      currentTime: 0,\n      duration: 0,\n      volume: 80,\n      previousVolume: 80,\n      player: null,\n      isPlayerHidden: false,\n      hideVideo: false,\n      isRepeatEnabled: false,\n      isShuffle: false,\n      currentTab: 'classic',\n      playbackHistory: [],\n      isLoading: false,\n      error: null\n    };\n  },\n  computed: {\n    currentMusic() {\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null;\n    },\n    progress() {\n      return this.currentTime / this.duration * 100 || 0;\n    }\n  },\n  methods: {\n    // Initialize YouTube Player\n    async initYouTubePlayer() {\n      if (window.YT) return;\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n      document.body.appendChild(tag);\n      window.onYouTubeIframeAPIReady = () => {\n        this.player = new window.YT.Player('youtube-player', {\n          height: '180',\n          width: '100%',\n          playerVars: {\n            controls: 0,\n            disablekb: 1\n          },\n          events: {\n            onReady: this.onPlayerReady,\n            onStateChange: this.onPlayerStateChange\n          }\n        });\n      };\n    },\n    playMusic(index) {\n      this.currentPlayingIndex = index;\n      if (!this.player) this.initYouTubePlayer();\n      const videoId = this.getYouTubeIdFromUrl(this.musics[index].ms_path);\n      this.player.loadVideoById(videoId);\n      this.isPlaying = true;\n    },\n    togglePlay() {\n      this.isPlaying ? this.player.pauseVideo() : this.player.playVideo();\n      this.isPlaying = !this.isPlaying;\n    },\n    toggleMute() {\n      if (this.volume === 0) {\n        this.volume = this.previousVolume;\n      } else {\n        this.previousVolume = this.volume;\n        this.volume = 0;\n      }\n      this.player.setVolume(this.volume);\n    },\n    togglePlayer() {\n      this.isPlayerHidden = !this.isPlayerHidden;\n    },\n    toggleVideo() {\n      this.hideVideo = !this.hideVideo;\n    },\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60).toString().padStart(2, '0');\n      return `${minutes}:${secs}`;\n    },\n    seekTime(event) {\n      const progressWidth = event.currentTarget.offsetWidth;\n      const clickPosition = event.offsetX;\n      const clickTime = clickPosition / progressWidth * this.duration;\n      this.player.seekTo(clickTime);\n    }\n  },\n  mounted() {\n    this.initYouTubePlayer();\n  }\n};","map":{"version":3,"names":["ref","onMounted","name","data","musics","currentPlayingIndex","isPlaying","currentTime","duration","volume","previousVolume","player","isPlayerHidden","hideVideo","isRepeatEnabled","isShuffle","currentTab","playbackHistory","isLoading","error","computed","currentMusic","progress","methods","initYouTubePlayer","window","YT","tag","document","createElement","src","body","appendChild","onYouTubeIframeAPIReady","Player","height","width","playerVars","controls","disablekb","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","playMusic","index","videoId","getYouTubeIdFromUrl","ms_path","loadVideoById","togglePlay","pauseVideo","playVideo","toggleMute","setVolume","togglePlayer","toggleVideo","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","seekTime","event","progressWidth","currentTarget","offsetWidth","clickPosition","offsetX","clickTime","seekTo","mounted"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheHome.vue"],"sourcesContent":["<template>\r\n  <div class=\"min-h-screen bg-gray-100\">\r\n    <!-- Player Control (Fixed Position) -->\r\n    <div class=\"fixed bottom-0 left-0 w-80 bg-white shadow-lg rounded-tr-xl p-4 transition-transform duration-300\" \r\n         :class=\"{'translate-y-full': isPlayerHidden}\">\r\n      <button @click=\"togglePlayer\" \r\n              class=\"absolute -top-10 right-4 bg-white p-2 rounded-t-lg shadow-md\">\r\n        <span v-if=\"isPlayerHidden\">Show Player</span>\r\n        <span v-else>Hide Player</span>\r\n      </button>\r\n      \r\n      <!-- YouTube Player -->\r\n      <div class=\"relative\">\r\n        <div id=\"youtube-player\" :class=\"{'hidden': hideVideo}\"></div>\r\n        <button @click=\"toggleVideo\" \r\n                class=\"absolute top-2 right-2 bg-black/50 text-white p-1 rounded\">\r\n          {{ hideVideo ? 'Show Video' : 'Hide Video' }}\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Player Controls -->\r\n      <div class=\"mt-4\">\r\n        <div class=\"flex items-center justify-between mb-4\">\r\n          <div class=\"flex-1\">\r\n            <p class=\"text-sm font-bold truncate\">{{ currentMusic?.ms_name || 'Select a track' }}</p>\r\n            <p class=\"text-xs text-gray-500 truncate\">{{ currentMusic?.ms_album || 'No album' }}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Progress Bar -->\r\n        <div class=\"relative h-1 bg-gray-200 rounded cursor-pointer\" @click=\"seekTime\">\r\n          <div class=\"absolute h-full bg-green-500 rounded\" \r\n               :style=\"{ width: `${progress}%` }\"></div>\r\n        </div>\r\n\r\n        <!-- Time Display -->\r\n        <div class=\"flex justify-between text-xs text-gray-500 mt-1\">\r\n          <span>{{ formatTime(currentTime) }}</span>\r\n          <span>{{ formatTime(duration) }}</span>\r\n        </div>\r\n\r\n        <!-- Control Buttons -->\r\n        <div class=\"flex items-center justify-between mt-4\">\r\n          <button @click=\"toggleRepeat\" \r\n                  class=\"p-2 hover:text-green-500\"\r\n                  :class=\"{ 'text-green-500': isRepeatEnabled }\">\r\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M4 4v5h5M4 9l5-5M20 20v-5h-5m5 5l-5-5\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"previousTrack\" class=\"p-2 hover:text-green-500\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M19 5L9 12l10 7V5z M5 5v14\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"togglePlay\" \r\n                  class=\"p-3 bg-green-500 rounded-full text-white hover:bg-green-600\">\r\n            <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path v-if=\"isPlaying\" d=\"M6 4h4v16H6zM14 4h4v16h-4z\"/>\r\n              <path v-else d=\"M8 5v14l11-7z\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"nextTrack\" class=\"p-2 hover:text-green-500\">\r\n            <svg class=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M5 5l10 7-10 7V5z M19 5v14\"/>\r\n            </svg>\r\n          </button>\r\n\r\n          <button @click=\"toggleMute\" class=\"p-2 hover:text-green-500\">\r\n            <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path v-if=\"volume === 0\" d=\"M5 8h2l4-4v16l-4-4H5V8z M17 8l4 4m0-4l-4 4\"/>\r\n              <path v-else d=\"M5 8h2l4-4v16l-4-4H5V8z M15 8a5 5 0 0 1 0 8\"/>\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <!-- Add your main content structure here, for example a list of songs or playlists -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nexport default {\r\n  name: 'EnhancedMusicPlayer',\r\n  data() {\r\n    return {\r\n      musics: [],\r\n      currentPlayingIndex: -1,\r\n      isPlaying: false,\r\n      currentTime: 0,\r\n      duration: 0,\r\n      volume: 80,\r\n      previousVolume: 80,\r\n      player: null,\r\n      isPlayerHidden: false,\r\n      hideVideo: false,\r\n      isRepeatEnabled: false,\r\n      isShuffle: false,\r\n      currentTab: 'classic',\r\n      playbackHistory: [],\r\n      isLoading: false,\r\n      error: null\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    currentMusic() {\r\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null\r\n    },\r\n    progress() {\r\n      return (this.currentTime / this.duration) * 100 || 0\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    // Initialize YouTube Player\r\n    async initYouTubePlayer() {\r\n      if (window.YT) return\r\n      const tag = document.createElement('script')\r\n      tag.src = 'https://www.youtube.com/iframe_api'\r\n      document.body.appendChild(tag)\r\n      \r\n      window.onYouTubeIframeAPIReady = () => {\r\n        this.player = new window.YT.Player('youtube-player', {\r\n          height: '180',\r\n          width: '100%',\r\n          playerVars: { controls: 0, disablekb: 1 },\r\n          events: {\r\n            onReady: this.onPlayerReady,\r\n            onStateChange: this.onPlayerStateChange,\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n    playMusic(index) {\r\n      this.currentPlayingIndex = index\r\n      if (!this.player) this.initYouTubePlayer()\r\n\r\n      const videoId = this.getYouTubeIdFromUrl(this.musics[index].ms_path)\r\n      this.player.loadVideoById(videoId)\r\n      this.isPlaying = true\r\n    },\r\n\r\n    togglePlay() {\r\n      this.isPlaying ? this.player.pauseVideo() : this.player.playVideo()\r\n      this.isPlaying = !this.isPlaying\r\n    },\r\n\r\n    toggleMute() {\r\n      if (this.volume === 0) {\r\n        this.volume = this.previousVolume\r\n      } else {\r\n        this.previousVolume = this.volume\r\n        this.volume = 0\r\n      }\r\n      this.player.setVolume(this.volume)\r\n    },\r\n\r\n    togglePlayer() {\r\n      this.isPlayerHidden = !this.isPlayerHidden\r\n    },\r\n\r\n    toggleVideo() {\r\n      this.hideVideo = !this.hideVideo\r\n    },\r\n\r\n    formatTime(seconds) {\r\n      const minutes = Math.floor(seconds / 60)\r\n      const secs = Math.floor(seconds % 60).toString().padStart(2, '0')\r\n      return `${minutes}:${secs}`\r\n    },\r\n\r\n    seekTime(event) {\r\n      const progressWidth = event.currentTarget.offsetWidth\r\n      const clickPosition = event.offsetX\r\n      const clickTime = (clickPosition / progressWidth) * this.duration\r\n      this.player.seekTo(clickTime)\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.initYouTubePlayer()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Add any necessary styles */\r\n</style>\r\n\r\n\r\n<style>\r\n@keyframes music-bar {\r\n  0% { transform: scaleY(0.3); }\r\n  50% { transform: scaleY(1); }\r\n  100% { transform: scaleY(0.3); }\r\n}\r\n\r\n.animate-music-bar {\r\n  animation: music-bar 1s infinite;\r\n}\r\n\r\n.animate-music-bar:nth-child(1) { animation-delay: 0s; }\r\n.animate-music-bar:nth-child(2) { animation-delay: 0.2s; }\r\n.animate-music-bar:nth-child(3) { animation-delay: 0.4s; }\r\n.animate-music-bar:nth-child(4) { animation-delay: 0.6s; }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}