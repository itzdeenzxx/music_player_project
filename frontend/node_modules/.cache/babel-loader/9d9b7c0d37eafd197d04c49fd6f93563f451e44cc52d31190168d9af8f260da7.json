{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from '../event-bus';\nimport axios from 'axios';\nexport default {\n  name: 'TheLogin',\n  data() {\n    return {\n      loginname: null,\n      password: null,\n      backendMessage: null,\n      memEmail: null,\n      memName: null,\n      dutyId: null\n    };\n  },\n  mounted() {\n    if (sessionStorage.getItem('memEmail') != null) {\n      this.$router.push('/pagemember');\n    }\n  },\n  methods: {\n    async handleSubmit() {\n      let members = {\n        loginname: this.loginname,\n        password: this.password\n      };\n      try {\n        const response = await axios.post(`http://localhost:3000/users/login`, members);\n        this.backendMessage = response.data.messagelogin;\n        if (this.backendMessage == 'success') {\n          await this.chkSession();\n          EventBus.emit('loginok');\n          this.$router.push('/pagemember');\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    async chkSession() {\n      await axios.get(`http://localhost:3000/users/getss`).then(res => {\n        console.log(res.data);\n        this.memEmail = res.data.email;\n        this.memName = res.data.name;\n        this.dutyId = res.data.duty;\n        sessionStorage.setItem('memEmail', res.data.email);\n        sessionStorage.setItem('memName', res.data.name);\n        sessionStorage.setItem('dutyId', res.data.duty);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["EventBus","axios","name","data","loginname","password","backendMessage","memEmail","memName","dutyId","mounted","sessionStorage","getItem","$router","push","methods","handleSubmit","members","response","post","messagelogin","chkSession","emit","err","console","log","get","then","res","email","duty","setItem","catch","error"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"tomato-container\">\r\n    <div class=\"row mt-5\">\r\n      <div class=\"col-sm-12 col-md-6 col-lg-6 mb-5 image-container\">\r\n        <img src=\"../assets/tomato.png\" alt=\"\" width=\"80%\" class=\"tomato-image\">\r\n        <div class=\"background-circle\"></div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-6 col-lg-6 mb-3\">\r\n        <form @submit.prevent=\"handleSubmit()\" class=\"login-form\">\r\n          <h2 class=\"login-title\">Welcome Back!</h2>\r\n          <div class=\"custom-column\">\r\n            <div class=\"form-floating mb-4\">\r\n              <input \r\n                class=\"form-control tomato-input\" \r\n                type=\"text\" \r\n                id=\"loginname\" \r\n                v-model=\"loginname\" \r\n                autocomplete=\"off\" \r\n                required\r\n                autofocus \r\n                placeholder=\"loginname\">\r\n              <label for=\"loginname\">Email or Tel.</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-12 col-md-10 col-lg-8\">\r\n            <div class=\"form-floating mb-4\">\r\n              <input \r\n                class=\"form-control tomato-input\" \r\n                type=\"password\" \r\n                id=\"password\" \r\n                v-model=\"password\" \r\n                required\r\n                placeholder=\"Password\">\r\n              <label for=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"button-group\">\r\n            <router-link to=\"/register\" style=\"text-decoration: none;\">\r\n              <a href=\"#\" class=\"btn btn-outline-danger register-btn\">\r\n                <i class=\"bi bi-heart-fill\"></i>&nbsp;Register</a>\r\n            </router-link>\r\n            <div class=\"col-sm-12 col-md-6\">\r\n              <button class=\"cta\" type=\"submit\" style=\"width: 6rem;\">\r\n                <span>LogIn</span>\r\n                <svg width=\"15px\" height=\"10px\" viewBox=\"0 0 13 10\">\r\n                  <path d=\"M1,5 L11,5\"></path>\r\n                  <polyline points=\"8 1 12 5 8 9\"></polyline>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <p v-if=\"backendMessage == 'success'\" class=\"alert alert-success\">\r\n      เข้าระบบสำเร็จ - {{ backendMessage }}</p>\r\n    <p v-else-if=\"backendMessage == 'fail'\" class=\"alert alert-danger\">\r\n      เข้าระบบผิดพลาด - {{ backendMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from '../event-bus';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'TheLogin',\r\n  data() {\r\n    return {\r\n      loginname: null,\r\n      password: null,\r\n      backendMessage: null,\r\n      memEmail: null,\r\n      memName: null,\r\n      dutyId: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    if (sessionStorage.getItem('memEmail') != null) {\r\n      this.$router.push('/pagemember');\r\n    }\r\n  },\r\n  methods: {\r\n    async handleSubmit() {\r\n      let members = {\r\n        loginname: this.loginname,\r\n        password: this.password,\r\n      };\r\n      try {\r\n        const response = await axios.post(\r\n          `http://localhost:3000/users/login`, \r\n          members\r\n        );\r\n        this.backendMessage = response.data.messagelogin;\r\n        \r\n        if (this.backendMessage == 'success') {\r\n          await this.chkSession();\r\n          EventBus.emit('loginok');\r\n          this.$router.push('/pagemember');\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    async chkSession() {\r\n      await axios.get(`http://localhost:3000/users/getss`)\r\n        .then(res => {\r\n          console.log(res.data);\r\n          this.memEmail = res.data.email;\r\n          this.memName = res.data.name;\r\n          this.dutyId = res.data.duty;\r\n          sessionStorage.setItem('memEmail', res.data.email);\r\n          sessionStorage.setItem('memName', res.data.name);\r\n          sessionStorage.setItem('dutyId', res.data.duty);\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');\r\n\r\nbody {\r\n  font-family: 'Poppins', sans-serif;\r\n  background-color: #FFF8F8;\r\n  color: #333;\r\n}\r\n\r\n.tomato-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 2rem;\r\n}\r\n\r\n.image-container {\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.background-circle {\r\n  position: absolute;\r\n  width: 400px;\r\n  height: 400px;\r\n  background: radial-gradient(circle, rgba(255,99,71,0.1) 0%, rgba(255,99,71,0.05) 50%, rgba(255,255,255,0) 70%);\r\n  border-radius: 50%;\r\n  z-index: -1;\r\n}\r\n\r\n.tomato-image {\r\n  animation: float 6s ease-in-out infinite;\r\n}\r\n\r\n@keyframes float {\r\n  0% {\r\n    transform: translateY(0px);\r\n  }\r\n  50% {\r\n    transform: translateY(-20px);\r\n  }\r\n  100% {\r\n    transform: translateY(0px);\r\n  }\r\n}\r\n\r\n.login-form {\r\n  background: white;\r\n  padding: 2.5rem;\r\n  border-radius: 20px;\r\n  box-shadow: 0 8px 24px rgba(255, 99, 71, 0.1);\r\n}\r\n\r\n.login-title {\r\n  color: #FF6347;\r\n  font-weight: 600;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n}\r\n\r\n.tomato-input {\r\n  border: 2px solid #FFE4E1 !important;\r\n  border-radius: 10px !important;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.tomato-input:focus {\r\n  border-color: #FF6347 !important;\r\n  box-shadow: 0 0 0 0.2rem rgba(255, 99, 71, 0.25) !important;\r\n}\r\n\r\n.register-btn {\r\n  background-color: transparent;\r\n  border: 2px solid #FF6347;\r\n  color: #FF6347;\r\n  padding: 0.5rem 1.5rem;\r\n  border-radius: 25px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.register-btn:hover {\r\n  background-color: #FF6347;\r\n  color: white;\r\n}\r\n\r\n.icon-bar {\r\n  background-color: #FF6347;\r\n  position: sticky;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px 0;\r\n  box-shadow: 0 2px 10px rgba(255, 99, 71, 0.2);\r\n}\r\n\r\n.icon-bar a {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-decoration: none;\r\n  color: #FFF;\r\n  padding: 10px 15px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.icon-bar a:hover {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.icon-bar a i {\r\n  font-size: 18px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.custom-column {\r\n  width: 100%;\r\n  padding-top: 0;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .custom-column {\r\n    width: 83.3333%;\r\n  }\r\n}\r\n\r\n@media (min-width: 992px) {\r\n  .custom-column {\r\n    width: 66.6667%;\r\n  }\r\n}\r\n\r\n/* Original Login Button Styles Preserved */\r\n.cta {\r\n  position: relative;\r\n  margin: auto;\r\n  transition: all 0.2s ease;\r\n  border: none;\r\n  background: none;\r\n  cursor: pointer;\r\n  padding: 10px 15px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.cta:before {\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  display: block;\r\n  border-radius: 50px;\r\n  background: #A4DAA0;\r\n  width: 45px;\r\n  height: 45px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.cta span {\r\n  position: relative;\r\n  font-family: \"Ubuntu\", sans-serif;\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  letter-spacing: 0.05em;\r\n  color: black;\r\n}\r\n\r\n.cta svg {\r\n  position: relative;\r\n  top: 0;\r\n  margin-left: 5px;\r\n  fill: none;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke: black;\r\n  stroke-width: 2;\r\n  transform: translateX(-5px);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.cta:hover:before {\r\n  width: 100%;\r\n  background: #EA9C9C;\r\n}\r\n\r\n.cta:hover svg {\r\n  transform: translateX(0);\r\n}\r\n\r\n.cta:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n.button-group {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  gap: 5rem;\r\n  margin-top: 2rem;\r\n}\r\n</style>"],"mappings":";AA8DA,SAASA,QAAO,QAAS,cAAc;AACvC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAE,IAAI;MACdC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAIC,cAAc,CAACC,OAAO,CAAC,UAAU,KAAK,IAAI,EAAE;MAC9C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;IAClC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAIC,OAAM,GAAI;QACZb,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MACD,IAAI;QACF,MAAMa,QAAO,GAAI,MAAMjB,KAAK,CAACkB,IAAI,CAC/B,mCAAmC,EACnCF,OACF,CAAC;QACD,IAAI,CAACX,cAAa,GAAIY,QAAQ,CAACf,IAAI,CAACiB,YAAY;QAEhD,IAAI,IAAI,CAACd,cAAa,IAAK,SAAS,EAAE;UACpC,MAAM,IAAI,CAACe,UAAU,CAAC,CAAC;UACvBrB,QAAQ,CAACsB,IAAI,CAAC,SAAS,CAAC;UACxB,IAAI,CAACT,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;QAClC;MACF,EAAE,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB;IACF,CAAC;IACD,MAAMF,UAAUA,CAAA,EAAG;MACjB,MAAMpB,KAAK,CAACyB,GAAG,CAAC,mCAAmC,EAChDC,IAAI,CAACC,GAAE,IAAK;QACXJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACzB,IAAI,CAAC;QACrB,IAAI,CAACI,QAAO,GAAIqB,GAAG,CAACzB,IAAI,CAAC0B,KAAK;QAC9B,IAAI,CAACrB,OAAM,GAAIoB,GAAG,CAACzB,IAAI,CAACD,IAAI;QAC5B,IAAI,CAACO,MAAK,GAAImB,GAAG,CAACzB,IAAI,CAAC2B,IAAI;QAC3BnB,cAAc,CAACoB,OAAO,CAAC,UAAU,EAAEH,GAAG,CAACzB,IAAI,CAAC0B,KAAK,CAAC;QAClDlB,cAAc,CAACoB,OAAO,CAAC,SAAS,EAAEH,GAAG,CAACzB,IAAI,CAACD,IAAI,CAAC;QAChDS,cAAc,CAACoB,OAAO,CAAC,QAAQ,EAAEH,GAAG,CAACzB,IAAI,CAAC2B,IAAI,CAAC;MACjD,CAAC,EACAE,KAAK,CAACT,GAAE,IAAK;QACZC,OAAO,CAACS,KAAK,CAACV,GAAG,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}