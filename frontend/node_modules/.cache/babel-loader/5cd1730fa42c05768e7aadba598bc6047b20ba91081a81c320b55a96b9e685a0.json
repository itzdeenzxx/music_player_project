{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userInput: '',\n      messages: [],\n      errorMessage: '',\n      isChatOpen: false\n    };\n  },\n  methods: {\n    toggleChat() {\n      this.isChatOpen = !this.isChatOpen;\n    },\n    async sendMessage() {\n      if (this.userInput.trim() === '') return;\n      const userMessage = this.userInput;\n      this.messages.push({\n        user: userMessage,\n        bot: ''\n      });\n      this.userInput = '';\n      try {\n        const response = await axios.post('http://localhost:3000/chat/tomaty', {\n          message: userMessage\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const botReply = response.data.response.candidates[0].content.parts[0].text;\n        this.messages[this.messages.length - 1].bot = botReply;\n        this.errorMessage = '';\n      } catch (error) {\n        this.errorMessage = error.response ? error.response.data : 'Something went wrong!';\n        console.error('Error sending message:', this.errorMessage);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userInput","messages","errorMessage","isChatOpen","methods","toggleChat","sendMessage","trim","userMessage","push","user","bot","response","post","message","headers","botReply","candidates","content","parts","text","length","error","console"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TomatyComponent.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n      <div id=\"chat-circle\" @click=\"toggleChat\" class=\"btn btn-primary\">Chat</div>\n      <div class=\"chat-box\" v-show=\"isChatOpen\">\n        <div class=\"chat-box-toggle\" @click=\"toggleChat\">X</div>\n        <div class=\"chat-logs\">\n          <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"chat-msg\">\n            <div class=\"user\" v-if=\"message.user\">\n              <span class=\"msg-avatar\">\n                <img src=\"https://image.crisp.im/avatar/operator/196af8cc-f6ad-4ef7-afd1-c45d5231387c/240/?1483361727745\" />\n              </span>\n              <div class=\"cm-msg-text\"><strong>User:</strong> {{ message.user }}</div>\n            </div>\n            <div class=\"bot\" v-if=\"message.bot\">\n              <span class=\"msg-avatar\">\n                <img src=\"https://image.crisp.im/avatar/operator/196af8cc-f6ad-4ef7-afd1-c45d5231387c/240/?1483361727745\" />\n              </span>\n              <div class=\"cm-msg-text\"><strong>Bot:</strong> {{ message.bot }}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"chat-input\">\n          <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"Type your message\" />\n          <button id=\"chat-submit\" @click=\"sendMessage\">Send</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        userInput: '',\n        messages: [],\n        errorMessage: '',\n        isChatOpen: false,\n      };\n    },\n    methods: {\n      toggleChat() {\n        this.isChatOpen = !this.isChatOpen;\n      },\n      async sendMessage() {\n        if (this.userInput.trim() === '') return;\n  \n        const userMessage = this.userInput;\n        this.messages.push({ user: userMessage, bot: '' });\n        this.userInput = '';\n  \n        try {\n          const response = await axios.post('http://localhost:3000/chat/tomaty', {\n            message: userMessage,\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n  \n          const botReply = response.data.response.candidates[0].content.parts[0].text;\n          this.messages[this.messages.length - 1].bot = botReply;\n          this.errorMessage = '';\n        } catch (error) {\n          this.errorMessage = error.response ? error.response.data : 'Something went wrong!';\n          console.error('Error sending message:', this.errorMessage);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  .chat-container {\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    margin: 20px;\n  }\n  \n  #chat-circle {\n    width: 60px;\n    height: 60px;\n    background-color: #007bff;\n    color: white;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 60px;\n    cursor: pointer;\n  }\n  \n  .chat-box {\n    display: none;\n    width: 300px;\n    max-height: 500px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .chat-box-toggle {\n    text-align: right;\n    padding: 10px;\n    cursor: pointer;\n  }\n  \n  .chat-logs {\n    flex: 1;\n    padding: 10px;\n    overflow-y: auto;\n    background-color: #f9f9f9;\n  }\n  \n  .chat-msg {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n  \n  .msg-avatar img {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n  }\n  \n  .cm-msg-text {\n    background-color: #e9ecef;\n    padding: 8px;\n    border-radius: 6px;\n    max-width: 70%;\n  }\n  \n  .chat-input {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    border-top: 1px solid #ddd;\n  }\n  \n  .chat-input input {\n    flex: 1;\n    padding: 10px;\n    border-radius: 6px;\n    border: 1px solid #ccc;\n    margin-right: 10px;\n  }\n  \n  #chat-submit {\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 6px;\n    cursor: pointer;\n  }\n  </style>\n  "],"mappings":";AA8BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACF,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU;IACpC,CAAC;IACD,MAAMG,WAAWA,CAAA,EAAG;MAClB,IAAI,IAAI,CAACN,SAAS,CAACO,IAAI,CAAC,MAAM,EAAE,EAAE;MAElC,MAAMC,WAAU,GAAI,IAAI,CAACR,SAAS;MAClC,IAAI,CAACC,QAAQ,CAACQ,IAAI,CAAC;QAAEC,IAAI,EAAEF,WAAW;QAAEG,GAAG,EAAE;MAAG,CAAC,CAAC;MAClD,IAAI,CAACX,SAAQ,GAAI,EAAE;MAEnB,IAAI;QACF,MAAMY,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,mCAAmC,EAAE;UACrEC,OAAO,EAAEN;QACX,CAAC,EAAE;UACDO,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,MAAMC,QAAO,GAAIJ,QAAQ,CAACb,IAAI,CAACa,QAAQ,CAACK,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI;QAC3E,IAAI,CAACnB,QAAQ,CAAC,IAAI,CAACA,QAAQ,CAACoB,MAAK,GAAI,CAAC,CAAC,CAACV,GAAE,GAAIK,QAAQ;QACtD,IAAI,CAACd,YAAW,GAAI,EAAE;MACxB,EAAE,OAAOoB,KAAK,EAAE;QACd,IAAI,CAACpB,YAAW,GAAIoB,KAAK,CAACV,QAAO,GAAIU,KAAK,CAACV,QAAQ,CAACb,IAAG,GAAI,uBAAuB;QAClFwB,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAE,IAAI,CAACpB,YAAY,CAAC;MAC5D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}