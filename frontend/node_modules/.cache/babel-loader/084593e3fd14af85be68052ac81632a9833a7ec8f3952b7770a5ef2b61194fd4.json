{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'FavoriteSongs',\n  data() {\n    return {\n      favorites: [],\n      loading: true,\n      error: null,\n      removingId: null,\n      userId: null\n    };\n  },\n  async created() {\n    await this.getUserId();\n    if (this.userId) {\n      this.fetchFavorites();\n    }\n  },\n  methods: {\n    async fetchFavorites() {\n      try {\n        this.loading = true;\n        this.error = null;\n        const response = await axios.get(`http://localhost:3000/favs/getfavs/${this.userId}`);\n        this.favorites = response.data;\n      } catch (err) {\n        this.error = 'Failed to load favorites. Please try again.';\n        console.error('Error fetching favorites:', err);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async removeFavorite(musicId) {\n      try {\n        this.removingId = musicId;\n        await axios.delete(`http://localhost:3000/favs/getfavsdtl/${musicId}`, {\n          params: {\n            userId: this.userId\n          }\n        });\n        // Remove the song from the local list\n        this.favorites = this.favorites.filter(song => song.ms_id !== musicId);\n      } catch (err) {\n        this.error = 'Failed to remove from favorites. Please try again.';\n        console.error('Error removing favorite:', err);\n      } finally {\n        this.removingId = null;\n      }\n    },\n    async getUserId() {\n      try {\n        const res = await axios.get('http://localhost:3000/users/getss');\n        if (res.data && res.data.id) {\n          this.userId = res.data.id;\n        } else {\n          console.warn(\"User ID not found in session data:\", res.data);\n          this.error = 'User ID not found in session.';\n        }\n      } catch (err) {\n        console.error('Error fetching session:', err);\n        this.error = 'Failed to load session data.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","favorites","loading","error","removingId","userId","created","getUserId","fetchFavorites","methods","response","get","err","console","removeFavorite","musicId","delete","params","filter","song","ms_id","res","id","warn"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/FavoriteSongs.vue"],"sourcesContent":["<template>\r\n  <div class=\"favorites-container p-4\">\r\n    <h2 class=\"text-2xl font-bold mb-4\">My Favorite Songs</h2>\r\n    \r\n    <!-- Loading State -->\r\n    <div v-if=\"loading\" class=\"text-center py-4\">\r\n      <p>Loading your favorites...</p>\r\n    </div>\r\n\r\n    <!-- Error State -->\r\n    <div v-if=\"error\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <!-- Empty State -->\r\n    <div v-if=\"!loading && favorites.length === 0\" class=\"text-center py-8\">\r\n      <p class=\"text-gray-600\">You haven't added any songs to your favorites yet.</p>\r\n    </div>\r\n\r\n    <!-- Favorites List -->\r\n    <div v-if=\"!loading && favorites.length > 0\" class=\"grid gap-4\">\r\n      <div \r\n        v-for=\"song in favorites\" \r\n        :key=\"song.ms_id\"\r\n        class=\"bg-white shadow rounded-lg p-4 flex justify-between items-center hover:bg-gray-50\"\r\n      >\r\n        <div>\r\n          <h3 class=\"font-semibold\">{{ song.title }}</h3>\r\n          <p class=\"text-gray-600 text-sm\">{{ song.artist }}</p>\r\n        </div>\r\n        \r\n        <button\r\n          @click=\"removeFavorite(song.ms_id)\"\r\n          class=\"text-red-600 hover:text-red-800 p-2 rounded-full hover:bg-red-100\"\r\n          :disabled=\"removingId === song.ms_id\"\r\n        >\r\n          <span v-if=\"removingId === song.ms_id\">Removing...</span>\r\n          <span v-else>Remove</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'FavoriteSongs',\r\n  data() {\r\n    return {\r\n      favorites: [],\r\n      loading: true,\r\n      error: null,\r\n      removingId: null,\r\n      userId: null\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getUserId();\r\n    if (this.userId) {\r\n      this.fetchFavorites();\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchFavorites() {\r\n      try {\r\n        this.loading = true;\r\n        this.error = null;\r\n        const response = await axios.get(`http://localhost:3000/favs/getfavs/${this.userId}`);\r\n        this.favorites = response.data;\r\n      } catch (err) {\r\n        this.error = 'Failed to load favorites. Please try again.';\r\n        console.error('Error fetching favorites:', err);\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    async removeFavorite(musicId) {\r\n      try {\r\n        this.removingId = musicId;\r\n        await axios.delete(`http://localhost:3000/favs/getfavsdtl/${musicId}`, {\r\n          params: {\r\n            userId: this.userId\r\n          }\r\n        });\r\n        // Remove the song from the local list\r\n        this.favorites = this.favorites.filter(song => song.ms_id !== musicId);\r\n      } catch (err) {\r\n        this.error = 'Failed to remove from favorites. Please try again.';\r\n        console.error('Error removing favorite:', err);\r\n      } finally {\r\n        this.removingId = null;\r\n      }\r\n    },\r\n\r\n    async getUserId() {\r\n      try {\r\n        const res = await axios.get('http://localhost:3000/users/getss');\r\n        if (res.data && res.data.id) {\r\n          this.userId = res.data.id;\r\n        } else {\r\n          console.warn(\"User ID not found in session data:\", res.data);\r\n          this.error = 'User ID not found in session.';\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching session:', err);\r\n        this.error = 'Failed to load session data.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":"AA6CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE,IAAI;MACXC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,SAAS,CAAC,CAAC;IACtB,IAAI,IAAI,CAACF,MAAM,EAAE;MACf,IAAI,CAACG,cAAc,CAAC,CAAC;IACvB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,CAACN,OAAM,GAAI,IAAI;QACnB,IAAI,CAACC,KAAI,GAAI,IAAI;QACjB,MAAMO,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsC,IAAI,CAACN,MAAM,EAAE,CAAC;QACrF,IAAI,CAACJ,SAAQ,GAAIS,QAAQ,CAACV,IAAI;MAChC,EAAE,OAAOY,GAAG,EAAE;QACZ,IAAI,CAACT,KAAI,GAAI,6CAA6C;QAC1DU,OAAO,CAACV,KAAK,CAAC,2BAA2B,EAAES,GAAG,CAAC;MACjD,UAAU;QACR,IAAI,CAACV,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAED,MAAMY,cAAcA,CAACC,OAAO,EAAE;MAC5B,IAAI;QACF,IAAI,CAACX,UAAS,GAAIW,OAAO;QACzB,MAAMjB,KAAK,CAACkB,MAAM,CAAC,yCAAyCD,OAAO,EAAE,EAAE;UACrEE,MAAM,EAAE;YACNZ,MAAM,EAAE,IAAI,CAACA;UACf;QACF,CAAC,CAAC;QACF;QACA,IAAI,CAACJ,SAAQ,GAAI,IAAI,CAACA,SAAS,CAACiB,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,KAAI,KAAML,OAAO,CAAC;MACxE,EAAE,OAAOH,GAAG,EAAE;QACZ,IAAI,CAACT,KAAI,GAAI,oDAAoD;QACjEU,OAAO,CAACV,KAAK,CAAC,0BAA0B,EAAES,GAAG,CAAC;MAChD,UAAU;QACR,IAAI,CAACR,UAAS,GAAI,IAAI;MACxB;IACF,CAAC;IAED,MAAMG,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMc,GAAE,GAAI,MAAMvB,KAAK,CAACa,GAAG,CAAC,mCAAmC,CAAC;QAChE,IAAIU,GAAG,CAACrB,IAAG,IAAKqB,GAAG,CAACrB,IAAI,CAACsB,EAAE,EAAE;UAC3B,IAAI,CAACjB,MAAK,GAAIgB,GAAG,CAACrB,IAAI,CAACsB,EAAE;QAC3B,OAAO;UACLT,OAAO,CAACU,IAAI,CAAC,oCAAoC,EAAEF,GAAG,CAACrB,IAAI,CAAC;UAC5D,IAAI,CAACG,KAAI,GAAI,+BAA+B;QAC9C;MACF,EAAE,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAES,GAAG,CAAC;QAC7C,IAAI,CAACT,KAAI,GAAI,8BAA8B;MAC7C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}