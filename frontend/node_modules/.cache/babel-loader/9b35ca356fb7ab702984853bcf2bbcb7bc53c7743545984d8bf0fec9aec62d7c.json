{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport axios from 'axios';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\naxios.defaults.withCredentials = true;\nexport default {\n  name: 'PageMusic',\n  data() {\n    return {\n      musicList: [],\n      selectedMusic: null,\n      loading: true,\n      error: null,\n      title: 'All Music',\n      player: null,\n      isPlaying: false,\n      isLooping: false,\n      currentTime: 0,\n      duration: 0,\n      timeUpdateInterval: null,\n      noPadding: false,\n      favorites: new Set()\n    };\n  },\n  async mounted() {\n    await this.chkSession();\n  },\n  async created() {\n    try {\n      this.loadYouTubeAPI();\n      await this.fetchAllMusic();\n      await this.fetchFavorites();\n      const searchQuery = this.$route.params.query;\n      if (searchQuery) {\n        this.title = `Search Results: \"${searchQuery}\"`;\n        await this.searchMusic(searchQuery);\n      }\n    } catch (error) {\n      console.error('Error in component creation:', error);\n      this.error = 'An error occurred while loading the application.';\n    }\n  },\n  methods: {\n    async chkSession() {\n      try {\n        const res = await axios.get('http://localhost:3000/users/getss');\n        if (res.data && res.data.id) {\n          this.userId = res.data.id;\n          this.memEmail = res.data.email;\n          this.memName = res.data.name;\n          console.log(\"User ID:\", this.userId);\n        } else {\n          console.warn(\"User ID not found in session data:\", res.data);\n          this.error = 'User ID not found in session.';\n        }\n      } catch (err) {\n        console.error('Error fetching session:', err);\n        this.error = 'Failed to load session data.';\n      }\n    },\n    loadYouTubeAPI() {\n      if (!window.YT) {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          this.initializeYouTubePlayer();\n        };\n      } else {\n        this.initializeYouTubePlayer();\n      }\n    },\n    initializeYouTubePlayer() {\n      if (this.selectedMusic) {\n        const videoId = this.extractVideoId(this.selectedMusic.ms_path);\n        this.player = new window.YT.Player('youtube-player', {\n          height: '720',\n          width: '1280',\n          videoId: videoId,\n          playerVars: {\n            controls: 0,\n            disablekb: 1,\n            enablejsapi: 1,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0,\n            autoplay: 1\n          },\n          events: {\n            onReady: this.onPlayerReady,\n            onStateChange: this.onPlayerStateChange\n          }\n        });\n      }\n    },\n    onPlayerReady(event) {\n      event.target.playVideo();\n      this.duration = this.player.getDuration();\n      this.startTimeUpdate();\n    },\n    onPlayerStateChange(event) {\n      this.isPlaying = event.data === window.YT.PlayerState.PLAYING;\n\n      // Handle loop\n      if (event.data === window.YT.PlayerState.ENDED && this.isLooping) {\n        this.player.seekTo(0);\n        this.player.playVideo();\n      }\n    },\n    startTimeUpdate() {\n      this.timeUpdateInterval = setInterval(() => {\n        if (this.player && this.isPlaying) {\n          this.currentTime = this.player.getCurrentTime();\n        }\n      }, 1000);\n    },\n    async fetchAllMusic() {\n      this.loading = true;\n      try {\n        const response = await axios.get('http://localhost:3000/musics');\n        this.musicList = response.data;\n      } catch (error) {\n        console.error('Error fetching music:', error);\n        this.error = 'Failed to load music. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async searchMusic(query) {\n      this.loading = true;\n      try {\n        const response = await axios.get(`http://localhost:3000/musics/search/${query}`);\n        this.musicList = response.data;\n      } catch (error) {\n        console.error('Error searching music:', error);\n        this.error = 'Failed to search music. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    extractVideoId(url) {\n      const regex = /(?:embed\\/|v=|\\/)([\\w-]{11})/;\n      const match = url.match(regex);\n      return match ? match[1] : null;\n    },\n    playMusic(music) {\n      this.selectedMusic = music;\n      if (this.player) {\n        this.player.destroy();\n      }\n      this.initializeYouTubePlayer();\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    togglePlay() {\n      try {\n        if (this.isPlaying) {\n          this.player.pauseVideo();\n        } else {\n          this.player.playVideo();\n        }\n      } catch (err) {\n        alert(\"Please select music\");\n      }\n    },\n    toggleLoop() {\n      this.isLooping = !this.isLooping;\n    },\n    stopVideo() {\n      try {\n        if (this.player) {\n          this.player.stopVideo();\n        }\n      } catch (err) {\n        alert(\"Please select music\");\n      }\n    },\n    handleTimelineChange(event) {\n      const newTime = event.target.value;\n      this.player.seekTo(newTime);\n    },\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n    },\n    formatDuration(duration) {\n      const minutes = Math.floor(duration / 60);\n      const secs = Math.floor(duration % 60);\n      return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n    },\n    isFavorite(musicId) {\n      return this.favorites.has(musicId);\n    },\n    async fetchFavorites() {\n      try {\n        // Fix: Update endpoint URL\n        const response = await axios.post('http://localhost:3000/favs/getfavsbyuser', {\n          id: this.userId\n        });\n        if (response.data && Array.isArray(response.data)) {\n          // Add debugging log\n          console.log('Favorites data received:', response.data);\n\n          // Convert favorite data to Set of music IDs\n          this.favorites = new Set(response.data.map(fav => fav.ms_id));\n\n          // Add debugging log\n          console.log('Favorites set created:', Array.from(this.favorites));\n        } else {\n          console.warn('Unexpected favorites data format:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching favorites:', error);\n        // Add more detailed error logging\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n          console.error('Error status:', error.response.status);\n        }\n        this.error = 'Failed to load favorites';\n      }\n    },\n    hideMV() {\n      console.log(\"in func\");\n      this.noPadding = !this.noPadding;\n    },\n    async toggleFavorite(music) {\n      if (!music?.ms_id) {\n        console.error('Invalid music selection');\n        return;\n      }\n      try {\n        if (this.isFavorite(music.ms_id)) {\n          // Remove from favorites\n          const response = await axios.get(`http://localhost:3000/favs/getfavsdtl/${music.ms_id}`, {\n            params: {\n              userId: this.userId\n            }\n          });\n          if (response.data.deleteOK) {\n            const newFavorites = new Set(this.favorites);\n            newFavorites.delete(music.ms_id);\n            this.favorites = newFavorites;\n            console.log('Removed from favorites:', music.ms_id);\n          } else {\n            throw new Error(response.data.message || 'Failed to remove from favorites');\n          }\n        } else {\n          // Add to favorites\n          const response = await axios.post('http://localhost:3000/favs/addfavs', {\n            userId: this.userId,\n            musicId: music.ms_id\n          });\n          if (response.data.favoriteOK) {\n            const newFavorites = new Set(this.favorites);\n            newFavorites.add(music.ms_id);\n            this.favorites = newFavorites;\n            console.log('Added to favorites:', music.ms_id);\n          } else {\n            throw new Error(response.data.messageAddFavorite || 'Failed to add to favorites');\n          }\n        }\n      } catch (error) {\n        console.error('Error updating favorites:', error);\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n          console.error('Error status:', error.response.status);\n        }\n        this.error = error.response?.data?.error || error.message || 'Failed to update favorites';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","withCredentials","name","data","musicList","selectedMusic","loading","error","title","player","isPlaying","isLooping","currentTime","duration","timeUpdateInterval","noPadding","favorites","Set","mounted","chkSession","created","loadYouTubeAPI","fetchAllMusic","fetchFavorites","searchQuery","$route","params","query","searchMusic","console","methods","res","get","id","userId","memEmail","email","memName","log","warn","err","window","YT","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializeYouTubePlayer","videoId","extractVideoId","ms_path","Player","height","width","playerVars","controls","disablekb","enablejsapi","modestbranding","rel","showinfo","autoplay","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","playVideo","getDuration","startTimeUpdate","PlayerState","PLAYING","ENDED","seekTo","setInterval","getCurrentTime","response","url","regex","match","playMusic","music","destroy","scrollTo","top","behavior","togglePlay","pauseVideo","alert","toggleLoop","stopVideo","handleTimelineChange","newTime","value","formatTime","seconds","minutes","Math","floor","secs","formatDuration","isFavorite","musicId","has","post","Array","isArray","map","fav","ms_id","from","status","hideMV","toggleFavorite","deleteOK","newFavorites","delete","Error","message","favoriteOK","add","messageAddFavorite"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/PageMusic.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <!-- Music Player Section -->\r\n        <div v-if=\"selectedMusic\" class=\"col-12 mb-4\">\r\n          <div class=\"card tomato-card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"youtube-container\" :class=\"{ 'no-padding': noPadding }\">\r\n                <div id=\"youtube-player\">\r\n                  <div class=\"tomato-placeholder\">\r\n                    <div class=\"tomato-icon\">🍅</div>\r\n                    <h2>Select Your Tomato Tune!</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mt-3\">\r\n                <h4 class=\"tomato-title\">{{ selectedMusic.ms_name }} <span class=\"tomato-icon\">🍅</span></h4>\r\n                <p class=\"text-muted\">\r\n                  <span class=\"tomato-detail\">Album: {{ selectedMusic.ms_album }}</span> • \r\n                  <span class=\"tomato-detail\">Type: {{ selectedMusic.ms_type }}</span> • \r\n                  <span class=\"tomato-detail\">Duration: {{ formatDuration(selectedMusic.ms_duration) }}</span>\r\n                </p>\r\n  \r\n                <!-- Custom Player Controls -->\r\n                <div class=\"custom-player-controls\">\r\n                  <!-- Timeline -->\r\n                  <div class=\"timeline-container\">\r\n                    <input \r\n                      type=\"range\" \r\n                      class=\"timeline\" \r\n                      :value=\"currentTime\"\r\n                      :max=\"duration\"\r\n                      @input=\"handleTimelineChange\"\r\n                    >\r\n                    <div class=\"time-display\">\r\n                      {{ formatTime(currentTime) }} / {{ formatTime(duration) }}\r\n                    </div>\r\n                  </div>\r\n  \r\n                  <!-- Control Buttons -->\r\n                  <div class=\"controls-container\">\r\n                    <button @click=\"togglePlay\" class=\"control-btn\">\r\n                      <i :class=\"isPlaying ? 'fas fa-pause' : 'fas fa-play'\"></i>\r\n                    </button>\r\n                    <button @click=\"toggleLoop\" :class=\"['control-btn', { active: isLooping }]\">\r\n                      <i class=\"fas fa-redo\"></i>\r\n                    </button>\r\n                    <button @click=\"stopVideo\" class=\"control-btn\">\r\n                      <i class=\"fas fa-stop\"></i>\r\n                    </button>\r\n                    <button \r\n                      @click=\"toggleFavorite(selectedMusic)\" \r\n                      class=\"control-btn\"\r\n                      :class=\"{ 'active': isFavorite(selectedMusic.ms_id) }\"\r\n                    >\r\n                      <i class=\"fas fa-heart\" :class=\"{ 'text-danger': isFavorite(selectedMusic.ms_id) }\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <div @click=\"hideMV()\" class=\"btn-hide\">\r\n                    <button class=\"tomato-btn\">Hide Music Video 🍅</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Music Grid -->\r\n        <div class=\"col-12\">\r\n          <h2 class=\"mb-4 tomato-heading\">{{ title }} <span class=\"tomato-icon\">🍅</span></h2>\r\n          \r\n          <div v-if=\"loading\" class=\"text-center py-5\">\r\n            <div class=\"tomato-spinner\">🍅</div>\r\n          </div>\r\n  \r\n          <div v-else-if=\"error\" class=\"alert alert-warning tomato-alert\" role=\"alert\">\r\n            {{ error }}\r\n          </div>\r\n  \r\n          <div v-else-if=\"musicList.length === 0\" class=\"alert alert-info tomato-alert\" role=\"alert\">\r\n            ไม่พบเพลงที่ต้องการ 🍅\r\n          </div>\r\n        \r\n          <div v-else class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            <div v-for=\"music in musicList\" :key=\"music.ms_id\" class=\"col\">\r\n              <div class=\"card h-100 music-card tomato-music-card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ music.ms_name }}</h5>\r\n                  <p class=\"card-text\">\r\n                    <small class=\"text-muted\">\r\n                      Album: {{ music.ms_album }}<br>\r\n                      Type: {{ music.ms_type }}<br>\r\n                      Duration: {{ formatDuration(music.ms_duration) }}\r\n                    </small>\r\n                  </p>\r\n                  <div class=\"d-flex gap-2\">\r\n                    <button \r\n                      @click=\"playMusic(music)\" \r\n                      class=\"tomato-play-btn flex-grow-1\"\r\n                    >\r\n                      <i class=\"fas fa-play\"></i> Play\r\n                    </button>\r\n                    <button \r\n                      @click=\"toggleFavorite(music)\"\r\n                      class=\"tomato-fav-btn\"\r\n                      :class=\"isFavorite(music.ms_id) ? 'active' : ''\"\r\n                    >\r\n                      <i class=\"fas fa-heart\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n import axios from 'axios';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\naxios.defaults.withCredentials = true\r\n\r\n\r\nexport default {\r\n  name: 'PageMusic',\r\n  data() {\r\n    return {\r\n      musicList: [],\r\n      selectedMusic: null,\r\n      loading: true,\r\n      error: null,\r\n      title: 'All Music',\r\n      player: null,\r\n      isPlaying: false,\r\n      isLooping: false,\r\n      currentTime: 0,\r\n      duration: 0,\r\n      timeUpdateInterval: null,\r\n      noPadding: false,\r\n      favorites: new Set(),\r\n    };\r\n  },async mounted() {\r\n    await this.chkSession()\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      this.loadYouTubeAPI();\r\n      await this.fetchAllMusic();\r\n      await this.fetchFavorites();\r\n      \r\n      const searchQuery = this.$route.params.query;\r\n      if (searchQuery) {\r\n        this.title = `Search Results: \"${searchQuery}\"`;\r\n        await this.searchMusic(searchQuery);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in component creation:', error);\r\n      this.error = 'An error occurred while loading the application.';\r\n    }\r\n  },\r\n    methods: {\r\n        async chkSession() {\r\n    try {\r\n        const res = await axios.get('http://localhost:3000/users/getss');\r\n        if (res.data && res.data.id) {\r\n            this.userId = res.data.id;\r\n            this.memEmail = res.data.email;\r\n            this.memName = res.data.name;\r\n            console.log(\"User ID:\", this.userId);\r\n        } else {\r\n            console.warn(\"User ID not found in session data:\", res.data);\r\n            this.error = 'User ID not found in session.';\r\n        }\r\n    } catch (err) {\r\n        console.error('Error fetching session:', err);\r\n        this.error = 'Failed to load session data.';\r\n    }\r\n}\r\n,\r\n      loadYouTubeAPI() {\r\n        if (!window.YT) {\r\n          const tag = document.createElement('script');\r\n          tag.src = 'https://www.youtube.com/iframe_api';\r\n          const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n  \r\n          window.onYouTubeIframeAPIReady = () => {\r\n            this.initializeYouTubePlayer();\r\n          };\r\n        } else {\r\n          this.initializeYouTubePlayer();\r\n        }\r\n      },\r\n      initializeYouTubePlayer() {\r\n        if (this.selectedMusic) {\r\n          const videoId = this.extractVideoId(this.selectedMusic.ms_path);\r\n          this.player = new window.YT.Player('youtube-player', {\r\n            height: '720',\r\n            width: '1280',\r\n            videoId: videoId,\r\n            playerVars: {\r\n              controls: 0,\r\n              disablekb: 1,\r\n              enablejsapi: 1,\r\n              modestbranding: 1,\r\n              rel: 0,\r\n              showinfo: 0,\r\n              autoplay: 1\r\n            },\r\n            events: {\r\n              onReady: this.onPlayerReady,\r\n              onStateChange: this.onPlayerStateChange\r\n            }\r\n          });\r\n        }\r\n      },\r\n      onPlayerReady(event) {\r\n        event.target.playVideo();\r\n        this.duration = this.player.getDuration();\r\n        this.startTimeUpdate();\r\n      },\r\n      onPlayerStateChange(event) {\r\n        this.isPlaying = event.data === window.YT.PlayerState.PLAYING;\r\n        \r\n        // Handle loop\r\n        if (event.data === window.YT.PlayerState.ENDED && this.isLooping) {\r\n          this.player.seekTo(0);\r\n          this.player.playVideo();\r\n        }\r\n      },\r\n      startTimeUpdate() {\r\n        this.timeUpdateInterval = setInterval(() => {\r\n          if (this.player && this.isPlaying) {\r\n            this.currentTime = this.player.getCurrentTime();\r\n          }\r\n        }, 1000);\r\n      },\r\n      async fetchAllMusic() {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/musics');\r\n          this.musicList = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching music:', error);\r\n          this.error = 'Failed to load music. Please try again later.';\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      async searchMusic(query) {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/musics/search/${query}`);\r\n          this.musicList = response.data;\r\n        } catch (error) {\r\n          console.error('Error searching music:', error);\r\n          this.error = 'Failed to search music. Please try again later.';\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      extractVideoId(url) {\r\n        const regex = /(?:embed\\/|v=|\\/)([\\w-]{11})/;\r\n        const match = url.match(regex);\r\n        return match ? match[1] : null;\r\n      },\r\n      playMusic(music) {\r\n        this.selectedMusic = music;\r\n        if (this.player) {\r\n          this.player.destroy();\r\n        }\r\n        this.initializeYouTubePlayer();\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      },\r\n      togglePlay() {\r\n        try {\r\n          if (this.isPlaying) {\r\n            this.player.pauseVideo();\r\n          } else {\r\n            this.player.playVideo();\r\n          }\r\n        } catch (err) {\r\n          alert(\"Please select music\");\r\n        }\r\n      },\r\n      toggleLoop() {\r\n        this.isLooping = !this.isLooping;\r\n      },\r\n      stopVideo() {\r\n        try {\r\n          if (this.player) {\r\n            this.player.stopVideo();\r\n          }\r\n        } catch (err) {\r\n          alert(\"Please select music\");\r\n        }\r\n      },\r\n      handleTimelineChange(event) {\r\n        const newTime = event.target.value;\r\n        this.player.seekTo(newTime);\r\n      },\r\n      formatTime(seconds) {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n      },\r\n      formatDuration(duration) {\r\n        const minutes = Math.floor(duration / 60);\r\n        const secs = Math.floor(duration % 60);\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n      },\r\n      isFavorite(musicId) {\r\n      return this.favorites.has(musicId);\r\n    },\r\n\r\n    async fetchFavorites() {\r\n      try {\r\n        // Fix: Update endpoint URL\r\n        const response = await axios.post('http://localhost:3000/favs/getfavsbyuser', {\r\n          id: this.userId\r\n        });\r\n        \r\n        if (response.data && Array.isArray(response.data)) {\r\n          // Add debugging log\r\n          console.log('Favorites data received:', response.data);\r\n          \r\n          // Convert favorite data to Set of music IDs\r\n          this.favorites = new Set(response.data.map(fav => fav.ms_id));\r\n          \r\n          // Add debugging log\r\n          console.log('Favorites set created:', Array.from(this.favorites));\r\n        } else {\r\n          console.warn('Unexpected favorites data format:', response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching favorites:', error);\r\n        // Add more detailed error logging\r\n        if (error.response) {\r\n          console.error('Error response:', error.response.data);\r\n          console.error('Error status:', error.response.status);\r\n        }\r\n        this.error = 'Failed to load favorites';\r\n      }\r\n    },hideMV(){\r\n        console.log(\"in func\")\r\n        this.noPadding = !this.noPadding;\r\n      },\r\n\r\n    async toggleFavorite(music) {\r\n      if (!music?.ms_id) {\r\n        console.error('Invalid music selection');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (this.isFavorite(music.ms_id)) {\r\n          // Remove from favorites\r\n          const response = await axios.get(`http://localhost:3000/favs/getfavsdtl/${music.ms_id}`, {\r\n            params: { userId: this.userId }\r\n          });\r\n\r\n          if (response.data.deleteOK) {\r\n            const newFavorites = new Set(this.favorites);\r\n            newFavorites.delete(music.ms_id);\r\n            this.favorites = newFavorites;\r\n            console.log('Removed from favorites:', music.ms_id);\r\n          } else {\r\n            throw new Error(response.data.message || 'Failed to remove from favorites');\r\n          }\r\n        } else {\r\n          // Add to favorites\r\n          const response = await axios.post('http://localhost:3000/favs/addfavs', {\r\n            userId: this.userId,\r\n            musicId: music.ms_id\r\n          });\r\n\r\n          if (response.data.favoriteOK) {\r\n            const newFavorites = new Set(this.favorites);\r\n            newFavorites.add(music.ms_id);\r\n            this.favorites = newFavorites;\r\n            console.log('Added to favorites:', music.ms_id);\r\n          } else {\r\n            throw new Error(response.data.messageAddFavorite || 'Failed to add to favorites');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating favorites:', error);\r\n        if (error.response) {\r\n          console.error('Error response:', error.response.data);\r\n          console.error('Error status:', error.response.status);\r\n        }\r\n        this.error = error.response?.data?.error || error.message || 'Failed to update favorites';\r\n      }\r\n    },\r\n\r\n    \r\n    }\r\n  };\r\n  </script>\r\n \r\n  \r\n <style scoped>\r\n .tomato-card {\r\n   border: 2px solid #ff6b6b;\r\n   border-radius: 20px;\r\n   box-shadow: 0 4px 12px rgba(255, 107, 107, 0.1);\r\n }\r\n \r\n .tomato-placeholder {\r\n   display: flex;\r\n   flex-direction: column;\r\n   align-items: center;\r\n   justify-content: center;\r\n   height: 200px;\r\n   background-color: #fff5f5;\r\n   border-radius: 15px;\r\n }\r\n \r\n .tomato-icon {\r\n   font-size: 2rem;\r\n   margin-bottom: 1rem;\r\n }\r\n \r\n .tomato-title {\r\n   color: #ff6b6b;\r\n   font-weight: 600;\r\n }\r\n \r\n .tomato-heading {\r\n   color: #ff6b6b;\r\n   font-weight: 600;\r\n   display: flex;\r\n   align-items: center;\r\n   gap: 0.5rem;\r\n }\r\n \r\n .tomato-spinner {\r\n   font-size: 3rem;\r\n   animation: spin 2s linear infinite;\r\n }\r\n \r\n @keyframes spin {\r\n   from { transform: rotate(0deg); }\r\n   to { transform: rotate(360deg); }\r\n }\r\n \r\n .tomato-alert {\r\n   border: none;\r\n   background-color: #fff5f5;\r\n   color: #ff6b6b;\r\n   border-radius: 15px;\r\n }\r\n \r\n .tomato-music-card {\r\n   border: 2px solid #ffd8d8;\r\n   border-radius: 15px;\r\n   transition: all 0.3s ease;\r\n }\r\n \r\n .tomato-music-card:hover {\r\n   transform: translateY(-5px);\r\n   border-color: #ff6b6b;\r\n   box-shadow: 0 4px 12px rgba(255, 107, 107, 0.15);\r\n }\r\n \r\n .tomato-play-btn {\r\n   background-color: #ff6b6b;\r\n   color: white;\r\n   border: none;\r\n   border-radius: 25px;\r\n   padding: 8px 16px;\r\n   transition: all 0.3s ease;\r\n }\r\n \r\n .tomato-play-btn:hover {\r\n   background-color: #ff5252;\r\n   transform: scale(1.02);\r\n }\r\n \r\n .tomato-fav-btn {\r\n   background-color: #fff5f5;\r\n   color: #ff6b6b;\r\n   border: 2px solid #ff6b6b;\r\n   border-radius: 50%;\r\n   width: 40px;\r\n   height: 40px;\r\n   display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   transition: all 0.3s ease;\r\n }\r\n \r\n .tomato-fav-btn.active {\r\n   background-color: #ff6b6b;\r\n   color: white;\r\n }\r\n \r\n .tomato-btn {\r\n   border: none;\r\n   color: white;\r\n   background-color: #ff6b6b;\r\n   border-radius: 25px;\r\n   font-family: inherit;\r\n   font-size: 17px;\r\n   padding: 0.6em 1.5em;\r\n   transition: all 0.3s ease;\r\n }\r\n \r\n .tomato-btn:hover {\r\n   background-color: #ff5252;\r\n   transform: scale(1.05);\r\n   box-shadow: 0 4px 12px rgba(255, 107, 107, 0.2);\r\n }\r\n \r\n .timeline {\r\n   width: 100%;\r\n   height: 4px;\r\n   background: #ffd8d8;\r\n   border-radius: 2px;\r\n   cursor: pointer;\r\n   margin-bottom: 0.5rem;\r\n }\r\n \r\n .timeline::-webkit-slider-thumb {\r\n   background: #ff6b6b;\r\n }\r\n \r\n .timeline::-moz-range-thumb {\r\n   background: #ff6b6b;\r\n }\r\n \r\n .control-btn {\r\n   color: #ff6b6b;\r\n   border: 2px solid #ffd8d8;\r\n   border-radius: 50%;\r\n   width: 40px;\r\n   height: 40px;\r\n   transition: all 0.3s ease;\r\n }\r\n \r\n .control-btn:hover {\r\n   background: #fff5f5;\r\n   border-color: #ff6b6b;\r\n }\r\n \r\n .control-btn.active {\r\n   color: white;\r\n   background: #ff6b6b;\r\n   border-color: #ff6b6b;\r\n }\r\n \r\n .custom-player-controls {\r\n   background: #fff5f5;\r\n   border-radius: 15px;\r\n   padding: 1.5rem;\r\n   margin-top: 1.5rem;\r\n }\r\n \r\n .time-display {\r\n   color: #ff6b6b;\r\n   font-size: 0.9rem;\r\n }\r\n \r\n .tomato-detail {\r\n   background-color: #fff5f5;\r\n   padding: 4px 8px;\r\n   border-radius: 12px;\r\n   font-size: 0.9rem;\r\n }\r\n .youtube-container.nopadding{\r\n    \r\n }\r\n </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}