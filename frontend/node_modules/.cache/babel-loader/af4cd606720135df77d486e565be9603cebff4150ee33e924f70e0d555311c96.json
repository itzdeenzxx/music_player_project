{"ast":null,"code":"import \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport axios from 'axios';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\naxios.defaults.withCredentials = true;\nexport default {\n  name: 'PageMusic',\n  data() {\n    return {\n      musicList: [],\n      selectedMusic: null,\n      loading: true,\n      error: null,\n      title: 'All Music',\n      player: null,\n      isPlaying: false,\n      isLooping: false,\n      currentTime: 0,\n      duration: 0,\n      timeUpdateInterval: null,\n      noPadding: false,\n      favorites: new Set(),\n      userId: null\n    };\n  },\n  async mounted() {\n    await this.chkSession();\n  },\n  async created() {\n    try {\n      this.loadYouTubeAPI();\n      await this.fetchAllMusic();\n      await this.fetchFavorites();\n      const searchQuery = this.$route.params.query;\n      if (searchQuery) {\n        this.title = `Search Results: \"${searchQuery}\"`;\n        await this.searchMusic(searchQuery);\n      }\n    } catch (error) {\n      console.error('Error in component creation:', error);\n      this.error = 'An error occurred while loading the application.';\n    }\n  },\n  methods: {\n    async chkSession() {\n      try {\n        const res = await axios.get('http://localhost:3000/users/getss');\n        this.userId = res.data.id; // กำหนด userId จาก session ที่ได้รับ\n        this.memEmail = res.data.email;\n        this.memName = res.data.name;\n      } catch (err) {\n        console.error(err);\n      }\n    },\n    loadYouTubeAPI() {\n      if (!window.YT) {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          this.initializeYouTubePlayer();\n        };\n      } else {\n        this.initializeYouTubePlayer();\n      }\n    },\n    initializeYouTubePlayer() {\n      if (this.selectedMusic) {\n        const videoId = this.extractVideoId(this.selectedMusic.ms_path);\n        this.player = new window.YT.Player('youtube-player', {\n          height: '720',\n          width: '1280',\n          videoId: videoId,\n          playerVars: {\n            controls: 0,\n            disablekb: 1,\n            enablejsapi: 1,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0,\n            autoplay: 1\n          },\n          events: {\n            onReady: this.onPlayerReady,\n            onStateChange: this.onPlayerStateChange\n          }\n        });\n      }\n    },\n    onPlayerReady(event) {\n      event.target.playVideo();\n      this.duration = this.player.getDuration();\n      this.startTimeUpdate();\n    },\n    onPlayerStateChange(event) {\n      this.isPlaying = event.data === window.YT.PlayerState.PLAYING;\n\n      // Handle loop\n      if (event.data === window.YT.PlayerState.ENDED && this.isLooping) {\n        this.player.seekTo(0);\n        this.player.playVideo();\n      }\n    },\n    startTimeUpdate() {\n      this.timeUpdateInterval = setInterval(() => {\n        if (this.player && this.isPlaying) {\n          this.currentTime = this.player.getCurrentTime();\n        }\n      }, 1000);\n    },\n    async fetchAllMusic() {\n      this.loading = true;\n      try {\n        const response = await axios.get('http://localhost:3000/musics');\n        this.musicList = response.data;\n      } catch (error) {\n        console.error('Error fetching music:', error);\n        this.error = 'Failed to load music. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async searchMusic(query) {\n      this.loading = true;\n      try {\n        const response = await axios.get(`http://localhost:3000/musics/search/${query}`);\n        this.musicList = response.data;\n      } catch (error) {\n        console.error('Error searching music:', error);\n        this.error = 'Failed to search music. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    extractVideoId(url) {\n      const regex = /(?:embed\\/|v=|\\/)([\\w-]{11})/;\n      const match = url.match(regex);\n      return match ? match[1] : null;\n    },\n    playMusic(music) {\n      this.selectedMusic = music;\n      if (this.player) {\n        this.player.destroy();\n      }\n      this.initializeYouTubePlayer();\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    togglePlay() {\n      try {\n        if (this.isPlaying) {\n          this.player.pauseVideo();\n        } else {\n          this.player.playVideo();\n        }\n      } catch (err) {\n        alert(\"Please select music\");\n      }\n    },\n    toggleLoop() {\n      this.isLooping = !this.isLooping;\n    },\n    stopVideo() {\n      try {\n        if (this.player) {\n          this.player.stopVideo();\n        }\n      } catch (err) {\n        alert(\"Please select music\");\n      }\n    },\n    handleTimelineChange(event) {\n      const newTime = event.target.value;\n      this.player.seekTo(newTime);\n    },\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n    },\n    formatDuration(duration) {\n      const minutes = Math.floor(duration / 60);\n      const secs = Math.floor(duration % 60);\n      return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\n    },\n    isFavorite(musicId) {\n      return this.favorites.has(musicId);\n    },\n    async fetchFavorites() {\n      try {\n        // Fix: Update endpoint URL\n        const response = await axios.post('http://localhost:3000/favs/getfavsbyuser', {\n          id: this.userId\n        });\n        if (response.data && Array.isArray(response.data)) {\n          // Add debugging log\n          console.log('Favorites data received:', response.data);\n\n          // Convert favorite data to Set of music IDs\n          this.favorites = new Set(response.data.map(fav => fav.ms_id));\n\n          // Add debugging log\n          console.log('Favorites set created:', Array.from(this.favorites));\n        } else {\n          console.warn('Unexpected favorites data format:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching favorites:', error);\n        // Add more detailed error logging\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n          console.error('Error status:', error.response.status);\n        }\n        this.error = 'Failed to load favorites';\n      }\n    },\n    async toggleFavorite(music) {\n      if (!music?.ms_id) {\n        console.error('Invalid music selection');\n        return;\n      }\n      try {\n        if (this.isFavorite(music.ms_id)) {\n          // Remove from favorites\n          const response = await axios.get(`http://localhost:3000/favs/getfavsdtl/${music.ms_id}`, {\n            params: {\n              userId: this.userId\n            }\n          });\n          if (response.data.deleteOK) {\n            const newFavorites = new Set(this.favorites);\n            newFavorites.delete(music.ms_id);\n            this.favorites = newFavorites;\n            console.log('Removed from favorites:', music.ms_id);\n          } else {\n            throw new Error(response.data.message || 'Failed to remove from favorites');\n          }\n        } else {\n          // Add to favorites\n          const response = await axios.post('http://localhost:3000/favs/addfavs', {\n            userId: this.userId,\n            musicId: music.ms_id\n          });\n          if (response.data.favoriteOK) {\n            const newFavorites = new Set(this.favorites);\n            newFavorites.add(music.ms_id);\n            this.favorites = newFavorites;\n            console.log('Added to favorites:', music.ms_id);\n          } else {\n            throw new Error(response.data.messageAddFavorite || 'Failed to add to favorites');\n          }\n        }\n      } catch (error) {\n        console.error('Error updating favorites:', error);\n        if (error.response) {\n          console.error('Error response:', error.response.data);\n          console.error('Error status:', error.response.status);\n        }\n        this.error = error.response?.data?.error || error.message || 'Failed to update favorites';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","defaults","withCredentials","name","data","musicList","selectedMusic","loading","error","title","player","isPlaying","isLooping","currentTime","duration","timeUpdateInterval","noPadding","favorites","Set","userId","mounted","chkSession","created","loadYouTubeAPI","fetchAllMusic","fetchFavorites","searchQuery","$route","params","query","searchMusic","console","methods","res","get","id","memEmail","email","memName","err","window","YT","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializeYouTubePlayer","videoId","extractVideoId","ms_path","Player","height","width","playerVars","controls","disablekb","enablejsapi","modestbranding","rel","showinfo","autoplay","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","playVideo","getDuration","startTimeUpdate","PlayerState","PLAYING","ENDED","seekTo","setInterval","getCurrentTime","response","url","regex","match","playMusic","music","destroy","scrollTo","top","behavior","togglePlay","pauseVideo","alert","toggleLoop","stopVideo","handleTimelineChange","newTime","value","formatTime","seconds","minutes","Math","floor","secs","formatDuration","isFavorite","musicId","has","post","Array","isArray","log","map","fav","ms_id","from","warn","status","toggleFavorite","deleteOK","newFavorites","delete","Error","message","favoriteOK","add","messageAddFavorite"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/PageMusic.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <!-- Music Player Section -->\r\n        <div v-if=\"selectedMusic\" class=\"col-12 mb-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"youtube-container\" :class=\"{ 'no-padding': noPadding }\">\r\n                <div id=\"youtube-player\">\r\n                  <div style=\"display: block; justify-content: center;align-items: center;\">\r\n                    <h2>Please Select Music in Bottom</h2>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"mt-3\">\r\n                <h4>{{ selectedMusic.ms_name }}</h4>\r\n                <p class=\"text-muted\">\r\n                  Album: {{ selectedMusic.ms_album }} • \r\n                  Type: {{ selectedMusic.ms_type }} • \r\n                  Duration: {{ formatDuration(selectedMusic.ms_duration) }}\r\n                </p>\r\n  \r\n                <!-- Custom Player Controls -->\r\n                <div class=\"custom-player-controls\">\r\n                  <!-- Timeline -->\r\n                  <div class=\"timeline-container\">\r\n                    <input \r\n                      type=\"range\" \r\n                      class=\"timeline\" \r\n                      :value=\"currentTime\"\r\n                      :max=\"duration\"\r\n                      @input=\"handleTimelineChange\"\r\n                    >\r\n                    <div class=\"time-display\">\r\n                      {{ formatTime(currentTime) }} / {{ formatTime(duration) }}\r\n                    </div>\r\n                  </div>\r\n  \r\n                  <!-- Control Buttons -->\r\n                    <div class=\"controls-container\">\r\n                    <button @click=\"togglePlay\" class=\"control-btn\">\r\n                        <i :class=\"isPlaying ? 'fas fa-pause' : 'fas fa-play'\"></i>\r\n                    </button>\r\n                    <button @click=\"toggleLoop\" :class=\"['control-btn', { active: isLooping }]\">\r\n                        <i class=\"fas fa-redo\"></i>\r\n                    </button>\r\n                    <button @click=\"stopVideo\" class=\"control-btn\">\r\n                        <i class=\"fas fa-stop\"></i>\r\n                    </button>\r\n                    <button \r\n                        @click=\"toggleFavorite(selectedMusic)\" \r\n                        class=\"control-btn\"\r\n                        :class=\"{ 'active': isFavorite(selectedMusic.ms_id) }\"\r\n                        >\r\n                        <i class=\"fas fa-heart\" :class=\"{ 'text-danger': isFavorite(selectedMusic.ms_id) }\"></i>\r\n                        </button>\r\n                    </div>\r\n                                <div @click=\"hideMV()\" class=\"btn-hide\">\r\n                    <button class=\"hidebtn\">Hide Music Video</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Music Grid -->\r\n        <div class=\"col-12\">\r\n          <h2 class=\"mb-4\">{{ title }}</h2>\r\n          \r\n          <div v-if=\"loading\" class=\"text-center py-5\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n  \r\n          <div v-else-if=\"error\" class=\"alert alert-warning\" role=\"alert\">\r\n            {{ error }}\r\n          </div>\r\n  \r\n          <div v-else-if=\"musicList.length === 0\" class=\"alert alert-info\" role=\"alert\">\r\n            ไม่สามารถพบเพลง\r\n          </div>\r\n        \r\n          <div v-else class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            <div v-for=\"music in musicList\" :key=\"music.ms_id\" class=\"col\">\r\n              <div class=\"card h-100 music-card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ music.ms_name }}</h5>\r\n                  <p class=\"card-text\">\r\n                    <small class=\"text-muted\">\r\n                      Album: {{ music.ms_album }}<br>\r\n                      Type: {{ music.ms_type }}<br>\r\n                      Duration: {{ formatDuration(music.ms_duration) }}\r\n                    </small>\r\n                  </p>\r\n                  <div class=\"d-flex gap-2\">\r\n                    <button \r\n                      @click=\"playMusic(music)\" \r\n                      class=\"btn btn-primary flex-grow-1\"\r\n                    >\r\n                      <i class=\"fas fa-play\"></i> Play\r\n                    </button>\r\n                    <button \r\n                      @click=\"toggleFavorite(music)\"\r\n                      class=\"btn\"\r\n                      :class=\"isFavorite(music.ms_id) ? 'btn-danger' : 'btn-outline-danger'\"\r\n                    >\r\n                      <i class=\"fas fa-heart\"></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n import axios from 'axios';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\naxios.defaults.withCredentials = true\r\n\r\n\r\nexport default {\r\n  name: 'PageMusic',\r\n  data() {\r\n    return {\r\n      musicList: [],\r\n      selectedMusic: null,\r\n      loading: true,\r\n      error: null,\r\n      title: 'All Music',\r\n      player: null,\r\n      isPlaying: false,\r\n      isLooping: false,\r\n      currentTime: 0,\r\n      duration: 0,\r\n      timeUpdateInterval: null,\r\n      noPadding: false,\r\n      favorites: new Set(),\r\n      userId: null,\r\n    };\r\n  },async mounted() {\r\n    await this.chkSession()\r\n  },\r\n\r\n  async created() {\r\n    try {\r\n      this.loadYouTubeAPI();\r\n      await this.fetchAllMusic();\r\n      await this.fetchFavorites();\r\n      \r\n      const searchQuery = this.$route.params.query;\r\n      if (searchQuery) {\r\n        this.title = `Search Results: \"${searchQuery}\"`;\r\n        await this.searchMusic(searchQuery);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in component creation:', error);\r\n      this.error = 'An error occurred while loading the application.';\r\n    }\r\n  },\r\n    methods: {\r\n        async chkSession() {\r\n        try {\r\n            const res = await axios.get('http://localhost:3000/users/getss');\r\n            this.userId = res.data.id; // กำหนด userId จาก session ที่ได้รับ\r\n            this.memEmail = res.data.email;\r\n            this.memName = res.data.name;\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n        },\r\n      loadYouTubeAPI() {\r\n        if (!window.YT) {\r\n          const tag = document.createElement('script');\r\n          tag.src = 'https://www.youtube.com/iframe_api';\r\n          const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n  \r\n          window.onYouTubeIframeAPIReady = () => {\r\n            this.initializeYouTubePlayer();\r\n          };\r\n        } else {\r\n          this.initializeYouTubePlayer();\r\n        }\r\n      },\r\n      initializeYouTubePlayer() {\r\n        if (this.selectedMusic) {\r\n          const videoId = this.extractVideoId(this.selectedMusic.ms_path);\r\n          this.player = new window.YT.Player('youtube-player', {\r\n            height: '720',\r\n            width: '1280',\r\n            videoId: videoId,\r\n            playerVars: {\r\n              controls: 0,\r\n              disablekb: 1,\r\n              enablejsapi: 1,\r\n              modestbranding: 1,\r\n              rel: 0,\r\n              showinfo: 0,\r\n              autoplay: 1\r\n            },\r\n            events: {\r\n              onReady: this.onPlayerReady,\r\n              onStateChange: this.onPlayerStateChange\r\n            }\r\n          });\r\n        }\r\n      },\r\n      onPlayerReady(event) {\r\n        event.target.playVideo();\r\n        this.duration = this.player.getDuration();\r\n        this.startTimeUpdate();\r\n      },\r\n      onPlayerStateChange(event) {\r\n        this.isPlaying = event.data === window.YT.PlayerState.PLAYING;\r\n        \r\n        // Handle loop\r\n        if (event.data === window.YT.PlayerState.ENDED && this.isLooping) {\r\n          this.player.seekTo(0);\r\n          this.player.playVideo();\r\n        }\r\n      },\r\n      startTimeUpdate() {\r\n        this.timeUpdateInterval = setInterval(() => {\r\n          if (this.player && this.isPlaying) {\r\n            this.currentTime = this.player.getCurrentTime();\r\n          }\r\n        }, 1000);\r\n      },\r\n      async fetchAllMusic() {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/musics');\r\n          this.musicList = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching music:', error);\r\n          this.error = 'Failed to load music. Please try again later.';\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      async searchMusic(query) {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/musics/search/${query}`);\r\n          this.musicList = response.data;\r\n        } catch (error) {\r\n          console.error('Error searching music:', error);\r\n          this.error = 'Failed to search music. Please try again later.';\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      extractVideoId(url) {\r\n        const regex = /(?:embed\\/|v=|\\/)([\\w-]{11})/;\r\n        const match = url.match(regex);\r\n        return match ? match[1] : null;\r\n      },\r\n      playMusic(music) {\r\n        this.selectedMusic = music;\r\n        if (this.player) {\r\n          this.player.destroy();\r\n        }\r\n        this.initializeYouTubePlayer();\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      },\r\n      togglePlay() {\r\n        try {\r\n          if (this.isPlaying) {\r\n            this.player.pauseVideo();\r\n          } else {\r\n            this.player.playVideo();\r\n          }\r\n        } catch (err) {\r\n          alert(\"Please select music\");\r\n        }\r\n      },\r\n      toggleLoop() {\r\n        this.isLooping = !this.isLooping;\r\n      },\r\n      stopVideo() {\r\n        try {\r\n          if (this.player) {\r\n            this.player.stopVideo();\r\n          }\r\n        } catch (err) {\r\n          alert(\"Please select music\");\r\n        }\r\n      },\r\n      handleTimelineChange(event) {\r\n        const newTime = event.target.value;\r\n        this.player.seekTo(newTime);\r\n      },\r\n      formatTime(seconds) {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n      },\r\n      formatDuration(duration) {\r\n        const minutes = Math.floor(duration / 60);\r\n        const secs = Math.floor(duration % 60);\r\n        return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;\r\n      },\r\n      isFavorite(musicId) {\r\n      return this.favorites.has(musicId);\r\n    },\r\n\r\n    async fetchFavorites() {\r\n      try {\r\n        // Fix: Update endpoint URL\r\n        const response = await axios.post('http://localhost:3000/favs/getfavsbyuser', {\r\n          id: this.userId\r\n        });\r\n        \r\n        if (response.data && Array.isArray(response.data)) {\r\n          // Add debugging log\r\n          console.log('Favorites data received:', response.data);\r\n          \r\n          // Convert favorite data to Set of music IDs\r\n          this.favorites = new Set(response.data.map(fav => fav.ms_id));\r\n          \r\n          // Add debugging log\r\n          console.log('Favorites set created:', Array.from(this.favorites));\r\n        } else {\r\n          console.warn('Unexpected favorites data format:', response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching favorites:', error);\r\n        // Add more detailed error logging\r\n        if (error.response) {\r\n          console.error('Error response:', error.response.data);\r\n          console.error('Error status:', error.response.status);\r\n        }\r\n        this.error = 'Failed to load favorites';\r\n      }\r\n    },\r\n\r\n    async toggleFavorite(music) {\r\n      if (!music?.ms_id) {\r\n        console.error('Invalid music selection');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        if (this.isFavorite(music.ms_id)) {\r\n          // Remove from favorites\r\n          const response = await axios.get(`http://localhost:3000/favs/getfavsdtl/${music.ms_id}`, {\r\n            params: { userId: this.userId }\r\n          });\r\n\r\n          if (response.data.deleteOK) {\r\n            const newFavorites = new Set(this.favorites);\r\n            newFavorites.delete(music.ms_id);\r\n            this.favorites = newFavorites;\r\n            console.log('Removed from favorites:', music.ms_id);\r\n          } else {\r\n            throw new Error(response.data.message || 'Failed to remove from favorites');\r\n          }\r\n        } else {\r\n          // Add to favorites\r\n          const response = await axios.post('http://localhost:3000/favs/addfavs', {\r\n            userId: this.userId,\r\n            musicId: music.ms_id\r\n          });\r\n\r\n          if (response.data.favoriteOK) {\r\n            const newFavorites = new Set(this.favorites);\r\n            newFavorites.add(music.ms_id);\r\n            this.favorites = newFavorites;\r\n            console.log('Added to favorites:', music.ms_id);\r\n          } else {\r\n            throw new Error(response.data.messageAddFavorite || 'Failed to add to favorites');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error updating favorites:', error);\r\n        if (error.response) {\r\n          console.error('Error response:', error.response.data);\r\n          console.error('Error status:', error.response.status);\r\n        }\r\n        this.error = error.response?.data?.error || error.message || 'Failed to update favorites';\r\n      }\r\n    },\r\n\r\n    \r\n    }\r\n  };\r\n  </script>\r\n \r\n  \r\n  <style scoped>\r\n  .control-btn.active {\r\n  color: #dc3545;\r\n  background: #ffe6e6;\r\n}\r\n\r\n.btn-outline-danger:hover {\r\n  background-color: #dc3545;\r\n  color: white;\r\n}\r\n  .music-card {\r\n    transition: transform 0.2s;\r\n  }\r\n  \r\n  .music-card:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n  \r\n  .youtube-container {\r\n    position: relative;\r\n    padding-bottom:56.25%;\r\n    /* padding-top:40.25%; */\r\n    height: 0;\r\n    overflow: hidden;\r\n    transition: padding-bottom 0.5s ease;\r\n  }\r\n  \r\n  .youtube-container #youtube-player {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  \r\n  .custom-player-controls {\r\n    margin-top: 1rem;\r\n    background: #f8f9fa;\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .timeline-container {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .timeline {\r\n    width: 100%;\r\n    height: 4px;\r\n    background: #ddd;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  .youtube-container.no-padding {\r\n  padding-bottom: 0;\r\n}\r\n  .time-display {\r\n    text-align: right;\r\n    font-size: 0.875rem;\r\n    color: #666;\r\n  }\r\n  \r\n  .controls-container {\r\n    display: flex;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .control-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #333;\r\n    font-size: 1.25rem;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.2s;\r\n  }\r\n  \r\n  .control-btn:hover {\r\n    background: #e9ecef;\r\n  }\r\n  \r\n  .control-btn.active {\r\n    color: #007bff;\r\n    background: #e7f1ff;\r\n  }\r\n  .btn-hide {\r\n    display: flex;\r\n    margin: 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n  }\r\n  input[type=\"range\"] {\r\n    -webkit-appearance: none;\r\n    width: 100%;\r\n    height: 4px;\r\n    background: #ddd;\r\n    border-radius: 2px;\r\n    outline: none;\r\n  }\r\n  \r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    width: 12px;\r\n    height: 12px;\r\n    background: #007bff;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    width: 12px;\r\n    height: 12px;\r\n    background: #007bff;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    border: none;\r\n  }\r\n\r\n  .hidebtn {\r\n border: none;\r\n color: #fff;\r\n background-image: linear-gradient(30deg, #0400ff, #4ce3f7);\r\n border-radius: 20px;\r\n background-size: 100% auto;\r\n font-family: inherit;\r\n font-size: 17px;\r\n padding: 0.6em 1.5em;\r\n}\r\n\r\n.hidebtn:hover {\r\n background-position: right center;\r\n background-size: 200% auto;\r\n -webkit-animation: pulse 2s infinite;\r\n animation: pulse512 1.5s infinite;\r\n}\r\n\r\n@keyframes pulse512 {\r\n 0% {\r\n  box-shadow: 0 0 0 0 #05bada66;\r\n }\r\n\r\n 70% {\r\n  box-shadow: 0 0 0 10px rgb(218 103 68 / 0%);\r\n }\r\n\r\n 100% {\r\n  box-shadow: 0 0 0 0 rgb(218 103 68 / 0%);\r\n }\r\n}\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}