{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, vShow as _vShow } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-box\"\n};\nconst _hoisted_3 = {\n  class: \"chat-logs\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"user\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"msg-avatar\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://image.crisp.im/avatar/operator/196af8cc-f6ad-4ef7-afd1-c45d5231387c/240/?1483361727745\"\n})], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"cm-msg-text\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"User:\", -1 /* HOISTED */);\nconst _hoisted_8 = {\n  key: 1,\n  class: \"bot\"\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"msg-avatar\"\n}, [/*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"https://image.crisp.im/avatar/operator/196af8cc-f6ad-4ef7-afd1-c45d5231387c/240/?1483361727745\"\n})], -1 /* HOISTED */);\nconst _hoisted_10 = {\n  class: \"cm-msg-text\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"strong\", null, \"Bot:\", -1 /* HOISTED */);\nconst _hoisted_12 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    id: \"chat-circle\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleChat && $options.toggleChat(...args)),\n    class: \"btn btn-primary\"\n  }, \"Chat\"), _withDirectives(_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"chat-box-toggle\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.toggleChat && $options.toggleChat(...args))\n  }, \"X\"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chat-msg\"\n    }, [message.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createTextVNode(\" \" + _toDisplayString(message.user), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true), message.bot ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createTextVNode(\" \" + _toDisplayString(message.bot), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.userInput = $event),\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"Type your message\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.userInput]]), _createElementVNode(\"button\", {\n    id: \"chat-submit\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Send\")])], 512 /* NEED_PATCH */), [[_vShow, $data.isChatOpen]])]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","src","_createElementBlock","_hoisted_1","id","onClick","_cache","args","$options","toggleChat","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","messages","message","index","user","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_createTextVNode","_toDisplayString","_createCommentVNode","bot","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","$event","userInput","onKeyup","_withKeys","sendMessage","placeholder","isChatOpen"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TomatyComponent.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n      <div id=\"chat-circle\" @click=\"toggleChat\" class=\"btn btn-primary\">Chat</div>\n      <div class=\"chat-box\" v-show=\"isChatOpen\">\n        <div class=\"chat-box-toggle\" @click=\"toggleChat\">X</div>\n        <div class=\"chat-logs\">\n          <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"chat-msg\">\n            <div class=\"user\" v-if=\"message.user\">\n              <span class=\"msg-avatar\">\n                <img src=\"https://image.crisp.im/avatar/operator/196af8cc-f6ad-4ef7-afd1-c45d5231387c/240/?1483361727745\" />\n              </span>\n              <div class=\"cm-msg-text\"><strong>User:</strong> {{ message.user }}</div>\n            </div>\n            <div class=\"bot\" v-if=\"message.bot\">\n              <span class=\"msg-avatar\">\n                <img src=\"https://image.crisp.im/avatar/operator/196af8cc-f6ad-4ef7-afd1-c45d5231387c/240/?1483361727745\" />\n              </span>\n              <div class=\"cm-msg-text\"><strong>Bot:</strong> {{ message.bot }}</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"chat-input\">\n          <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"Type your message\" />\n          <button id=\"chat-submit\" @click=\"sendMessage\">Send</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        userInput: '',\n        messages: [],\n        errorMessage: '',\n        isChatOpen: false,\n      };\n    },\n    methods: {\n      toggleChat() {\n        this.isChatOpen = !this.isChatOpen;\n      },\n      async sendMessage() {\n        if (this.userInput.trim() === '') return;\n  \n        const userMessage = this.userInput;\n        this.messages.push({ user: userMessage, bot: '' });\n        this.userInput = '';\n  \n        try {\n          const response = await axios.post('http://localhost:3000/chat/tomaty', {\n            message: userMessage,\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n  \n          const botReply = response.data.response.candidates[0].content.parts[0].text;\n          this.messages[this.messages.length - 1].bot = botReply;\n          this.errorMessage = '';\n        } catch (error) {\n          this.errorMessage = error.response ? error.response.data : 'Something went wrong!';\n          console.error('Error sending message:', this.errorMessage);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style>\n  .chat-container {\n    position: fixed;\n    bottom: 0;\n    right: 0;\n    margin: 20px;\n  }\n  \n  #chat-circle {\n    width: 60px;\n    height: 60px;\n    background-color: #007bff;\n    color: white;\n    border-radius: 50%;\n    text-align: center;\n    line-height: 60px;\n    cursor: pointer;\n  }\n  \n  .chat-box {\n    display: none;\n    width: 300px;\n    max-height: 500px;\n    background-color: #fff;\n    border-radius: 8px;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .chat-box-toggle {\n    text-align: right;\n    padding: 10px;\n    cursor: pointer;\n  }\n  \n  .chat-logs {\n    flex: 1;\n    padding: 10px;\n    overflow-y: auto;\n    background-color: #f9f9f9;\n  }\n  \n  .chat-msg {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px;\n  }\n  \n  .msg-avatar img {\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n  }\n  \n  .cm-msg-text {\n    background-color: #e9ecef;\n    padding: 8px;\n    border-radius: 6px;\n    max-width: 70%;\n  }\n  \n  .chat-input {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    border-top: 1px solid #ddd;\n  }\n  \n  .chat-input input {\n    flex: 1;\n    padding: 10px;\n    border-radius: 6px;\n    border: 1px solid #ccc;\n    margin-right: 10px;\n  }\n  \n  #chat-submit {\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    padding: 10px 15px;\n    border-radius: 6px;\n    cursor: pointer;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAU;;EAEdA,KAAK,EAAC;AAAW;;EAL9BC,GAAA;EAOiBD,KAAK,EAAC;;gCACTE,mBAAA,CAEO;EAFDF,KAAK,EAAC;AAAY,I,aACtBE,mBAAA,CAA4G;EAAvGC,GAAG,EAAC;AAAgG,G;;EAEtGH,KAAK,EAAC;AAAa;gCAACE,mBAAA,CAAsB,gBAAd,OAAK;;EAXpDD,GAAA;EAaiBD,KAAK,EAAC;;gCACTE,mBAAA,CAEO;EAFDF,KAAK,EAAC;AAAY,I,aACtBE,mBAAA,CAA4G;EAAvGC,GAAG,EAAC;AAAgG,G;;EAEtGH,KAAK,EAAC;AAAa;iCAACE,mBAAA,CAAqB,gBAAb,MAAI;;EAItCF,KAAK,EAAC;AAAY;;uBApB3BI,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJH,mBAAA,CAA4E;IAAvEI,EAAE,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAET,KAAK,EAAC;KAAkB,MAAI,G,gBACtEE,mBAAA,CAsBM,OAtBNU,UAsBM,GArBJV,mBAAA,CAAwD;IAAnDF,KAAK,EAAC,iBAAiB;IAAEO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,GAAC,GAClDP,mBAAA,CAeM,OAfNW,UAeM,I,kBAdJT,mBAAA,CAaMU,SAAA,QAnBhBC,WAAA,CAM0CC,KAAA,CAAAC,QAAQ,EANlD,CAMuBC,OAAO,EAAEC,KAAK;yBAA3Bf,mBAAA,CAaM;MAbqCH,GAAG,EAAEkB,KAAK;MAAEnB,KAAK,EAAC;QACnCkB,OAAO,CAACE,IAAI,I,cAApChB,mBAAA,CAKM,OALNiB,UAKM,GAJJC,UAEO,EACPpB,mBAAA,CAAwE,OAAxEqB,UAAwE,GAA/CC,UAAsB,EAX7DC,gBAAA,CAW6D,GAAC,GAAAC,gBAAA,CAAGR,OAAO,CAACE,IAAI,iB,OAX7EO,mBAAA,gBAamCT,OAAO,CAACU,GAAG,I,cAAlCxB,mBAAA,CAKM,OALNyB,UAKM,GAJJC,UAEO,EACP5B,mBAAA,CAAsE,OAAtE6B,WAAsE,GAA7CC,WAAqB,EAjB5DP,gBAAA,CAiB4D,GAAC,GAAAC,gBAAA,CAAGR,OAAO,CAACU,GAAG,iB,OAjB3ED,mBAAA,e;oCAqBQzB,mBAAA,CAGM,OAHN+B,WAGM,G,gBAFJ/B,mBAAA,CAAwF;IAtBlG,uBAAAM,MAAA,QAAAA,MAAA,MAAA0B,MAAA,IAsB0BlB,KAAA,CAAAmB,SAAS,GAAAD,MAAA;IAAGE,OAAK,EAAA5B,MAAA,QAAAA,MAAA,MAtB3C6B,SAAA,KAAA5B,IAAA,KAsBmDC,QAAA,CAAA4B,WAAA,IAAA5B,QAAA,CAAA4B,WAAA,IAAA7B,IAAA,CAAW;IAAE8B,WAAW,EAAC;iEAAlDvB,KAAA,CAAAmB,SAAS,E,GACzBjC,mBAAA,CAA2D;IAAnDI,EAAE,EAAC,aAAa;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAA4B,WAAA,IAAA5B,QAAA,CAAA4B,WAAA,IAAA7B,IAAA,CAAW;KAAE,MAAI,E,qCApBxBO,KAAA,CAAAwB,UAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}