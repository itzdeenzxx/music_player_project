{"ast":null,"code":"export default {\n  name: 'MusicPlayer',\n  data() {\n    return {\n      musics: [],\n      currentPlayingIndex: -1,\n      isPlaying: false,\n      currentTime: 0,\n      duration: 0,\n      volume: 80,\n      isFavorite: false,\n      player: null,\n      isYouTubeApiReady: false\n    };\n  },\n  computed: {\n    currentMusic() {\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null;\n    },\n    progress() {\n      return this.currentTime / this.duration * 100 || 0;\n    }\n  },\n  methods: {\n    async fetchMusics() {\n      try {\n        const response = await fetch('http://localhost:3000/musics');\n        if (!response.ok) throw new Error('Failed to fetch music data');\n        this.musics = await response.json();\n      } catch (error) {\n        console.error('Error fetching music:', error);\n      }\n    },\n    loadYouTubeAPI() {\n      if (!this.isYouTubeApiReady) {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          this.isYouTubeApiReady = true;\n          this.initializePlayer();\n        };\n      } else {\n        this.initializePlayer();\n      }\n    },\n    initializePlayer() {\n      if (this.currentMusic) {\n        this.player = new YT.Player('youtube-player', {\n          height: '390',\n          width: '640',\n          videoId: this.currentMusic.youtubeId,\n          // Assumes you have a `youtubeId` property in your music data\n          events: {\n            'onReady': this.onPlayerReady,\n            'onStateChange': this.onPlayerStateChange\n          }\n        });\n      }\n    },\n    onPlayerReady(event) {\n      event.target.setVolume(this.volume);\n    },\n    onPlayerStateChange(event) {\n      if (event.data === YT.PlayerState.PLAYING) {\n        this.isPlaying = true;\n        this.getDuration();\n        this.startTimer();\n      } else if (event.data === YT.PlayerState.PAUSED || event.data === YT.PlayerState.ENDED) {\n        this.isPlaying = false;\n        clearInterval(this.timer);\n      }\n    },\n    playMusic(index) {\n      this.currentPlayingIndex = index;\n      this.currentTime = 0;\n      this.loadYouTubeAPI();\n      this.isPlaying ? this.player.playVideo() : this.player.playVideo();\n    },\n    togglePlay() {\n      this.isPlaying ? this.player.pauseVideo() : this.player.playVideo();\n    },\n    nextTrack() {\n      if (this.currentPlayingIndex < this.musics.length - 1) {\n        this.playMusic(this.currentPlayingIndex + 1);\n      }\n    },\n    previousTrack() {\n      if (this.currentPlayingIndex > 0) {\n        this.playMusic(this.currentPlayingIndex - 1);\n      }\n    },\n    toggleVolume() {\n      this.volume = this.volume === 0 ? 80 : 0; // Toggle between 0 and 80\n      this.player.setVolume(this.volume);\n    },\n    adjustVolume(event) {\n      const volumeBar = event.currentTarget;\n      const rect = volumeBar.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      this.volume = Math.min(100, Math.max(0, Math.floor(offsetX / rect.width * 100)));\n      this.player.setVolume(this.volume);\n    },\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${minutes}:${secs < 10 ? '0' + secs : secs}`;\n    },\n    seekTime(event) {\n      const timeBar = event.currentTarget;\n      const rect = timeBar.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      const percentage = Math.min(100, Math.max(0, Math.floor(offsetX / rect.width * 100)));\n      this.currentTime = percentage / 100 * this.duration;\n      this.player.seekTo(this.currentTime);\n    },\n    startTimer() {\n      this.timer = setInterval(() => {\n        this.currentTime = this.player.getCurrentTime();\n        this.duration = this.player.getDuration();\n      }, 1000);\n    },\n    toggleFavorite() {\n      this.isFavorite = !this.isFavorite;\n    }\n  },\n  mounted() {\n    this.fetchMusics();\n  }\n};","map":{"version":3,"names":["name","data","musics","currentPlayingIndex","isPlaying","currentTime","duration","volume","isFavorite","player","isYouTubeApiReady","computed","currentMusic","progress","methods","fetchMusics","response","fetch","ok","Error","json","error","console","loadYouTubeAPI","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","window","onYouTubeIframeAPIReady","initializePlayer","YT","Player","height","width","videoId","youtubeId","events","onPlayerReady","onPlayerStateChange","event","target","setVolume","PlayerState","PLAYING","getDuration","startTimer","PAUSED","ENDED","clearInterval","timer","playMusic","index","playVideo","togglePlay","pauseVideo","nextTrack","length","previousTrack","toggleVolume","adjustVolume","volumeBar","currentTarget","rect","getBoundingClientRect","offsetX","clientX","left","Math","min","max","floor","formatTime","seconds","minutes","secs","seekTime","timeBar","percentage","seekTo","setInterval","getCurrentTime","toggleFavorite","mounted"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/TheHome.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"main\">\r\n      <div class=\"currentplaying\">\r\n        <svg height=\"50px\" width=\"50px\" viewBox=\"0 0 64 64\" xmlns=\"http://www.w3.org/2000/svg\" class=\"spotify\">\r\n          <!-- SVG code remains same -->\r\n        </svg>\r\n        <p class=\"heading\">Currently Playing</p>\r\n      </div>\r\n      <div v-for=\"(music, index) in musics\" :key=\"music.ms_id\" \r\n           class=\"loader\" \r\n           @click=\"playMusic(index)\">\r\n        <div class=\"song\">\r\n          <p class=\"name\">{{ music.ms_name }}</p>\r\n          <p class=\"artist\">{{ music.ms_album }}</p>\r\n        </div>\r\n        <div class=\"albumcover\"></div>\r\n        <div v-if=\"currentPlayingIndex === index\" class=\"loading\">\r\n          <div class=\"load\"></div>\r\n          <div class=\"load\"></div>\r\n          <div class=\"load\"></div>\r\n          <div class=\"load\"></div>\r\n        </div>\r\n        <div v-else class=\"play\"></div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"card\" v-if=\"currentMusic\">\r\n      <div class=\"top\">\r\n        <div class=\"pfp\">\r\n          <div class=\"playing\">\r\n            <div class=\"greenline line-1\"></div>\r\n            <div class=\"greenline line-2\"></div>\r\n            <div class=\"greenline line-3\"></div>\r\n            <div class=\"greenline line-4\"></div>\r\n            <div class=\"greenline line-5\"></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"texts\">\r\n          <p class=\"title-1\">{{ currentMusic.ms_name }}</p>\r\n          <p class=\"title-2\">{{ currentMusic.ms_album }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"youtube-container\" v-if=\"currentMusic\">\r\n        <div id=\"youtube-player\"></div>\r\n      </div>\r\n\r\n      <div class=\"controls\">\r\n        <svg @click=\"toggleVolume\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"20\" width=\"24\"\r\n          class=\"volume_button\">\r\n          <path clip-rule=\"evenodd\"\r\n            d=\"M11.26 3.691A1.2 1.2 0 0 1 12 4.8v14.4a1.199 1.199 0 0 1-2.048.848L5.503 15.6H2.4a1.2 1.2 0 0 1-1.2-1.2V9.6a1.2 1.2 0 0 1 1.2-1.2h3.103l4.449-4.448a1.2 1.2 0 0 1 1.308-.26Z\"\r\n            fill-rule=\"evenodd\"></path>\r\n        </svg>\r\n        <div class=\"volume\">\r\n          <div class=\"slider\" @click=\"adjustVolume\">\r\n            <div class=\"green\" :style=\"{ width: volume + '%' }\"></div>\r\n          </div>\r\n          <div class=\"circle\" :style=\"{ right: (100 - volume) + '%' }\"></div>\r\n        </div>\r\n        <svg @click=\"previousTrack\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"24\" width=\"24\">\r\n          <path clip-rule=\"evenodd\"\r\n            d=\"M12 21.6a9.6 9.6 0 1 0 0-19.2 9.6 9.6 0 0 0 0 19.2Zm.848-12.352a1.2 1.2 0 0 0-1.696-1.696l-3.6 3.6a1.2 1.2 0 0 0 0 1.696l3.6 3.6a1.2 1.2 0 0 0 1.696-1.696L11.297 13.2H15.6a1.2 1.2 0 1 0 0-2.4h-4.303l1.551-1.552Z\"\r\n            fill-rule=\"evenodd\"></path>\r\n        </svg>\r\n        <svg @click=\"togglePlay\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"24\" width=\"24\">\r\n          <path clip-rule=\"evenodd\"\r\n            d=\"M21.6 12a9.6 9.6 0 1 1-19.2 0 9.6 9.6 0 0 1 19.2 0ZM8.4 9.6a1.2 1.2 0 1 1 2.4 0v4.8a1.2 1.2 0 1 1-2.4 0V9.6Zm6-1.2a1.2 1.2 0 0 0-1.2 1.2v4.8a1.2 1.2 0 1 0 2.4 0V9.6a1.2 1.2 0 0 0-1.2-1.2Z\"\r\n            fill-rule=\"evenodd\"></path>\r\n        </svg>\r\n        <svg @click=\"nextTrack\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" height=\"24\" width=\"24\">\r\n          <path clip-rule=\"evenodd\"\r\n            d=\"M12 21.6a9.6 9.6 0 1 0 0-19.2 9.6 9.6 0 0 0 0 19.2Zm4.448-10.448-3.6-3.6a1.2 1.2 0 0 0-1.696 1.696l1.551 1.552H8.4a1.2 1.2 0 1 0 0 2.4h4.303l-1.551 1.552a1.2 1.2 0 1 0 1.696 1.696l3.6-3.6a1.2 1.2 0 0 0 0-1.696Z\"\r\n            fill-rule=\"evenodd\"></path>\r\n        </svg>\r\n        <div class=\"air\"></div>\r\n        <svg @click=\"toggleFavorite\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" stroke-width=\"2\" stroke-linejoin=\"round\"\r\n          stroke-linecap=\"round\" class=\"heart\" :style=\"{ fill: isFavorite ? 'pink' : 'none' }\" stroke=\"currentColor\" height=\"20\" width=\"24\">\r\n          <path\r\n            d=\"M3.343 7.778a4.5 4.5 0 0 1 7.339-1.46L12 7.636l1.318-1.318a4.5 4.5 0 1 1 6.364 6.364L12 20.364l-7.682-7.682a4.501 4.501 0 0 1-.975-4.904Z\">\r\n          </path>\r\n        </svg>\r\n      </div>\r\n      \r\n      <div class=\"song-time\">\r\n        <p class=\"timetext time_now\">{{ formatTime(currentTime) }}</p>\r\n        <div class=\"time\" @click=\"seekTime\">\r\n          <div class=\"elapsed\" :style=\"{ width: progress + '%' }\"></div>\r\n        </div>\r\n        <p class=\"timetext time_full\">{{ formatTime(duration) }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MusicPlayer',\r\n  data() {\r\n    return {\r\n      musics: [],\r\n      currentPlayingIndex: -1,\r\n      isPlaying: false,\r\n      currentTime: 0,\r\n      duration: 0,\r\n      volume: 80,\r\n      isFavorite: false,\r\n      player: null,\r\n      isYouTubeApiReady: false,\r\n    };\r\n  },\r\n  computed: {\r\n    currentMusic() {\r\n      return this.currentPlayingIndex >= 0 ? this.musics[this.currentPlayingIndex] : null;\r\n    },\r\n    progress() {\r\n      return (this.currentTime / this.duration) * 100 || 0;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchMusics() {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/musics');\r\n        if (!response.ok) throw new Error('Failed to fetch music data');\r\n        this.musics = await response.json();\r\n      } catch (error) {\r\n        console.error('Error fetching music:', error);\r\n      }\r\n    },\r\n    loadYouTubeAPI() {\r\n      if (!this.isYouTubeApiReady) {\r\n        const tag = document.createElement('script');\r\n        tag.src = 'https://www.youtube.com/iframe_api';\r\n        const firstScriptTag = document.getElementsByTagName('script')[0];\r\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n        window.onYouTubeIframeAPIReady = () => {\r\n          this.isYouTubeApiReady = true;\r\n          this.initializePlayer();\r\n        };\r\n      } else {\r\n        this.initializePlayer();\r\n      }\r\n    },\r\n    initializePlayer() {\r\n      if (this.currentMusic) {\r\n        this.player = new YT.Player('youtube-player', {\r\n          height: '390',\r\n          width: '640',\r\n          videoId: this.currentMusic.youtubeId, // Assumes you have a `youtubeId` property in your music data\r\n          events: {\r\n            'onReady': this.onPlayerReady,\r\n            'onStateChange': this.onPlayerStateChange,\r\n          },\r\n        });\r\n      }\r\n    },\r\n    onPlayerReady(event) {\r\n      event.target.setVolume(this.volume);\r\n    },\r\n    onPlayerStateChange(event) {\r\n      if (event.data === YT.PlayerState.PLAYING) {\r\n        this.isPlaying = true;\r\n        this.getDuration();\r\n        this.startTimer();\r\n      } else if (event.data === YT.PlayerState.PAUSED || event.data === YT.PlayerState.ENDED) {\r\n        this.isPlaying = false;\r\n        clearInterval(this.timer);\r\n      }\r\n    },\r\n    playMusic(index) {\r\n      this.currentPlayingIndex = index;\r\n      this.currentTime = 0;\r\n      this.loadYouTubeAPI();\r\n      this.isPlaying ? this.player.playVideo() : this.player.playVideo();\r\n    },\r\n    togglePlay() {\r\n      this.isPlaying ? this.player.pauseVideo() : this.player.playVideo();\r\n    },\r\n    nextTrack() {\r\n      if (this.currentPlayingIndex < this.musics.length - 1) {\r\n        this.playMusic(this.currentPlayingIndex + 1);\r\n      }\r\n    },\r\n    previousTrack() {\r\n      if (this.currentPlayingIndex > 0) {\r\n        this.playMusic(this.currentPlayingIndex - 1);\r\n      }\r\n    },\r\n    toggleVolume() {\r\n      this.volume = this.volume === 0 ? 80 : 0; // Toggle between 0 and 80\r\n      this.player.setVolume(this.volume);\r\n    },\r\n    adjustVolume(event) {\r\n      const volumeBar = event.currentTarget;\r\n      const rect = volumeBar.getBoundingClientRect();\r\n      const offsetX = event.clientX - rect.left;\r\n      this.volume = Math.min(100, Math.max(0, Math.floor((offsetX / rect.width) * 100)));\r\n      this.player.setVolume(this.volume);\r\n    },\r\n    formatTime(seconds) {\r\n      const minutes = Math.floor(seconds / 60);\r\n      const secs = Math.floor(seconds % 60);\r\n      return `${minutes}:${secs < 10 ? '0' + secs : secs}`;\r\n    },\r\n    seekTime(event) {\r\n      const timeBar = event.currentTarget;\r\n      const rect = timeBar.getBoundingClientRect();\r\n      const offsetX = event.clientX - rect.left;\r\n      const percentage = Math.min(100, Math.max(0, Math.floor((offsetX / rect.width) * 100)));\r\n      this.currentTime = (percentage / 100) * this.duration;\r\n      this.player.seekTo(this.currentTime);\r\n    },\r\n    startTimer() {\r\n      this.timer = setInterval(() => {\r\n        this.currentTime = this.player.getCurrentTime();\r\n        this.duration = this.player.getDuration();\r\n      }, 1000);\r\n    },\r\n    toggleFavorite() {\r\n      this.isFavorite = !this.isFavorite;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchMusics();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styles here */\r\n.main {\r\n  padding: 20px;\r\n  background-color: #f0f0f0;\r\n}\r\n.currentplaying {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.heading {\r\n  font-size: 24px;\r\n  margin-left: 10px;\r\n}\r\n.loader {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n}\r\n.song {\r\n  flex: 1;\r\n}\r\n.albumcover {\r\n  width: 50px;\r\n  height: 50px;\r\n  background-color: gray;\r\n}\r\n.loading, .play {\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: green;\r\n  border-radius: 50%;\r\n}\r\n.card {\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n}\r\n.top {\r\n  display: flex;\r\n}\r\n.pfp {\r\n  flex: 0 0 50px;\r\n}\r\n.texts {\r\n  flex: 1;\r\n}\r\n.controls {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n.volume {\r\n  position: relative;\r\n}\r\n.slider {\r\n  width: 100px;\r\n  height: 5px;\r\n  background: #ccc;\r\n}\r\n.green {\r\n  height: 100%;\r\n  background: green;\r\n}\r\n.circle {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background: green;\r\n  border-radius: 50%;\r\n}\r\n.song-time {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}