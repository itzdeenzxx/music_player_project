{"ast":null,"code":"import axios from 'axios';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nexport default {\n  name: 'PageMusic',\n  data() {\n    return {\n      musicList: [],\n      selectedMusic: null,\n      loading: true,\n      error: null,\n      title: 'All Music',\n      player: null,\n      isPlaying: false,\n      isLooping: false,\n      currentTime: 0,\n      duration: 0,\n      timeUpdateInterval: null,\n      noPadding: false\n    };\n  },\n  async created() {\n    // Load YouTube API\n    this.loadYouTubeAPI();\n\n    // If there's a search query parameter, use it to filter music\n    const searchQuery = this.$route.params.query;\n    if (searchQuery) {\n      this.title = `Search Results: \"${searchQuery}\"`;\n      await this.searchMusic(searchQuery);\n    } else {\n      await this.fetchAllMusic();\n    }\n  },\n  beforeUnmount() {\n    if (this.player) {\n      this.player.destroy();\n    }\n    if (this.timeUpdateInterval) {\n      clearInterval(this.timeUpdateInterval);\n    }\n  },\n  watch: {\n    '$route.params.query': {\n      handler: async function (newQuery) {\n        if (newQuery) {\n          this.title = `Search Results: \"${newQuery}\"`;\n          await this.searchMusic(newQuery);\n        } else {\n          this.title = 'All Music';\n          await this.fetchAllMusic();\n        }\n      }\n    }\n  },\n  methods: {\n    loadYouTubeAPI() {\n      if (!window.YT) {\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        const firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n        window.onYouTubeIframeAPIReady = () => {\n          this.initializeYouTubePlayer();\n        };\n      } else {\n        this.initializeYouTubePlayer();\n      }\n    },\n    initializeYouTubePlayer() {\n      if (this.selectedMusic) {\n        const videoId = this.extractVideoId(this.selectedMusic.ms_path);\n        this.player = new window.YT.Player('youtube-player', {\n          height: '720',\n          width: '1280',\n          videoId: videoId,\n          playerVars: {\n            controls: 0,\n            disablekb: 1,\n            enablejsapi: 1,\n            modestbranding: 1,\n            rel: 0,\n            showinfo: 0,\n            autoplay: 1\n          },\n          events: {\n            onReady: this.onPlayerReady,\n            onStateChange: this.onPlayerStateChange\n          }\n        });\n      }\n    },\n    onPlayerReady(event) {\n      event.target.playVideo();\n      this.duration = this.player.getDuration();\n      this.startTimeUpdate();\n    },\n    onPlayerStateChange(event) {\n      this.isPlaying = event.data === window.YT.PlayerState.PLAYING;\n\n      // Handle loop\n      if (event.data === window.YT.PlayerState.ENDED && this.isLooping) {\n        this.player.seekTo(0);\n        this.player.playVideo();\n      }\n    },\n    startTimeUpdate() {\n      this.timeUpdateInterval = setInterval(() => {\n        if (this.player && this.isPlaying) {\n          this.currentTime = this.player.getCurrentTime();\n        }\n      }, 1000);\n    },\n    async fetchAllMusic() {\n      this.loading = true;\n      try {\n        const response = await axios.get('http://localhost:3000/musics');\n        this.musicList = response.data;\n      } catch (error) {\n        console.error('Error fetching music:', error);\n        this.error = 'Failed to load music. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async searchMusic(query) {\n      this.loading = true;\n      try {\n        const response = await axios.get(`http://localhost:3000/musics/search/${query}`);\n        this.musicList = response.data;\n      } catch (error) {\n        console.error('Error searching music:', error);\n        this.error = 'Failed to search music. Please try again later.';\n      } finally {\n        this.loading = false;\n      }\n    },\n    extractVideoId(url) {\n      const regex = /(?:embed\\/|v=|\\/)([\\w-]{11})/;\n      const match = url.match(regex);\n      return match ? match[1] : null;\n    },\n    playMusic(music) {\n      this.selectedMusic = music;\n      if (this.player) {\n        this.player.destroy();\n      }\n      this.initializeYouTubePlayer();\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    },\n    togglePlay() {\n      if (this.isPlaying) {\n        this.player.pauseVideo();\n      } else {\n        this.player.playVideo();\n      }\n    },\n    toggleLoop() {\n      this.isLooping = !this.isLooping;\n    },\n    stopVideo() {\n      if (this.player) {\n        this.player.stopVideo();\n      }\n    },\n    handleTimelineChange(event) {\n      const time = Number(event.target.value);\n      this.player.seekTo(time);\n    },\n    formatTime(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = Math.floor(seconds % 60);\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    },\n    formatDuration(seconds) {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n      return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n    },\n    async addToFavorites(music) {\n      try {\n        await axios.post('http://localhost:3000/favorites/add', {\n          musicId: music.ms_id\n        });\n        alert('Added to favorites successfully!');\n      } catch (error) {\n        console.error('Error adding to favorites:', error);\n        alert('Failed to add to favorites. Please try again.');\n      }\n    },\n    hideMV() {\n      console.log(\"in func\");\n      this.noPadding = !this.noPadding;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","musicList","selectedMusic","loading","error","title","player","isPlaying","isLooping","currentTime","duration","timeUpdateInterval","noPadding","created","loadYouTubeAPI","searchQuery","$route","params","query","searchMusic","fetchAllMusic","beforeUnmount","destroy","clearInterval","watch","handler","newQuery","methods","window","YT","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","initializeYouTubePlayer","videoId","extractVideoId","ms_path","Player","height","width","playerVars","controls","disablekb","enablejsapi","modestbranding","rel","showinfo","autoplay","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","playVideo","getDuration","startTimeUpdate","PlayerState","PLAYING","ENDED","seekTo","setInterval","getCurrentTime","response","get","console","url","regex","match","playMusic","music","scrollTo","top","behavior","togglePlay","pauseVideo","toggleLoop","stopVideo","handleTimelineChange","time","Number","value","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","formatDuration","addToFavorites","post","musicId","ms_id","alert","hideMV","log"],"sources":["/Users/addeen/Desktop/project/frontend/src/components/PageMusic.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-4\">\r\n      <div class=\"row\">\r\n        <!-- Music Player Section -->\r\n        <div v-if=\"selectedMusic\" class=\"col-12 mb-4\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <div class=\"youtube-container\" :class=\"{ 'no-padding': noPadding }\">\r\n  <div id=\"youtube-player\"></div>\r\n</div>\r\n              <div class=\"mt-3\">\r\n                <h4>{{ selectedMusic.ms_name }}</h4>\r\n                <p class=\"text-muted\">\r\n                  Album: {{ selectedMusic.ms_album }} • \r\n                  Type: {{ selectedMusic.ms_type }} • \r\n                  Duration: {{ formatDuration(selectedMusic.ms_duration) }}\r\n                </p>\r\n  \r\n                <!-- Custom Player Controls -->\r\n                <div class=\"custom-player-controls\">\r\n                  <!-- Timeline -->\r\n                  <div class=\"timeline-container\">\r\n                    <input \r\n                      type=\"range\" \r\n                      class=\"timeline\" \r\n                      :value=\"currentTime\"\r\n                      :max=\"duration\"\r\n                      @input=\"handleTimelineChange\"\r\n                    >\r\n                    <div class=\"time-display\">\r\n                      {{ formatTime(currentTime) }} / {{ formatTime(duration) }}\r\n                    </div>\r\n                  </div>\r\n  \r\n                  <!-- Control Buttons -->\r\n                  <div class=\"controls-container\">\r\n                    <button @click=\"togglePlay\" class=\"control-btn\">\r\n                      <i :class=\"isPlaying ? 'fas fa-pause' : 'fas fa-play'\"></i>\r\n                    </button>\r\n                    <button @click=\"toggleLoop\" :class=\"['control-btn', { active: isLooping }]\">\r\n                      <i class=\"fas fa-redo\"></i>\r\n                    </button>\r\n                    <button @click=\"stopVideo\" class=\"control-btn\">\r\n                      <i class=\"fas fa-stop\"></i>\r\n                    </button>\r\n                    <button @click=\"addToFavorites(selectedMusic)\" class=\"control-btn\">\r\n                      <i class=\"fas fa-heart\"></i>\r\n                    </button>\r\n                  </div>\r\n                  <div @click=\"hideMV()\" class=\"btn-hide\">\r\n                      <button>Hide Music Video</button>\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- Music Grid -->\r\n        <div class=\"col-12\">\r\n          <h2 class=\"mb-4\">{{ title }}</h2>\r\n          \r\n          <div v-if=\"loading\" class=\"text-center py-5\">\r\n            <div class=\"spinner-border text-primary\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n  \r\n          <div v-else-if=\"error\" class=\"alert alert-warning\" role=\"alert\">\r\n            {{ error }}\r\n          </div>\r\n  \r\n          <div v-else-if=\"musicList.length === 0\" class=\"alert alert-info\" role=\"alert\">\r\n            ไม่สามารถพบเพลง\r\n          </div>\r\n  \r\n          <div v-else class=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            <div v-for=\"music in musicList\" :key=\"music.ms_id\" class=\"col\">\r\n              <div class=\"card h-100 music-card\">\r\n                <div class=\"card-body\">\r\n                  <h5 class=\"card-title\">{{ music.ms_name }}</h5>\r\n                  <p class=\"card-text\">\r\n                    <small class=\"text-muted\">\r\n                      Album: {{ music.ms_album }}<br>\r\n                      Type: {{ music.ms_type }}<br>\r\n                      Duration: {{ formatDuration(music.ms_duration) }}\r\n                    </small>\r\n                  </p>\r\n                  <div class=\"d-grid gap-2\">\r\n                    <button \r\n                      @click=\"playMusic(music)\" \r\n                      class=\"btn btn-primary\"\r\n                    >\r\n                      <i class=\"fas fa-play\"></i> Play\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import '@fortawesome/fontawesome-free/css/all.min.css';\r\n  export default {\r\n    name: 'PageMusic',\r\n    data() {\r\n      return {\r\n        musicList: [],\r\n        selectedMusic: null,\r\n        loading: true,\r\n        error: null,\r\n        title: 'All Music',\r\n        player: null,\r\n        isPlaying: false,\r\n        isLooping: false,\r\n        currentTime: 0,\r\n        duration: 0,\r\n        timeUpdateInterval: null,\r\n        noPadding: false,\r\n      };\r\n    },\r\n    async created() {\r\n      // Load YouTube API\r\n      this.loadYouTubeAPI();\r\n      \r\n      // If there's a search query parameter, use it to filter music\r\n      const searchQuery = this.$route.params.query;\r\n      if (searchQuery) {\r\n        this.title = `Search Results: \"${searchQuery}\"`;\r\n        await this.searchMusic(searchQuery);\r\n      } else {\r\n        await this.fetchAllMusic();\r\n      }\r\n    },\r\n    beforeUnmount() {\r\n      if (this.player) {\r\n        this.player.destroy();\r\n      }\r\n      if (this.timeUpdateInterval) {\r\n        clearInterval(this.timeUpdateInterval);\r\n      }\r\n    },\r\n    watch: {\r\n      '$route.params.query': {\r\n        handler: async function(newQuery) {\r\n          if (newQuery) {\r\n            this.title = `Search Results: \"${newQuery}\"`;\r\n            await this.searchMusic(newQuery);\r\n          } else {\r\n            this.title = 'All Music';\r\n            await this.fetchAllMusic();\r\n          }\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      loadYouTubeAPI() {\r\n        if (!window.YT) {\r\n          const tag = document.createElement('script');\r\n          tag.src = 'https://www.youtube.com/iframe_api';\r\n          const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n  \r\n          window.onYouTubeIframeAPIReady = () => {\r\n            this.initializeYouTubePlayer();\r\n          };\r\n        } else {\r\n          this.initializeYouTubePlayer();\r\n        }\r\n      },\r\n      initializeYouTubePlayer() {\r\n        if (this.selectedMusic) {\r\n          const videoId = this.extractVideoId(this.selectedMusic.ms_path);\r\n          this.player = new window.YT.Player('youtube-player', {\r\n            height: '720',\r\n            width: '1280',\r\n            videoId: videoId,\r\n            playerVars: {\r\n              controls: 0,\r\n              disablekb: 1,\r\n              enablejsapi: 1,\r\n              modestbranding: 1,\r\n              rel: 0,\r\n              showinfo: 0,\r\n              autoplay: 1\r\n            },\r\n            events: {\r\n              onReady: this.onPlayerReady,\r\n              onStateChange: this.onPlayerStateChange\r\n            }\r\n          });\r\n        }\r\n      },\r\n      onPlayerReady(event) {\r\n        event.target.playVideo();\r\n        this.duration = this.player.getDuration();\r\n        this.startTimeUpdate();\r\n      },\r\n      onPlayerStateChange(event) {\r\n        this.isPlaying = event.data === window.YT.PlayerState.PLAYING;\r\n        \r\n        // Handle loop\r\n        if (event.data === window.YT.PlayerState.ENDED && this.isLooping) {\r\n          this.player.seekTo(0);\r\n          this.player.playVideo();\r\n        }\r\n      },\r\n      startTimeUpdate() {\r\n        this.timeUpdateInterval = setInterval(() => {\r\n          if (this.player && this.isPlaying) {\r\n            this.currentTime = this.player.getCurrentTime();\r\n          }\r\n        }, 1000);\r\n      },\r\n      async fetchAllMusic() {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/musics');\r\n          this.musicList = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching music:', error);\r\n          this.error = 'Failed to load music. Please try again later.';\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      async searchMusic(query) {\r\n        this.loading = true;\r\n        try {\r\n          const response = await axios.get(`http://localhost:3000/musics/search/${query}`);\r\n          this.musicList = response.data;\r\n        } catch (error) {\r\n          console.error('Error searching music:', error);\r\n          this.error = 'Failed to search music. Please try again later.';\r\n        } finally {\r\n          this.loading = false;\r\n        }\r\n      },\r\n      extractVideoId(url) {\r\n        const regex = /(?:embed\\/|v=|\\/)([\\w-]{11})/;\r\n        const match = url.match(regex);\r\n        return match ? match[1] : null;\r\n      },\r\n      playMusic(music) {\r\n        this.selectedMusic = music;\r\n        if (this.player) {\r\n          this.player.destroy();\r\n        }\r\n        this.initializeYouTubePlayer();\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n      },\r\n      togglePlay() {\r\n        if (this.isPlaying) {\r\n          this.player.pauseVideo();\r\n        } else {\r\n          this.player.playVideo();\r\n        }\r\n      },\r\n      toggleLoop() {\r\n        this.isLooping = !this.isLooping;\r\n      },\r\n      stopVideo() {\r\n        if (this.player) {\r\n          this.player.stopVideo();\r\n        }\r\n      },\r\n      handleTimelineChange(event) {\r\n        const time = Number(event.target.value);\r\n        this.player.seekTo(time);\r\n      },\r\n      formatTime(seconds) {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = Math.floor(seconds % 60);\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n      },\r\n      formatDuration(seconds) {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n      },\r\n      async addToFavorites(music) {\r\n        try {\r\n          await axios.post('http://localhost:3000/favorites/add', {\r\n            musicId: music.ms_id\r\n          });\r\n          alert('Added to favorites successfully!');\r\n        } catch (error) {\r\n          console.error('Error adding to favorites:', error);\r\n          alert('Failed to add to favorites. Please try again.');\r\n        }\r\n      },\r\n      hideMV(){\r\n        console.log(\"in func\")\r\n        this.noPadding = !this.noPadding;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .music-card {\r\n    transition: transform 0.2s;\r\n  }\r\n  \r\n  .music-card:hover {\r\n    transform: translateY(-5px);\r\n  }\r\n  \r\n  .youtube-container {\r\n    position: relative;\r\n    padding-bottom: 56.25%;\r\n    height: 0;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .youtube-container #youtube-player {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  \r\n  .custom-player-controls {\r\n    margin-top: 1rem;\r\n    background: #f8f9fa;\r\n    padding: 1rem;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .timeline-container {\r\n    margin-bottom: 1rem;\r\n  }\r\n  \r\n  .timeline {\r\n    width: 100%;\r\n    height: 4px;\r\n    background: #ddd;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n  .youtube-container.no-padding {\r\n  padding-bottom: 0;\r\n}\r\n  .time-display {\r\n    text-align: right;\r\n    font-size: 0.875rem;\r\n    color: #666;\r\n  }\r\n  \r\n  .controls-container {\r\n    display: flex;\r\n    gap: 1rem;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .control-btn {\r\n    background: none;\r\n    border: none;\r\n    color: #333;\r\n    font-size: 1.25rem;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    border-radius: 50%;\r\n    width: 40px;\r\n    height: 40px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.2s;\r\n  }\r\n  \r\n  .control-btn:hover {\r\n    background: #e9ecef;\r\n  }\r\n  \r\n  .control-btn.active {\r\n    color: #007bff;\r\n    background: #e7f1ff;\r\n  }\r\n  .btn-hide {\r\n    display: flex;\r\n    margin: 20px;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n  }\r\n  input[type=\"range\"] {\r\n    -webkit-appearance: none;\r\n    width: 100%;\r\n    height: 4px;\r\n    background: #ddd;\r\n    border-radius: 2px;\r\n    outline: none;\r\n  }\r\n  \r\n  input[type=\"range\"]::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    width: 12px;\r\n    height: 12px;\r\n    background: #007bff;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  input[type=\"range\"]::-moz-range-thumb {\r\n    width: 12px;\r\n    height: 12px;\r\n    background: #007bff;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    border: none;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}